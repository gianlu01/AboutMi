{"version":3,"sources":["../../../src/components/geolocate-control.js"],"names":["React","createRef","PropTypes","WebMercatorViewport","mapboxgl","BaseControl","Marker","MapState","TransitionManager","isGeolocationSupported","LINEAR_TRANSITION_PROPS","Object","assign","defaultProps","transitionDuration","noop","propTypes","className","string","style","object","label","positionOptions","fitBoundsOptions","trackUserLocation","bool","showUserLocation","onViewStateChange","func","onViewportChange","onGeolocate","GeolocateControl","supportsGeolocation","markerPosition","console","warn","controlOptions","forEach","prop","props","_mapboxGeolocateControl","_watchState","_geolocateButton","_geolocateButtonRef","current","options","setAttribute","_updateMarker","_updateCamera","_setup","_context","eventManager","on","classList","add","remove","_map","map","trigger","position","setState","coords","center","LngLat","longitude","latitude","radius","accuracy","bounds","toBounds","_ne","lng","lat","_sw","viewport","_getBounds","zoom","fitBounds","newViewState","mapState","viewState","getViewportProps","type","callback","state","e","preventDefault","componentDidMount","then","result","_setupMapboxGeolocateControl","componentWillUnmount","geolocationWatchID","_geolocationWatchID","undefined","window","navigator","geolocation","clearWatch","_render","_renderMarker","_containerRef","_renderButton","_onClickGeolocate"],"mappings":"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","sourcesContent":["// @flow\n\n/* global window */\nimport React, {createRef} from 'react';\nimport PropTypes from 'prop-types';\nimport WebMercatorViewport from 'viewport-mercator-project';\n\nimport mapboxgl from '../utils/mapboxgl';\n\nimport BaseControl from './base-control';\nimport Marker from './marker';\nimport MapState from '../utils/map-state';\nimport TransitionManager from '../utils/transition-manager';\nimport {isGeolocationSupported} from '../utils/geolocate-utils';\n\nimport type {BaseControlProps} from './base-control';\n\nconst LINEAR_TRANSITION_PROPS = Object.assign({}, TransitionManager.defaultProps, {\n  transitionDuration: 500\n});\n\nconst noop = () => {};\n\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\n  // Custom className\n  className: PropTypes.string,\n  style: PropTypes.object,\n  // Custom label assigned to the control\n  label: PropTypes.string,\n\n  // mapbox geolocate options\n  // https://docs.mapbox.com/mapbox-gl-js/api/#geolocatecontrol\n  positionOptions: PropTypes.object,\n  fitBoundsOptions: PropTypes.object,\n  trackUserLocation: PropTypes.bool,\n  showUserLocation: PropTypes.bool,\n\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n\n  onGeolocate: PropTypes.func\n});\n\nconst defaultProps = Object.assign({}, BaseControl.defaultProps, {\n  className: '',\n  style: {},\n  label: 'Geolocate',\n\n  // mapbox geolocate options\n  positionOptions: null,\n  fitBoundsOptions: null,\n  trackUserLocation: false,\n  showUserLocation: true,\n\n  onGeolocate: () => {}\n});\n\nexport type GeolocateControlProps = BaseControlProps & {\n  className: string,\n  style: Object,\n  label: string,\n  positionOptions: any,\n  fitBoundsOptions: any,\n  trackUserLocation: boolean,\n  showUserLocation: boolean,\n  onViewStateChange?: Function,\n  onViewportChange?: Function,\n  onGeolocate?: Function\n};\n\ntype Coordinate = {\n  longitude: number,\n  latitude: number,\n  accuracy: number\n};\ntype Position = {\n  coords: Coordinate\n};\ntype State = {\n  supportsGeolocation: boolean,\n  markerPosition: ?Coordinate\n};\ntype GeolocateControlOptions = {\n  positionOptions?: any,\n  fitBoundsOptions?: any,\n  trackUserLocation?: boolean,\n  showUserLocation?: boolean\n};\n\nexport default class GeolocateControl extends BaseControl<\n  GeolocateControlProps,\n  State,\n  HTMLDivElement\n> {\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n\n  state = {\n    supportsGeolocation: false,\n    markerPosition: null\n  };\n\n  _mapboxGeolocateControl: any = null;\n\n  _geolocateButtonRef: {current: null | HTMLButtonElement} = createRef();\n\n  componentDidMount() {\n    isGeolocationSupported().then(result => {\n      this.setState({supportsGeolocation: result});\n      this._setupMapboxGeolocateControl(result);\n    });\n  }\n\n  componentWillUnmount() {\n    // re-implement MapboxGeolocateControl's _onRemove\n    // clear the geolocation watch if exists\n    if (this._mapboxGeolocateControl) {\n      const geolocationWatchID = this._mapboxGeolocateControl._geolocationWatchID;\n      if (geolocationWatchID !== undefined) {\n        window.navigator.geolocation.clearWatch(geolocationWatchID);\n        this._mapboxGeolocateControl._geolocationWatchID = undefined;\n      }\n    }\n  }\n\n  _setupMapboxGeolocateControl = (supportsGeolocation: boolean) => {\n    if (!supportsGeolocation) {\n      /* eslint-disable no-console, no-undef */\n      console.warn(\n        'Geolocation support is not available, the GeolocateControl will not be visible.'\n      );\n      /* eslint-enable no-console, no-undef */\n      return;\n    }\n\n    // For null option, use Mapbox default value\n    const controlOptions: GeolocateControlOptions = {\n      // disable showUserLocation to avoid Mapbox accessing marker before rendering\n      showUserLocation: false\n    };\n    ['positionOptions', 'fitBoundsOptions', 'trackUserLocation'].forEach(prop => {\n      if (prop in this.props && this.props[prop] !== null) {\n        controlOptions[prop] = this.props[prop];\n      }\n    });\n\n    this._mapboxGeolocateControl = new mapboxgl.GeolocateControl(controlOptions);\n\n    // the following re-implement MapboxGeolocateControl's _setupUI\n    // replace mapbox internal prop\n    this._mapboxGeolocateControl._watchState = 'OFF';\n\n    // replace mapbox internal UI elements\n    this._mapboxGeolocateControl._geolocateButton = this._geolocateButtonRef.current;\n    if (\n      this._mapboxGeolocateControl.options.trackUserLocation &&\n      this._mapboxGeolocateControl._geolocateButton\n    ) {\n      this._mapboxGeolocateControl._geolocateButton.setAttribute('aria-pressed', 'false');\n    }\n\n    // replace mapbox internal methods\n    this._mapboxGeolocateControl._updateMarker = this._updateMarker;\n    this._mapboxGeolocateControl._updateCamera = this._updateCamera;\n\n    this._mapboxGeolocateControl._setup = true;\n\n    // when the camera is changed (and it's not as a result of the Geolocation Control) change\n    // the watch mode to background watch, so that the marker is updated but not the camera.\n    if (this._mapboxGeolocateControl.options.trackUserLocation) {\n      this._context.eventManager.on('panstart', () => {\n        if (this._mapboxGeolocateControl._watchState === 'ACTIVE_LOCK') {\n          this._mapboxGeolocateControl._watchState = 'BACKGROUND';\n          this._mapboxGeolocateControl._geolocateButton.classList.add(\n            'mapboxgl-ctrl-geolocate-background'\n          );\n          this._mapboxGeolocateControl._geolocateButton.classList.remove(\n            'mapboxgl-ctrl-geolocate-active'\n          );\n        }\n      });\n    }\n\n    this._mapboxGeolocateControl.on('geolocate', this.props.onGeolocate);\n  };\n\n  _onClickGeolocate = () => {\n    this._mapboxGeolocateControl._map = this._context.map;\n\n    if (this.props.showUserLocation) {\n      this._mapboxGeolocateControl.on('geolocate', this._updateMarker);\n      this._mapboxGeolocateControl.on('trackuserlocationend', this._updateMarker);\n    }\n\n    return this._mapboxGeolocateControl.trigger();\n  };\n\n  _updateMarker = (position: Position) => {\n    if (position) {\n      this.setState({markerPosition: position.coords});\n    }\n  };\n\n  _getBounds = (position: Position) => {\n    const center = new mapboxgl.LngLat(position.coords.longitude, position.coords.latitude);\n    const radius = position.coords.accuracy;\n    const bounds = center.toBounds(radius);\n\n    return [[bounds._ne.lng, bounds._ne.lat], [bounds._sw.lng, bounds._sw.lat]];\n  };\n\n  _updateCamera = (position: Position) => {\n    const {viewport} = this._context;\n\n    const bounds = this._getBounds(position);\n    const {longitude, latitude, zoom} = new WebMercatorViewport(viewport).fitBounds(bounds);\n\n    const newViewState = Object.assign({}, viewport, {\n      longitude,\n      latitude,\n      zoom\n    });\n    const mapState = new MapState(newViewState);\n    const viewState = Object.assign({}, mapState.getViewportProps(), LINEAR_TRANSITION_PROPS);\n\n    const onViewportChange = this.props.onViewportChange || this._context.onViewportChange || noop;\n    const onViewStateChange =\n      this.props.onViewStateChange || this._context.onViewStateChange || noop;\n\n    // Call new style callback\n    onViewStateChange({viewState});\n\n    // Call old style callback\n    onViewportChange(viewState);\n  };\n\n  _renderButton = (type: string, label: string, callback: Function) => {\n    return (\n      <button\n        key={type}\n        className={`mapboxgl-ctrl-icon mapboxgl-ctrl-${type}`}\n        ref={this._geolocateButtonRef}\n        type=\"button\"\n        title={label}\n        onClick={callback}\n      >\n        <span className=\"mapboxgl-ctrl-icon\" aria-hidden=\"true\" />\n      </button>\n    );\n  };\n\n  _renderMarker = () => {\n    const {markerPosition} = this.state;\n    const {showUserLocation} = this.props;\n    if (!markerPosition || !showUserLocation) {\n      return null;\n    }\n\n    return (\n      // $FlowFixMe\n      <Marker\n        key=\"location-maker\"\n        className=\"mapboxgl-user-location-dot\"\n        longitude={markerPosition.longitude}\n        latitude={markerPosition.latitude}\n        onContextMenu={e => e.preventDefault()}\n        captureDrag={false}\n        captureDoubleClick={false}\n      />\n    );\n  };\n\n  _render() {\n    if (!this.state.supportsGeolocation) {\n      return null;\n    }\n\n    const {className, style, label} = this.props;\n    return (\n      <div>\n        {this._renderMarker()}\n        <div\n          key=\"geolocate-control\"\n          className={`mapboxgl-ctrl mapboxgl-ctrl-group ${className}`}\n          ref={this._containerRef}\n          style={style}\n          onContextMenu={e => e.preventDefault()}\n        >\n          {this._renderButton('geolocate', label, this._onClickGeolocate)}\n        </div>\n      </div>\n    );\n  }\n}\n"],"file":"geolocate-control.js"}