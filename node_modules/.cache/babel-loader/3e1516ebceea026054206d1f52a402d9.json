{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"uuid/v1\"));\n\nvar _constants = require(\"../constants\");\n\nvar _utils = require(\"./utils\");\n\nvar _baseMode = _interopRequireDefault(require(\"./base-mode\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar DrawPolygonMode =\n/*#__PURE__*/\nfunction (_BaseMode) {\n  _inherits(DrawPolygonMode, _BaseMode);\n\n  function DrawPolygonMode() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DrawPolygonMode);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DrawPolygonMode)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function (event, props) {\n      var picked = event.picks && event.picks[0];\n      var data = props.data; // update tentative feature\n\n      var tentativeFeature = _this.getTentativeFeature(); // add position to tentativeFeature\n      // if click the first editHandle, commit tentativeFeature to featureCollection\n\n\n      if (tentativeFeature) {\n        var pickedObject = picked && picked.object; // clicked an editHandle of a tentative feature\n\n        if (pickedObject && pickedObject.index === 0) {\n          _this.setTentativeFeature(null); // append point to the tail, close the polygon\n\n\n          var coordinates = (0, _utils.getFeatureCoordinates)(tentativeFeature);\n\n          if (!coordinates) {\n            return;\n          }\n\n          coordinates.push(coordinates[0]);\n          tentativeFeature = {\n            type: 'Feature',\n            properties: {\n              // TODO deprecate id\n              id: tentativeFeature.properties.id,\n              renderType: _constants.RENDER_TYPE.POLYGON\n            },\n            geometry: {\n              type: _constants.GEOJSON_TYPE.POLYGON,\n              coordinates: [coordinates]\n            }\n          };\n          var updatedData = data.addFeature(tentativeFeature).getObject();\n          props.onEdit({\n            editType: _constants.EDIT_TYPE.ADD_FEATURE,\n            updatedData: updatedData,\n            editContext: null\n          });\n        } else {\n          // update tentativeFeature\n          tentativeFeature = _objectSpread({}, tentativeFeature, {\n            geometry: {\n              type: _constants.GEOJSON_TYPE.LINE_STRING,\n              coordinates: _toConsumableArray(tentativeFeature.geometry.coordinates).concat([event.mapCoords])\n            }\n          });\n\n          _this.setTentativeFeature(tentativeFeature);\n        }\n      } else {\n        // create a tentativeFeature\n        tentativeFeature = {\n          type: 'Feature',\n          properties: {\n            // TODO deprecate id\n            id: (0, _v.default)(),\n            renderType: _constants.RENDER_TYPE.POLYGON,\n            guideType: _constants.GUIDE_TYPE.TENTATIVE\n          },\n          geometry: {\n            type: _constants.GEOJSON_TYPE.POINT,\n            coordinates: [event.mapCoords]\n          }\n        };\n\n        _this.setTentativeFeature(tentativeFeature);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getGuides\", function (props) {\n      var tentativeFeature = _this.getTentativeFeature();\n\n      var coordinates = (0, _utils.getFeatureCoordinates)(tentativeFeature);\n\n      if (!coordinates) {\n        return null;\n      }\n\n      var event = props.lastPointerMoveEvent; // existing editHandles + cursorEditHandle\n\n      var editHandles = _this.getEditHandlesFromFeature(tentativeFeature) || [];\n      var cursorEditHandle = {\n        type: 'Feature',\n        properties: {\n          guideType: _constants.GUIDE_TYPE.CURSOR_EDIT_HANDLE,\n          // TODO remove renderType\n          renderType: _constants.RENDER_TYPE.POLYGON,\n          positionIndexes: [editHandles.length]\n        },\n        geometry: {\n          type: _constants.GEOJSON_TYPE.POINT,\n          coordinates: [event.mapCoords]\n        }\n      };\n      editHandles.push(cursorEditHandle); // tentativeFeature\n\n      tentativeFeature = _objectSpread({}, tentativeFeature, {\n        geometry: {\n          type: _constants.GEOJSON_TYPE.LINE_STRING,\n          coordinates: _toConsumableArray(coordinates).concat([event.mapCoords])\n        }\n      });\n      return {\n        tentativeFeature: tentativeFeature,\n        editHandles: editHandles\n      };\n    });\n\n    return _this;\n  }\n\n  return DrawPolygonMode;\n}(_baseMode.default);\n\nexports.default = DrawPolygonMode;","map":null,"metadata":{},"sourceType":"script"}