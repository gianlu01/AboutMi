{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _constants = require(\"../constants\");\n\nvar _utils = require(\"./utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar BaseMode =\n/*#__PURE__*/\nfunction () {\n  function BaseMode() {\n    var _this = this;\n\n    _classCallCheck(this, BaseMode);\n\n    _defineProperty(this, \"_tentativeFeature\", void 0);\n\n    _defineProperty(this, \"_editHandles\", void 0);\n\n    _defineProperty(this, \"getTentativeFeature\", function () {\n      return _this._tentativeFeature;\n    });\n\n    _defineProperty(this, \"getEditHandles\", function () {\n      return _this._editHandles;\n    });\n\n    _defineProperty(this, \"setTentativeFeature\", function (feature) {\n      _this._tentativeFeature = feature;\n    });\n\n    _defineProperty(this, \"getSelectedFeature\", function (props, featureIndex) {\n      var data = props.data,\n          selectedIndexes = props.selectedIndexes;\n      var featureCollection = data.getObject();\n      var features = featureCollection && featureCollection.features;\n      var selectedIndex = (0, _utils.isNumeric)(featureIndex) ? Number(featureIndex) : selectedIndexes && selectedIndexes[0];\n      return features && features[selectedIndex];\n    });\n\n    this._tentativeFeature = null;\n    this._editHandles = null;\n  }\n\n  _createClass(BaseMode, [{\n    key: \"handleClick\",\n    value: function handleClick(event, props) {}\n  }, {\n    key: \"handlePointerMove\",\n    value: function handlePointerMove(event, props) {}\n  }, {\n    key: \"handleStartDragging\",\n    value: function handleStartDragging(event, props) {}\n  }, {\n    key: \"handleStopDragging\",\n    value: function handleStopDragging(event, props) {}\n  }, {\n    key: \"getGuides\",\n    value: function getGuides(props) {}\n  }, {\n    key: \"getEditHandlesFromFeature\",\n    value: function getEditHandlesFromFeature(feature, featureIndex) {\n      var coordinates = (0, _utils.getFeatureCoordinates)(feature);\n\n      if (!coordinates) {\n        return null;\n      }\n\n      return coordinates.map(function (coord, i) {\n        return {\n          type: 'Feature',\n          properties: {\n            // TODO deprecate renderType\n            renderType: feature.properties.renderType,\n            guideType: _constants.GUIDE_TYPE.EDIT_HANDLE,\n            featureIndex: featureIndex,\n            positionIndexes: [i]\n          },\n          geometry: {\n            type: _constants.GEOJSON_TYPE.POINT,\n            coordinates: [coord]\n          }\n        };\n      });\n    }\n  }]);\n\n  return BaseMode;\n}();\n\nexports.default = BaseMode;","map":null,"metadata":{},"sourceType":"script"}