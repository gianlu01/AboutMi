{"ast":null,"code":"var _toConsumableArray = require(\"C:\\\\Users\\\\michele\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\");\n\nvar CommonSelectors = require('../lib/common_selectors');\n\nvar isEventAtCoordinates = require('../lib/is_event_at_coordinates');\n\nvar doubleClickZoom = require('../lib/double_click_zoom');\n\nvar Constants = require('../constants');\n\nvar createVertex = require('../lib/create_vertex');\n\nvar DrawLineString = {};\n\nDrawLineString.onSetup = function (opts) {\n  opts = opts || {};\n  var featureId = opts.featureId;\n  var line, currentVertexPosition;\n  var direction = 'forward';\n\n  if (featureId) {\n    line = this.getFeature(featureId);\n\n    if (!line) {\n      throw new Error('Could not find a feature with the provided featureId');\n    }\n\n    var from = opts.from;\n\n    if (from && from.type === 'Feature' && from.geometry && from.geometry.type === 'Point') {\n      from = from.geometry;\n    }\n\n    if (from && from.type === 'Point' && from.coordinates && from.coordinates.length === 2) {\n      from = from.coordinates;\n    }\n\n    if (!from || !Array.isArray(from)) {\n      throw new Error('Please use the `from` property to indicate which point to continue the line from');\n    }\n\n    var lastCoord = line.coordinates.length - 1;\n\n    if (line.coordinates[lastCoord][0] === from[0] && line.coordinates[lastCoord][1] === from[1]) {\n      var _line;\n\n      currentVertexPosition = lastCoord + 1; // add one new coordinate to continue from\n\n      (_line = line).addCoordinate.apply(_line, [currentVertexPosition].concat(_toConsumableArray(line.coordinates[lastCoord])));\n    } else if (line.coordinates[0][0] === from[0] && line.coordinates[0][1] === from[1]) {\n      var _line2;\n\n      direction = 'backwards';\n      currentVertexPosition = 0; // add one new coordinate to continue from\n\n      (_line2 = line).addCoordinate.apply(_line2, [currentVertexPosition].concat(_toConsumableArray(line.coordinates[0])));\n    } else {\n      throw new Error('`from` should match the point at either the start or the end of the provided LineString');\n    }\n  } else {\n    line = this.newFeature({\n      type: Constants.geojsonTypes.FEATURE,\n      properties: {},\n      geometry: {\n        type: Constants.geojsonTypes.LINE_STRING,\n        coordinates: []\n      }\n    });\n    currentVertexPosition = 0;\n    this.addFeature(line);\n  }\n\n  this.clearSelectedFeatures();\n  doubleClickZoom.disable(this);\n  this.updateUIClasses({\n    mouse: Constants.cursors.ADD\n  });\n  this.activateUIButton(Constants.types.LINE);\n  this.setActionableState({\n    trash: true\n  });\n  return {\n    line: line,\n    currentVertexPosition: currentVertexPosition,\n    direction: direction\n  };\n};\n\nDrawLineString.clickAnywhere = function (state, e) {\n  if (state.currentVertexPosition > 0 && isEventAtCoordinates(e, state.line.coordinates[state.currentVertexPosition - 1]) || state.direction === 'backwards' && isEventAtCoordinates(e, state.line.coordinates[state.currentVertexPosition + 1])) {\n    return this.changeMode(Constants.modes.SIMPLE_SELECT, {\n      featureIds: [state.line.id]\n    });\n  }\n\n  this.updateUIClasses({\n    mouse: Constants.cursors.ADD\n  });\n  state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\n\n  if (state.direction === 'forward') {\n    state.currentVertexPosition++;\n    state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\n  } else {\n    state.line.addCoordinate(0, e.lngLat.lng, e.lngLat.lat);\n  }\n};\n\nDrawLineString.clickOnVertex = function (state) {\n  return this.changeMode(Constants.modes.SIMPLE_SELECT, {\n    featureIds: [state.line.id]\n  });\n};\n\nDrawLineString.onMouseMove = function (state, e) {\n  state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\n\n  if (CommonSelectors.isVertex(e)) {\n    this.updateUIClasses({\n      mouse: Constants.cursors.POINTER\n    });\n  }\n};\n\nDrawLineString.onTap = DrawLineString.onClick = function (state, e) {\n  if (CommonSelectors.isVertex(e)) return this.clickOnVertex(state, e);\n  this.clickAnywhere(state, e);\n};\n\nDrawLineString.onKeyUp = function (state, e) {\n  if (CommonSelectors.isEnterKey(e)) {\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {\n      featureIds: [state.line.id]\n    });\n  } else if (CommonSelectors.isEscapeKey(e)) {\n    this.deleteFeature([state.line.id], {\n      silent: true\n    });\n    this.changeMode(Constants.modes.SIMPLE_SELECT);\n  }\n};\n\nDrawLineString.onStop = function (state) {\n  doubleClickZoom.enable(this);\n  this.activateUIButton(); // check to see if we've deleted this feature\n\n  if (this.getFeature(state.line.id) === undefined) return; //remove last added coordinate\n\n  state.line.removeCoordinate(\"\".concat(state.currentVertexPosition));\n\n  if (state.line.isValid()) {\n    this.map.fire(Constants.events.CREATE, {\n      features: [state.line.toGeoJSON()]\n    });\n  } else {\n    this.deleteFeature([state.line.id], {\n      silent: true\n    });\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {}, {\n      silent: true\n    });\n  }\n};\n\nDrawLineString.onTrash = function (state) {\n  this.deleteFeature([state.line.id], {\n    silent: true\n  });\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nDrawLineString.toDisplayFeatures = function (state, geojson, display) {\n  var isActiveLine = geojson.properties.id === state.line.id;\n  geojson.properties.active = isActiveLine ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  if (!isActiveLine) return display(geojson); // Only render the line if it has at least one real coordinate\n\n  if (geojson.geometry.coordinates.length < 2) return;\n  geojson.properties.meta = Constants.meta.FEATURE;\n  display(createVertex(state.line.id, geojson.geometry.coordinates[state.direction === 'forward' ? geojson.geometry.coordinates.length - 2 : 1], \"\".concat(state.direction === 'forward' ? geojson.geometry.coordinates.length - 2 : 1), false));\n  display(geojson);\n};\n\nmodule.exports = DrawLineString;","map":{"version":3,"sources":["C:/Users/michele/Desktop/IT/Code/react/aboutmi/node_modules/@mapbox/mapbox-gl-draw/src/modes/draw_line_string.js"],"names":["CommonSelectors","require","isEventAtCoordinates","doubleClickZoom","Constants","createVertex","DrawLineString","onSetup","opts","featureId","line","currentVertexPosition","direction","getFeature","Error","from","type","geometry","coordinates","length","Array","isArray","lastCoord","addCoordinate","newFeature","geojsonTypes","FEATURE","properties","LINE_STRING","addFeature","clearSelectedFeatures","disable","updateUIClasses","mouse","cursors","ADD","activateUIButton","types","LINE","setActionableState","trash","clickAnywhere","state","e","changeMode","modes","SIMPLE_SELECT","featureIds","id","updateCoordinate","lngLat","lng","lat","clickOnVertex","onMouseMove","isVertex","POINTER","onTap","onClick","onKeyUp","isEnterKey","isEscapeKey","deleteFeature","silent","onStop","enable","undefined","removeCoordinate","isValid","map","fire","events","CREATE","features","toGeoJSON","onTrash","toDisplayFeatures","geojson","display","isActiveLine","active","activeStates","ACTIVE","INACTIVE","meta","module","exports"],"mappings":"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","sourcesContent":["const CommonSelectors = require('../lib/common_selectors');\r\nconst isEventAtCoordinates = require('../lib/is_event_at_coordinates');\r\nconst doubleClickZoom = require('../lib/double_click_zoom');\r\nconst Constants = require('../constants');\r\nconst createVertex = require('../lib/create_vertex');\r\n\r\nconst DrawLineString = {};\r\n\r\nDrawLineString.onSetup = function(opts) {\r\n  opts = opts || {};\r\n  const featureId = opts.featureId;\r\n\r\n  let line, currentVertexPosition;\r\n  let direction = 'forward';\r\n  if (featureId) {\r\n    line = this.getFeature(featureId);\r\n    if (!line) {\r\n      throw new Error('Could not find a feature with the provided featureId');\r\n    }\r\n    let from = opts.from;\r\n    if (from && from.type === 'Feature' && from.geometry && from.geometry.type === 'Point') {\r\n      from = from.geometry;\r\n    }\r\n    if (from && from.type === 'Point' && from.coordinates && from.coordinates.length === 2) {\r\n      from = from.coordinates;\r\n    }\r\n    if (!from || !Array.isArray(from)) {\r\n      throw new Error('Please use the `from` property to indicate which point to continue the line from');\r\n    }\r\n    const lastCoord = line.coordinates.length - 1;\r\n    if (line.coordinates[lastCoord][0] === from[0] && line.coordinates[lastCoord][1] === from[1]) {\r\n      currentVertexPosition = lastCoord + 1;\r\n      // add one new coordinate to continue from\r\n      line.addCoordinate(currentVertexPosition, ...line.coordinates[lastCoord]);\r\n    } else if (line.coordinates[0][0] === from[0] && line.coordinates[0][1] === from[1]) {\r\n      direction = 'backwards';\r\n      currentVertexPosition = 0;\r\n      // add one new coordinate to continue from\r\n      line.addCoordinate(currentVertexPosition, ...line.coordinates[0]);\r\n    } else {\r\n      throw new Error('`from` should match the point at either the start or the end of the provided LineString');\r\n    }\r\n  } else {\r\n    line = this.newFeature({\r\n      type: Constants.geojsonTypes.FEATURE,\r\n      properties: {},\r\n      geometry: {\r\n        type: Constants.geojsonTypes.LINE_STRING,\r\n        coordinates: []\r\n      }\r\n    });\r\n    currentVertexPosition = 0;\r\n    this.addFeature(line);\r\n  }\r\n\r\n  this.clearSelectedFeatures();\r\n  doubleClickZoom.disable(this);\r\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\r\n  this.activateUIButton(Constants.types.LINE);\r\n  this.setActionableState({\r\n    trash: true\r\n  });\r\n\r\n  return {\r\n    line,\r\n    currentVertexPosition,\r\n    direction\r\n  };\r\n};\r\n\r\nDrawLineString.clickAnywhere = function(state, e) {\r\n  if (state.currentVertexPosition > 0 && isEventAtCoordinates(e, state.line.coordinates[state.currentVertexPosition - 1]) ||\r\n      state.direction === 'backwards' && isEventAtCoordinates(e, state.line.coordinates[state.currentVertexPosition + 1])) {\r\n    return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.line.id] });\r\n  }\r\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\r\n  state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\r\n  if (state.direction === 'forward') {\r\n    state.currentVertexPosition++;\r\n    state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\r\n  } else {\r\n    state.line.addCoordinate(0, e.lngLat.lng, e.lngLat.lat);\r\n  }\r\n};\r\n\r\nDrawLineString.clickOnVertex = function(state) {\r\n  return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.line.id] });\r\n};\r\n\r\nDrawLineString.onMouseMove = function(state, e) {\r\n  state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\r\n  if (CommonSelectors.isVertex(e)) {\r\n    this.updateUIClasses({ mouse: Constants.cursors.POINTER });\r\n  }\r\n};\r\n\r\nDrawLineString.onTap = DrawLineString.onClick = function(state, e) {\r\n  if (CommonSelectors.isVertex(e)) return this.clickOnVertex(state, e);\r\n  this.clickAnywhere(state, e);\r\n};\r\n\r\nDrawLineString.onKeyUp = function(state, e) {\r\n  if (CommonSelectors.isEnterKey(e)) {\r\n    this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.line.id] });\r\n  } else if (CommonSelectors.isEscapeKey(e)) {\r\n    this.deleteFeature([state.line.id], { silent: true });\r\n    this.changeMode(Constants.modes.SIMPLE_SELECT);\r\n  }\r\n};\r\n\r\nDrawLineString.onStop = function(state) {\r\n  doubleClickZoom.enable(this);\r\n  this.activateUIButton();\r\n\r\n  // check to see if we've deleted this feature\r\n  if (this.getFeature(state.line.id) === undefined) return;\r\n\r\n  //remove last added coordinate\r\n  state.line.removeCoordinate(`${state.currentVertexPosition}`);\r\n  if (state.line.isValid()) {\r\n    this.map.fire(Constants.events.CREATE, {\r\n      features: [state.line.toGeoJSON()]\r\n    });\r\n  } else {\r\n    this.deleteFeature([state.line.id], { silent: true });\r\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {}, { silent: true });\r\n  }\r\n};\r\n\r\nDrawLineString.onTrash = function(state) {\r\n  this.deleteFeature([state.line.id], { silent: true });\r\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\r\n};\r\n\r\nDrawLineString.toDisplayFeatures = function(state, geojson, display) {\r\n  const isActiveLine = geojson.properties.id === state.line.id;\r\n  geojson.properties.active = (isActiveLine) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\r\n  if (!isActiveLine) return display(geojson);\r\n  // Only render the line if it has at least one real coordinate\r\n  if (geojson.geometry.coordinates.length < 2) return;\r\n  geojson.properties.meta = Constants.meta.FEATURE;\r\n  display(createVertex(\r\n    state.line.id,\r\n    geojson.geometry.coordinates[state.direction === 'forward' ? geojson.geometry.coordinates.length - 2 : 1],\r\n    `${state.direction === 'forward' ? geojson.geometry.coordinates.length - 2 : 1}`,\r\n    false\r\n  ));\r\n\r\n  display(geojson);\r\n};\r\n\r\nmodule.exports = DrawLineString;\r\n"]},"metadata":{},"sourceType":"script"}