{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\michi\\\\OneDrive\\\\Desktop\\\\AboutMi\\\\src\\\\components\\\\Maps.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactMapboxGl, { Layer, Marker, Feature, GeoJSONLayer, Cluster } from \"react-mapbox-gl\";\nimport DrawControl from \"react-mapbox-gl-draw\";\nimport \"@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css\";\nimport * as turf from '@turf/turf';\nimport mIcon from \"../icons/marker.svg\";\nimport { Popup } from \"mapbox-gl\"; //import Dati from '../data/Dati.json'\n//accessToken: 'pk.eyJ1IjoiZ2lhbmx1MDEiLCJhIjoiY2s1ejQ0a2gyMDY5NjNtcWp5cGF4Y21wMiJ9.S2-22wqQvv8B0aiya-Mh7A';\n//site URL: mapbox://styles/gianlu01/ck5z9olku3d2r1jov9drsa1uu\n//geoJson URL: http://dati.comune.milano.it/dataset/ds252-economia-locali-pubblico-spettacolo/resource/e5e1c5ed-03b9-415e-9880-a2c163e4973f/view/76fa6876-f208-440f-a57c-6b3d71e52278\n\nconst Map = ReactMapboxGl({\n  accessToken: \"pk.eyJ1IjoiZ2lhbmx1MDEiLCJhIjoiY2s1ejQ0a2gyMDY5NjNtcWp5cGF4Y21wMiJ9.S2-22wqQvv8B0aiya-Mh7A\",\n  minZoom: 8,\n  maxZoom: 17\n});\n\nclass Maps extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stato: false,\n      markers: {},\n      appoggio: {},\n      mapCenter: [9.19, 45.466944],\n      geoLocation: navigator.geolocation.getCurrentPosition(posizione => {\n        return [posizione.coords.latitude, posizione.coords.longitude];\n      })\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://michelebanfi.github.io/datasethosting/economia_locale_pubblico_spettacolo.geojson', {\n      method: \"GET\"\n    }).then(response => {\n      return response.text();\n    }).then(a => {\n      this.setState({\n        markers: JSON.parse(a),\n        appoggio: JSON.parse(a)\n      });\n    });\n  }\n\n  render() {\n    const controls = {\n      polygon: true,\n      trash: true,\n      point: false,\n      line_string: false,\n      combine_features: false,\n      uncombine_features: false\n    };\n\n    const onDrawCreate = ({\n      features\n    }) => {\n      var c = this.state.markers;\n\n      for (var u = 0; u < c.features.length; u++) {\n        if (c.features[u].geometry.coordinates.length == 0) c.features.splice(u, 1);\n      }\n\n      var result = turf.pointsWithinPolygon(c, this.drawControl.draw.getAll());\n\n      if (result.features.length <= 0) {\n        alert(\"Nessun locale trovato\");\n      } else if (result.features.length > 60) {\n        alert(\"Hai selezionato un'area troppo grande\");\n      } else {\n        this.setState({\n          stato: true,\n          markers: result\n        });\n      }\n    };\n\n    const onDrawDelete = ({\n      feature\n    }) => {\n      this.setState({\n        stato: false,\n        markers: this.state.appoggio\n      });\n    };\n\n    const MM = () => {\n      if (this.state.stato) {\n        return this.state.markers.features.map(point => React.createElement(Marker, {\n          coordinates: point.geometry.coordinates,\n          anchor: \"bottom\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          style: {\n            background: 'none',\n            border: 'none',\n            cursor: 'pointer'\n          },\n          onClick: apri => {\n            apri.preventDefault();\n            console.log(point.geometry.coordinates);\n            return React.createElement(Popup, {\n              latitude: point.geometry.coordinates[0],\n              longitude: point.geometry.coordinates[1],\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 99\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 103\n              },\n              __self: this\n            }, point.properties.insegna.toUpperCase()));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, \"/*\", point.properties.insegna.toUpperCase(), \"*/\", React.createElement(\"img\", {\n          src: mIcon,\n          style: {\n            width: '10%',\n            height: '10%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }))));\n      }\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Map, {\n      style: \"mapbox://styles/mapbox/streets-v9\" // eslint-disable-line\n      ,\n      containerStyle: {\n        height: \"100vh\",\n        width: \"100%\"\n      },\n      center: this.state.mapCenter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, MM(), React.createElement(DrawControl, {\n      onDrawCreate: onDrawCreate,\n      onDrawDelete: onDrawDelete,\n      controls: controls,\n      ref: drawControl => {\n        this.drawControl = drawControl;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Maps;","map":{"version":3,"sources":["C:/Users/michi/OneDrive/Desktop/AboutMi/src/components/Maps.js"],"names":["React","ReactDOM","ReactMapboxGl","Layer","Marker","Feature","GeoJSONLayer","Cluster","DrawControl","turf","Popup","Map","accessToken","minZoom","maxZoom","Maps","Component","constructor","props","state","stato","markers","appoggio","mapCenter","geoLocation","navigator","geolocation","getCurrentPosition","posizione","coords","latitude","longitude","componentDidMount","fetch","method","then","response","text","a","setState","JSON","parse","render","controls","polygon","trash","point","line_string","combine_features","uncombine_features","onDrawCreate","features","c","u","length","geometry","coordinates","splice","result","pointsWithinPolygon","drawControl","draw","getAll","alert","onDrawDelete","feature","MM","map","background","border","cursor","apri","preventDefault","console","log","properties","insegna","toUpperCase","mIcon","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,IACEC,KADF,EAEEC,MAFF,EAGEC,OAHF,EAIEC,YAJF,EAKEC,OALF,QAMO,iBANP;AAOA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAO,gDAAP;AACA,OAAO,KAAKC,IAAZ,MAAsB,YAAtB;;AAEA,SAASC,KAAT,QAAsB,WAAtB,C,CACA;AACA;AACA;AACA;;AAEA,MAAMC,GAAG,GAAGT,aAAa,CAAC;AACxBU,EAAAA,WAAW,EAAE,4FADW;AAExBC,EAAAA,OAAO,EAAE,CAFe;AAGxBC,EAAAA,OAAO,EAAE;AAHe,CAAD,CAAzB;;AAMA,MAAMC,IAAN,SAAmBf,KAAK,CAACgB,SAAzB,CAAmC;AAEjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,KADI;AAEXC,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,SAAS,EAAE,CAAC,IAAD,EAAO,SAAP,CAJA;AAKXC,MAAAA,WAAW,EAAEC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,SAAS,IAAG;AAAC,eAAQ,CAACA,SAAS,CAACC,MAAV,CAAiBC,QAAlB,EAA4BF,SAAS,CAACC,MAAV,CAAiBE,SAA7C,CAAR;AAAiE,OAAvH;AALF,KAAb;AAOD;;AAGDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,2FAAD,EAA8F;AACjGC,MAAAA,MAAM,EAAE;AADyF,KAA9F,CAAL,CAEGC,IAFH,CAEQC,QAAQ,IAAI;AAClB,aAAQA,QAAQ,CAACC,IAAT,EAAR;AACD,KAJD,EAIGF,IAJH,CAIQG,CAAC,IAAI;AACX,WAAKC,QAAL,CAAc;AACZlB,QAAAA,OAAO,EAAEmB,IAAI,CAACC,KAAL,CAAWH,CAAX,CADG;AAEZhB,QAAAA,QAAQ,EAAEkB,IAAI,CAACC,KAAL,CAAWH,CAAX;AAFE,OAAd;AAID,KATD;AAUD;;AAEDI,EAAAA,MAAM,GAAG;AACP,UAAMC,QAAQ,GAAG;AACfC,MAAAA,OAAO,EAAE,IADM;AAEfC,MAAAA,KAAK,EAAE,IAFQ;AAGfC,MAAAA,KAAK,EAAE,KAHQ;AAIfC,MAAAA,WAAW,EAAE,KAJE;AAKfC,MAAAA,gBAAgB,EAAE,KALH;AAMfC,MAAAA,kBAAkB,EAAE;AANL,KAAjB;;AASA,UAAMC,YAAY,GAAG,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAkB;AACrC,UAAIC,CAAC,GAAG,KAAKjC,KAAL,CAAWE,OAAnB;;AACA,WAAK,IAAIgC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,CAAC,CAACD,QAAF,CAAWG,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,YAAID,CAAC,CAACD,QAAF,CAAWE,CAAX,EAAcE,QAAd,CAAuBC,WAAvB,CAAmCF,MAAnC,IAA6C,CAAjD,EAAoDF,CAAC,CAACD,QAAF,CAAWM,MAAX,CAAkBJ,CAAlB,EAAqB,CAArB;AACrD;;AACD,UAAIK,MAAM,GAAGjD,IAAI,CAACkD,mBAAL,CAAyBP,CAAzB,EAA4B,KAAKQ,WAAL,CAAiBC,IAAjB,CAAsBC,MAAtB,EAA5B,CAAb;;AACA,UAAIJ,MAAM,CAACP,QAAP,CAAgBG,MAAhB,IAA0B,CAA9B,EAAiC;AAC/BS,QAAAA,KAAK,CAAC,uBAAD,CAAL;AACD,OAFD,MAEO,IAAGL,MAAM,CAACP,QAAP,CAAgBG,MAAhB,GAAyB,EAA5B,EAA+B;AACpCS,QAAAA,KAAK,CAAC,uCAAD,CAAL;AACD,OAFM,MAEA;AACL,aAAKxB,QAAL,CAAc;AACZnB,UAAAA,KAAK,EAAE,IADK;AAEZC,UAAAA,OAAO,EAAEqC;AAFG,SAAd;AAID;AACF,KAhBD;;AAkBA,UAAMM,YAAY,GAAG,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAiB;AACpC,WAAK1B,QAAL,CAAc;AACZnB,QAAAA,KAAK,EAAE,KADK;AAEZC,QAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG;AAFR,OAAd;AAID,KALD;;AAOA,UAAM4C,EAAE,GAAG,MAAM;AACf,UAAI,KAAK/C,KAAL,CAAWC,KAAf,EAAsB;AACpB,eAAO,KAAKD,KAAL,CAAWE,OAAX,CAAmB8B,QAAnB,CAA4BgB,GAA5B,CAAgCrB,KAAK,IAC1C,oBAAC,MAAD;AACE,UAAA,WAAW,EAAEA,KAAK,CAACS,QAAN,CAAeC,WAD9B;AAEE,UAAA,MAAM,EAAC,QAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIE;AAAQ,UAAA,KAAK,EAAE;AAACY,YAAAA,UAAU,EAAE,MAAb;AAAqBC,YAAAA,MAAM,EAAE,MAA7B;AAAqCC,YAAAA,MAAM,EAAE;AAA7C,WAAf;AAAyE,UAAA,OAAO,EAAEC,IAAI,IAAG;AACvFA,YAAAA,IAAI,CAACC,cAAL;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAY5B,KAAK,CAACS,QAAN,CAAeC,WAA3B;AACA,mBACE,oBAAC,KAAD;AACE,cAAA,QAAQ,EAAEV,KAAK,CAACS,QAAN,CAAeC,WAAf,CAA2B,CAA3B,CADZ;AAEE,cAAA,SAAS,EAAEV,KAAK,CAACS,QAAN,CAAeC,WAAf,CAA2B,CAA3B,CAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGV,KAAK,CAAC6B,UAAN,CAAiBC,OAAjB,CAAyBC,WAAzB,EADH,CAJF,CADF;AAUD,WAbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAcK/B,KAAK,CAAC6B,UAAN,CAAiBC,OAAjB,CAAyBC,WAAzB,EAdL,QAeE;AAAK,UAAA,GAAG,EAAEC,KAAV;AAAiB,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,KAAT;AAAgBC,YAAAA,MAAM,EAAE;AAAxB,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAfF,CAJF,CADK,CAAP;AAwBD;AACF,KA3BD;;AA6BA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,mCAAX,CAA+C;AAA/C;AACE,MAAA,cAAc,EAAE;AACdA,QAAAA,MAAM,EAAE,OADM;AAEdD,QAAAA,KAAK,EAAE;AAFO,OADlB;AAKE,MAAA,MAAM,EAAE,KAAK5D,KAAL,CAAWI,SALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG2C,EAAE,EANL,EAOE,oBAAC,WAAD;AACE,MAAA,YAAY,EAAEhB,YADhB;AAEE,MAAA,YAAY,EAAEc,YAFhB;AAGE,MAAA,QAAQ,EAAErB,QAHZ;AAIE,MAAA,GAAG,EAAGiB,WAAD,IAAiB;AAAE,aAAKA,WAAL,GAAmBA,WAAnB;AAAiC,OAJ3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF,CADF;AAkBD;;AA7GgC;;AA+GnC,eAAe7C,IAAf","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ReactMapboxGl, {\r\n  Layer,\r\n  Marker,\r\n  Feature,\r\n  GeoJSONLayer,\r\n  Cluster\r\n} from \"react-mapbox-gl\";\r\nimport DrawControl from \"react-mapbox-gl-draw\";\r\nimport \"@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css\";\r\nimport * as turf from '@turf/turf';\r\nimport mIcon from '../icons/marker.svg';\r\nimport { Popup } from \"mapbox-gl\";\r\n//import Dati from '../data/Dati.json'\r\n//accessToken: 'pk.eyJ1IjoiZ2lhbmx1MDEiLCJhIjoiY2s1ejQ0a2gyMDY5NjNtcWp5cGF4Y21wMiJ9.S2-22wqQvv8B0aiya-Mh7A';\r\n//site URL: mapbox://styles/gianlu01/ck5z9olku3d2r1jov9drsa1uu\r\n//geoJson URL: http://dati.comune.milano.it/dataset/ds252-economia-locali-pubblico-spettacolo/resource/e5e1c5ed-03b9-415e-9880-a2c163e4973f/view/76fa6876-f208-440f-a57c-6b3d71e52278\r\n\r\nconst Map = ReactMapboxGl({\r\n  accessToken: \"pk.eyJ1IjoiZ2lhbmx1MDEiLCJhIjoiY2s1ejQ0a2gyMDY5NjNtcWp5cGF4Y21wMiJ9.S2-22wqQvv8B0aiya-Mh7A\",\r\n  minZoom: 8,\r\n  maxZoom: 17\r\n});\r\n\r\nclass Maps extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stato: false,\r\n      markers: {},\r\n      appoggio: {},\r\n      mapCenter: [9.19, 45.466944],\r\n      geoLocation: navigator.geolocation.getCurrentPosition(posizione =>{return ([posizione.coords.latitude, posizione.coords.longitude])})\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    fetch('https://michelebanfi.github.io/datasethosting/economia_locale_pubblico_spettacolo.geojson', {\r\n      method: \"GET\"\r\n    }).then(response => {\r\n      return (response.text())\r\n    }).then(a => {\r\n      this.setState({\r\n        markers: JSON.parse(a),\r\n        appoggio: JSON.parse(a)\r\n      });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const controls = {\r\n      polygon: true,\r\n      trash: true,\r\n      point: false,\r\n      line_string: false,\r\n      combine_features: false,\r\n      uncombine_features: false\r\n    }\r\n\r\n    const onDrawCreate = ({ features }) => {\r\n      var c = this.state.markers;\r\n      for (var u = 0; u < c.features.length; u++) {\r\n        if (c.features[u].geometry.coordinates.length == 0) c.features.splice(u, 1);\r\n      }\r\n      var result = turf.pointsWithinPolygon(c, this.drawControl.draw.getAll());\r\n      if (result.features.length <= 0) {\r\n        alert(\"Nessun locale trovato\")\r\n      } else if(result.features.length > 60){\r\n        alert(\"Hai selezionato un'area troppo grande\")\r\n      } else {\r\n        this.setState({\r\n          stato: true,\r\n          markers: result\r\n        });\r\n      }\r\n    };\r\n\r\n    const onDrawDelete = ({ feature }) => {\r\n      this.setState({\r\n        stato: false,\r\n        markers: this.state.appoggio\r\n      });\r\n    }\r\n\r\n    const MM = () => {\r\n      if (this.state.stato) {\r\n        return this.state.markers.features.map(point => (\r\n          <Marker\r\n            coordinates={point.geometry.coordinates}\r\n            anchor=\"bottom\"\r\n          >\r\n            <button style={{background: 'none', border: 'none', cursor: 'pointer' }} onClick={apri =>{\r\n              apri.preventDefault();\r\n              console.log(point.geometry.coordinates)\r\n              return(\r\n                <Popup\r\n                  latitude={point.geometry.coordinates[0]}\r\n                  longitude={point.geometry.coordinates[1]}\r\n                >\r\n                  <div>\r\n                    {point.properties.insegna.toUpperCase()}\r\n                  </div>\r\n                </Popup>\r\n              )\r\n            }}>\r\n              /*{point.properties.insegna.toUpperCase()}*/\r\n              <img src={mIcon} style={{ width: '10%', height: '10%' }} />\r\n            </button>\r\n          </Marker>\r\n        ))\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Map style=\"mapbox://styles/mapbox/streets-v9\" // eslint-disable-line\r\n          containerStyle={{\r\n            height: \"100vh\",\r\n            width: \"100%\"\r\n          }}\r\n          center={this.state.mapCenter}>\r\n          {MM()}\r\n          <DrawControl\r\n            onDrawCreate={onDrawCreate}\r\n            onDrawDelete={onDrawDelete}\r\n            controls={controls}\r\n            ref={(drawControl) => { this.drawControl = drawControl; }}\r\n          />\r\n        </Map>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Maps;\r\n"]},"metadata":{},"sourceType":"module"}