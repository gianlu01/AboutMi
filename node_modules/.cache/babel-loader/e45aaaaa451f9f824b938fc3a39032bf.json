{"ast":null,"code":"const xtend = require('xtend');\n\nconst Constants = require('./constants');\n\nconst defaultOptions = {\n  defaultMode: Constants.modes.SIMPLE_SELECT,\n  keybindings: true,\n  touchEnabled: true,\n  clickBuffer: 2,\n  touchBuffer: 25,\n  boxSelect: true,\n  displayControlsDefault: true,\n  styles: require('./lib/theme'),\n  modes: require('./modes'),\n  controls: {},\n  userProperties: false\n};\nconst showControls = {\n  point: true,\n  line_string: true,\n  polygon: true,\n  trash: true,\n  combine_features: true,\n  uncombine_features: true\n};\nconst hideControls = {\n  point: false,\n  line_string: false,\n  polygon: false,\n  trash: false,\n  combine_features: false,\n  uncombine_features: false\n};\n\nfunction addSources(styles, sourceBucket) {\n  return styles.map(style => {\n    if (style.source) return style;\n    return xtend(style, {\n      id: \"\".concat(style.id, \".\").concat(sourceBucket),\n      source: sourceBucket === 'hot' ? Constants.sources.HOT : Constants.sources.COLD\n    });\n  });\n}\n\nmodule.exports = function (options = {}) {\n  let withDefaults = xtend(options);\n\n  if (!options.controls) {\n    withDefaults.controls = {};\n  }\n\n  if (options.displayControlsDefault === false) {\n    withDefaults.controls = xtend(hideControls, options.controls);\n  } else {\n    withDefaults.controls = xtend(showControls, options.controls);\n  }\n\n  withDefaults = xtend(defaultOptions, withDefaults); // Layers with a shared source should be adjacent for performance reasons\n\n  withDefaults.styles = addSources(withDefaults.styles, 'cold').concat(addSources(withDefaults.styles, 'hot'));\n  return withDefaults;\n};","map":null,"metadata":{},"sourceType":"script"}