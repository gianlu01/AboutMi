{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CompositeMode = void 0;\n\nvar _geojsonEditMode = require(\"./geojson-edit-mode.js\");\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar CompositeMode =\n/*#__PURE__*/\nfunction (_BaseGeoJsonEditMode) {\n  _inherits(CompositeMode, _BaseGeoJsonEditMode);\n\n  function CompositeMode(modes) {\n    var _this;\n\n    _classCallCheck(this, CompositeMode);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CompositeMode).call(this));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_modes\", void 0);\n\n    _this._modes = modes;\n    return _this;\n  }\n\n  _createClass(CompositeMode, [{\n    key: \"_coalesce\",\n    value: function _coalesce(callback) {\n      var resultEval = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var result;\n\n      for (var i = 0; i < this._modes.length; i++) {\n        result = callback(this._modes[i]);\n\n        if (resultEval ? resultEval(result) : result) {\n          break;\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(event, props) {\n      this._coalesce(function (handler) {\n        return handler.handleClick(event, props);\n      });\n    }\n  }, {\n    key: \"handlePointerMove\",\n    value: function handlePointerMove(event, props) {\n      return this._coalesce(function (handler) {\n        return handler.handlePointerMove(event, props);\n      });\n    }\n  }, {\n    key: \"handleStartDragging\",\n    value: function handleStartDragging(event, props) {\n      return this._coalesce(function (handler) {\n        return handler.handleStartDragging(event, props);\n      });\n    }\n  }, {\n    key: \"handleStopDragging\",\n    value: function handleStopDragging(event, props) {\n      return this._coalesce(function (handler) {\n        return handler.handleStopDragging(event, props);\n      });\n    }\n  }, {\n    key: \"handleDragging\",\n    value: function handleDragging(event, props) {\n      return this._coalesce(function (handler) {\n        return handler.handleDragging(event, props);\n      });\n    }\n  }, {\n    key: \"getGuides\",\n    value: function getGuides(props) {\n      // TODO: Combine the guides *BUT* make sure if none of the results have\n      // changed to return the same object so that \"guides !== this.state.guides\"\n      // in editable-geojson-layer works.\n      var allGuides = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this._modes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var mode = _step.value;\n          allGuides.push.apply(allGuides, _toConsumableArray(mode.getGuides(props).features));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return {\n        type: 'FeatureCollection',\n        features: allGuides\n      };\n    }\n  }]);\n\n  return CompositeMode;\n}(_geojsonEditMode.BaseGeoJsonEditMode);\n\nexports.CompositeMode = CompositeMode;","map":null,"metadata":{},"sourceType":"script"}