{"ast":null,"code":"import { coordEach } from '@turf/meta';\nimport { point } from '@turf/helpers';\n/**\n * Takes one or more features and calculates the centroid using the mean of all vertices.\n * This lessens the effect of small islands and artifacts when calculating the centroid of a set of polygons.\n *\n * @name centroid\n * @param {GeoJSON} geojson GeoJSON to be centered\n * @param {Object} [properties={}] an Object that is used as the {@link Feature}'s properties\n * @returns {Feature<Point>} the centroid of the input features\n * @example\n * var polygon = turf.polygon([[[-81, 41], [-88, 36], [-84, 31], [-80, 33], [-77, 39], [-81, 41]]]);\n *\n * var centroid = turf.centroid(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, centroid]\n */\n\nfunction centroid(geojson, properties) {\n  var xSum = 0;\n  var ySum = 0;\n  var len = 0;\n  coordEach(geojson, function (coord) {\n    xSum += coord[0];\n    ySum += coord[1];\n    len++;\n  }, true);\n  return point([xSum / len, ySum / len], properties);\n}\n\nexport default centroid;","map":null,"metadata":{},"sourceType":"module"}