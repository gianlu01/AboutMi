{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\r\n * @module ol/MapBrowserPointerEvent\r\n */\n\n\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nvar MapBrowserPointerEvent =\n/** @class */\nfunction (_super) {\n  __extends(MapBrowserPointerEvent, _super);\n  /**\r\n   * @param {string} type Event type.\r\n   * @param {import(\"./PluggableMap.js\").default} map Map.\r\n   * @param {PointerEvent} pointerEvent Pointer event.\r\n   * @param {boolean=} opt_dragging Is the map currently being dragged?\r\n   * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\r\n   */\n\n\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n    var _this = _super.call(this, type, map, pointerEvent, opt_dragging, opt_frameState) || this;\n    /**\r\n     * @const\r\n     * @type {PointerEvent}\r\n     */\n\n\n    _this.pointerEvent = pointerEvent;\n    return _this;\n  }\n\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent);\n\nexport default MapBrowserPointerEvent;","map":null,"metadata":{},"sourceType":"module"}