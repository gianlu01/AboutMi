{"ast":null,"code":"module.exports = function e(t) {\n  switch (t && t.type || null) {\n    case \"FeatureCollection\":\n      return t.features = t.features.reduce(function (t, r) {\n        return t.concat(e(r));\n      }, []), t;\n\n    case \"Feature\":\n      return t.geometry ? e(t.geometry).map(function (e) {\n        var r = {\n          type: \"Feature\",\n          properties: JSON.parse(JSON.stringify(t.properties)),\n          geometry: e\n        };\n        return void 0 !== t.id && (r.id = t.id), r;\n      }) : t;\n\n    case \"MultiPoint\":\n      return t.coordinates.map(function (e) {\n        return {\n          type: \"Point\",\n          coordinates: e\n        };\n      });\n\n    case \"MultiPolygon\":\n      return t.coordinates.map(function (e) {\n        return {\n          type: \"Polygon\",\n          coordinates: e\n        };\n      });\n\n    case \"MultiLineString\":\n      return t.coordinates.map(function (e) {\n        return {\n          type: \"LineString\",\n          coordinates: e\n        };\n      });\n\n    case \"GeometryCollection\":\n      return t.geometries.map(e).reduce(function (e, t) {\n        return e.concat(t);\n      }, []);\n\n    case \"Point\":\n    case \"Polygon\":\n    case \"LineString\":\n      return [t];\n  }\n};","map":{"version":3,"sources":["../index.js"],"names":["flatten","gj","type","features","reduce","mem","feature","concat","geometry","map","geom","data","properties","JSON","parse","stringify","id","undefined","coordinates","_","geometries","memo","geoms"],"mappings":"iBAAe,SAASA,CAAT,CAAiBC,CAAjB,EAAiBA;AAAAA,UACrBA,CAAAA,IAAMA,CAAAA,CAAGC,IAATD,IAAkB,IADGA;AACH,SACpB,mBADoB;AACpB,aACHA,CAAAA,CAAGE,QAAHF,GAAcA,CAAAA,CAAGE,QAAHF,CAAYG,MAAZH,CAAmB,UAASI,CAAT,EAAcC,CAAd,EAAcA;AAAAA,eACtCD,CAAAA,CAAIE,MAAJF,CAAWL,CAAAA,CAAQM,CAARN,CAAXK,CADsCC;AACnBA,OADdL,EAEX,EAFWA,CAAdA,EAGOA,CAJJ;;AAIIA,SACJ,SADIA;AACJ,aACEA,CAAAA,CAAGO,QAAHP,GACED,CAAAA,CAAQC,CAAAA,CAAGO,QAAXR,CAAAA,CAAqBS,GAArBT,CAAyB,UAASU,CAAT,EAASA;AAAAA,YACnCC,CAAAA,GAAO;AACTT,UAAAA,IAAAA,EAAM,SADG;AAETU,UAAAA,UAAAA,EAAYC,IAAAA,CAAKC,KAALD,CAAWA,IAAAA,CAAKE,SAALF,CAAeZ,CAAAA,CAAGW,UAAlBC,CAAXA,CAFH;AAGTL,UAAAA,QAAAA,EAAUE;AAHD,SAD4BA;AAI3BA,eAAAA,KAEEO,CAFFP,KAERT,CAAAA,CAAGe,EAFKN,KAGVC,CAAAA,CAAKK,EAALL,GAAUV,CAAAA,CAAGe,EAHHN,GAKLC,CALKD;AAKLC,OATFX,CADFC,GAAoBA,CADtB;;AACsBA,SAYtB,YAZsBA;AAYtB,aACIA,CAAAA,CAAGiB,WAAHjB,CAAeQ,GAAfR,CAAmB,UAASkB,CAAT,EAASA;AAAAA,eAC1B;AAAEjB,UAAAA,IAAAA,EAAM,OAAR;AAAiBgB,UAAAA,WAAAA,EAAaC;AAA9B,SAD0BA;AACIA,OADhClB,CADJ;;AAEoCkB,SAEpC,cAFoCA;AAEpC,aACIlB,CAAAA,CAAGiB,WAAHjB,CAAeQ,GAAfR,CAAmB,UAASkB,CAAT,EAASA;AAAAA,eAC1B;AAAEjB,UAAAA,IAAAA,EAAM,SAAR;AAAmBgB,UAAAA,WAAAA,EAAaC;AAAhC,SAD0BA;AACMA,OADlClB,CADJ;;AAEsCkB,SAEtC,iBAFsCA;AAEtC,aACIlB,CAAAA,CAAGiB,WAAHjB,CAAeQ,GAAfR,CAAmB,UAASkB,CAAT,EAASA;AAAAA,eAC1B;AAAEjB,UAAAA,IAAAA,EAAM,YAAR;AAAsBgB,UAAAA,WAAAA,EAAaC;AAAnC,SAD0BA;AACSA,OADrClB,CADJ;;AAEyCkB,SAEzC,oBAFyCA;AAEzC,aACIlB,CAAAA,CAAGmB,UAAHnB,CAAcQ,GAAdR,CAAkBD,CAAlBC,EAA2BG,MAA3BH,CAAkC,UAASoB,CAAT,EAAeC,CAAf,EAAeA;AAAAA,eAC/CD,CAAAA,CAAKd,MAALc,CAAYC,CAAZD,CAD+CC;AACnCA,OADdrB,EAEJ,EAFIA,CADJ;;AAGA,SACA,OADA;AACA,SACA,SADA;AACA,SACA,YADA;AACA,aACI,CAACA,CAAD,CADJ;AAtCuBA;AAuClBA,C","sourcesContent":["export default function flatten(gj) {\n  switch ((gj && gj.type) || null) {\n    case \"FeatureCollection\":\n      gj.features = gj.features.reduce(function(mem, feature) {\n        return mem.concat(flatten(feature));\n      }, []);\n      return gj;\n    case \"Feature\":\n      if (!gj.geometry) return gj;\n      return flatten(gj.geometry).map(function(geom) {\n        var data = {\n          type: \"Feature\",\n          properties: JSON.parse(JSON.stringify(gj.properties)),\n          geometry: geom\n        };\n        if (gj.id !== undefined) {\n          data.id = gj.id;\n        }\n        return data;\n      });\n    case \"MultiPoint\":\n      return gj.coordinates.map(function(_) {\n        return { type: \"Point\", coordinates: _ };\n      });\n    case \"MultiPolygon\":\n      return gj.coordinates.map(function(_) {\n        return { type: \"Polygon\", coordinates: _ };\n      });\n    case \"MultiLineString\":\n      return gj.coordinates.map(function(_) {\n        return { type: \"LineString\", coordinates: _ };\n      });\n    case \"GeometryCollection\":\n      return gj.geometries.map(flatten).reduce(function(memo, geoms) {\n        return memo.concat(geoms);\n      }, []);\n    case \"Point\":\n    case \"Polygon\":\n    case \"LineString\":\n      return [gj];\n  }\n}\n"]},"metadata":{},"sourceType":"script"}