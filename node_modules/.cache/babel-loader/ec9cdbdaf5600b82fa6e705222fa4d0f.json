{"ast":null,"code":"var ModeHandler = function ModeHandler(mode, DrawContext) {\n  var handlers = {\n    drag: [],\n    click: [],\n    mousemove: [],\n    mousedown: [],\n    mouseup: [],\n    mouseout: [],\n    keydown: [],\n    keyup: [],\n    touchstart: [],\n    touchmove: [],\n    touchend: [],\n    tap: []\n  };\n  var ctx = {\n    on: function on(event, selector, fn) {\n      if (handlers[event] === undefined) {\n        throw new Error(\"Invalid event type: \".concat(event));\n      }\n\n      handlers[event].push({\n        selector: selector,\n        fn: fn\n      });\n    },\n    render: function render(id) {\n      DrawContext.store.featureChanged(id);\n    }\n  };\n\n  var delegate = function delegate(eventName, event) {\n    var handles = handlers[eventName];\n    var iHandle = handles.length;\n\n    while (iHandle--) {\n      var handle = handles[iHandle];\n\n      if (handle.selector(event)) {\n        handle.fn.call(ctx, event);\n        DrawContext.store.render();\n        DrawContext.ui.updateMapClasses(); // ensure an event is only handled once\n        // we do this to let modes have multiple overlapping selectors\n        // and relay on order of oppertations to filter\n\n        break;\n      }\n    }\n  };\n\n  mode.start.call(ctx);\n  return {\n    render: mode.render,\n    stop: function stop() {\n      if (mode.stop) mode.stop();\n    },\n    trash: function trash() {\n      if (mode.trash) {\n        mode.trash();\n        DrawContext.store.render();\n      }\n    },\n    combineFeatures: function combineFeatures() {\n      if (mode.combineFeatures) {\n        mode.combineFeatures();\n      }\n    },\n    uncombineFeatures: function uncombineFeatures() {\n      if (mode.uncombineFeatures) {\n        mode.uncombineFeatures();\n      }\n    },\n    drag: function drag(event) {\n      delegate('drag', event);\n    },\n    click: function click(event) {\n      delegate('click', event);\n    },\n    mousemove: function mousemove(event) {\n      delegate('mousemove', event);\n    },\n    mousedown: function mousedown(event) {\n      delegate('mousedown', event);\n    },\n    mouseup: function mouseup(event) {\n      delegate('mouseup', event);\n    },\n    mouseout: function mouseout(event) {\n      delegate('mouseout', event);\n    },\n    keydown: function keydown(event) {\n      delegate('keydown', event);\n    },\n    keyup: function keyup(event) {\n      delegate('keyup', event);\n    },\n    touchstart: function touchstart(event) {\n      delegate('touchstart', event);\n    },\n    touchmove: function touchmove(event) {\n      delegate('touchmove', event);\n    },\n    touchend: function touchend(event) {\n      delegate('touchend', event);\n    },\n    tap: function tap(event) {\n      delegate('tap', event);\n    }\n  };\n};\n\nmodule.exports = ModeHandler;","map":{"version":3,"sources":["C:/Users/michele/Desktop/IT/Code/react/aboutmi/node_modules/@mapbox/mapbox-gl-draw/src/lib/mode_handler.js"],"names":["ModeHandler","mode","DrawContext","handlers","drag","click","mousemove","mousedown","mouseup","mouseout","keydown","keyup","touchstart","touchmove","touchend","tap","ctx","on","event","selector","fn","undefined","Error","push","render","id","store","featureChanged","delegate","eventName","handles","iHandle","length","handle","call","ui","updateMapClasses","start","stop","trash","combineFeatures","uncombineFeatures","module","exports"],"mappings":"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","sourcesContent":["\r\nconst ModeHandler = function(mode, DrawContext) {\r\n\r\n  const handlers = {\r\n    drag: [],\r\n    click: [],\r\n    mousemove: [],\r\n    mousedown: [],\r\n    mouseup: [],\r\n    mouseout: [],\r\n    keydown: [],\r\n    keyup: [],\r\n    touchstart: [],\r\n    touchmove: [],\r\n    touchend: [],\r\n    tap: []\r\n  };\r\n\r\n  const ctx = {\r\n    on: function(event, selector, fn) {\r\n      if (handlers[event] === undefined) {\r\n        throw new Error(`Invalid event type: ${event}`);\r\n      }\r\n      handlers[event].push({\r\n        selector: selector,\r\n        fn: fn\r\n      });\r\n    },\r\n    render: function(id) {\r\n      DrawContext.store.featureChanged(id);\r\n    }\r\n  };\r\n\r\n  const delegate = function (eventName, event) {\r\n    const handles = handlers[eventName];\r\n    let iHandle = handles.length;\r\n    while (iHandle--) {\r\n      const handle = handles[iHandle];\r\n      if (handle.selector(event)) {\r\n        handle.fn.call(ctx, event);\r\n        DrawContext.store.render();\r\n        DrawContext.ui.updateMapClasses();\r\n\r\n        // ensure an event is only handled once\r\n        // we do this to let modes have multiple overlapping selectors\r\n        // and relay on order of oppertations to filter\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  mode.start.call(ctx);\r\n\r\n  return {\r\n    render: mode.render,\r\n    stop: function() {\r\n      if (mode.stop) mode.stop();\r\n    },\r\n    trash: function() {\r\n      if (mode.trash) {\r\n        mode.trash();\r\n        DrawContext.store.render();\r\n      }\r\n    },\r\n    combineFeatures: function() {\r\n      if (mode.combineFeatures) {\r\n        mode.combineFeatures();\r\n      }\r\n    },\r\n    uncombineFeatures: function() {\r\n      if (mode.uncombineFeatures) {\r\n        mode.uncombineFeatures();\r\n      }\r\n    },\r\n    drag: function(event) {\r\n      delegate('drag', event);\r\n    },\r\n    click: function(event) {\r\n      delegate('click', event);\r\n    },\r\n    mousemove: function(event) {\r\n      delegate('mousemove', event);\r\n    },\r\n    mousedown: function(event) {\r\n      delegate('mousedown', event);\r\n    },\r\n    mouseup: function(event) {\r\n      delegate('mouseup', event);\r\n    },\r\n    mouseout: function(event) {\r\n      delegate('mouseout', event);\r\n    },\r\n    keydown: function(event) {\r\n      delegate('keydown', event);\r\n    },\r\n    keyup: function(event) {\r\n      delegate('keyup', event);\r\n    },\r\n    touchstart: function(event) {\r\n      delegate('touchstart', event);\r\n    },\r\n    touchmove: function(event) {\r\n      delegate('touchmove', event);\r\n    },\r\n    touchend: function(event) {\r\n      delegate('touchend', event);\r\n    },\r\n    tap: function(event) {\r\n      delegate('tap', event);\r\n    }\r\n  };\r\n};\r\n\r\nmodule.exports = ModeHandler;\r\n"]},"metadata":{},"sourceType":"script"}