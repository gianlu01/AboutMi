{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _reactMapGl = require(\"react-map-gl\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _editModes = require(\"@nebula.gl/edit-modes\");\n\nvar _memoize = _interopRequireDefault(require(\"./memoize\"));\n\nvar _constants = require(\"./constants\");\n\nvar _utils = require(\"./edit-modes/utils\");\n\nvar _editModes2 = require(\"./edit-modes\");\n\nvar _Object$freeze;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar MODE_TO_HANDLER = Object.freeze((_Object$freeze = {}, _defineProperty(_Object$freeze, _constants.MODES.READ_ONLY, null), _defineProperty(_Object$freeze, _constants.MODES.SELECT, _editModes2.SelectMode), _defineProperty(_Object$freeze, _constants.MODES.EDITING, _editModes2.EditingMode), _defineProperty(_Object$freeze, _constants.MODES.DRAW_POINT, _editModes2.DrawPointMode), _defineProperty(_Object$freeze, _constants.MODES.DRAW_PATH, _editModes2.DrawLineStringMode), _defineProperty(_Object$freeze, _constants.MODES.DRAW_RECTANGLE, _editModes2.DrawRectangleMode), _defineProperty(_Object$freeze, _constants.MODES.DRAW_POLYGON, _editModes2.DrawPolygonMode), _Object$freeze));\nvar defaultProps = {\n  mode: _constants.MODES.READ_ONLY,\n  features: null,\n  onSelect: null,\n  onUpdate: null\n};\nvar defaultState = {\n  featureCollection: new _editModes.ImmutableFeatureCollection({\n    type: 'FeatureCollection',\n    features: []\n  }),\n  selectedFeatureIndex: null,\n  // index, isGuide, mapCoords, screenCoords\n  hovered: null,\n  isDragging: false,\n  didDrag: false,\n  lastPointerMoveEvent: null,\n  pointerDownPicks: null,\n  pointerDownScreenCoords: null,\n  pointerDownMapCoords: null\n};\n\nvar ModeHandler =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(ModeHandler, _PureComponent);\n\n  function ModeHandler() {\n    var _this;\n\n    _classCallCheck(this, ModeHandler);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ModeHandler).call(this));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_events\", void 0);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_eventsRegistered\", void 0);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_modeHandler\", void 0);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_context\", void 0);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_containerRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getFeatures\", function () {\n      var featureCollection = _this._getFeatureCollection();\n\n      featureCollection = featureCollection && featureCollection.getObject();\n      return featureCollection && featureCollection.features;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"addFeatures\", function (features) {\n      var featureCollection = _this._getFeatureCollection();\n\n      if (featureCollection) {\n        if (!Array.isArray(features)) {\n          features = [features];\n        }\n\n        featureCollection = featureCollection.addFeatures(features);\n\n        _this.setState({\n          featureCollection: featureCollection\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"deleteFeatures\", function (featureIndexes) {\n      var featureCollection = _this._getFeatureCollection();\n\n      var selectedFeatureIndex = _this._getSelectedFeatureIndex();\n\n      if (featureCollection) {\n        if (!Array.isArray(featureIndexes)) {\n          featureIndexes = [featureIndexes];\n        }\n\n        featureCollection = featureCollection.deleteFeatures(featureIndexes);\n        var newState = {\n          featureCollection: featureCollection\n        };\n\n        if (featureIndexes.findIndex(function (index) {\n          return selectedFeatureIndex === index;\n        }) >= 0) {\n          newState.selectedFeatureIndex = null;\n        }\n\n        _this.setState(newState);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_getMemorizedFeatureCollection\", (0, _memoize.default)(function (_ref) {\n      var propsFeatures = _ref.propsFeatures,\n          stateFeatures = _ref.stateFeatures;\n      var features = propsFeatures || stateFeatures; // Any changes in ImmutableFeatureCollection will create a new object\n\n      if (features instanceof _editModes.ImmutableFeatureCollection) {\n        return features;\n      }\n\n      if (features && features.type === 'FeatureCollection') {\n        return new _editModes.ImmutableFeatureCollection({\n          type: 'FeatureCollection',\n          features: features.features\n        });\n      }\n\n      return new _editModes.ImmutableFeatureCollection({\n        type: 'FeatureCollection',\n        features: features || []\n      });\n    }));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_getFeatureCollection\", function () {\n      return _this._getMemorizedFeatureCollection({\n        propsFeatures: _this.props.features,\n        stateFeatures: _this.state.featureCollection\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_setupModeHandler\", function () {\n      var mode = _this.props.mode;\n\n      if (!mode || mode === _constants.MODES.READ_ONLY) {\n        _this._degregisterEvents();\n\n        _this._modeHandler = null;\n        return;\n      }\n\n      _this._registerEvents();\n\n      var HandlerClass = MODE_TO_HANDLER[mode];\n      _this._modeHandler = HandlerClass ? new HandlerClass() : null;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_clearEditingState\", function () {\n      _this.setState({\n        selectedFeatureIndex: null,\n        hovered: null,\n        pointerDownPicks: null,\n        pointerDownScreenCoords: null,\n        pointerDownMapCoords: null,\n        isDragging: false,\n        didDrag: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_getSelectedFeatureIndex\", function () {\n      if ('selectedFeatureIndex' in _this.props) {\n        return _this.props.selectedFeatureIndex;\n      }\n\n      return _this.state.selectedFeatureIndex;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_getSelectedFeature\", function (featureIndex) {\n      var features = _this.getFeatures();\n\n      featureIndex = (0, _utils.isNumeric)(featureIndex) ? featureIndex : _this._getSelectedFeatureIndex();\n      return features[featureIndex];\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_onSelect\", function (selected) {\n      _this.setState({\n        selectedFeatureIndex: selected && selected.selectedFeatureIndex\n      });\n\n      if (_this.props.onSelect) {\n        _this.props.onSelect(selected);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_onUpdate\", function (editAction, isInternal) {\n      var editType = editAction.editType,\n          updatedData = editAction.updatedData,\n          editContext = editAction.editContext;\n\n      _this.setState({\n        featureCollection: new _editModes.ImmutableFeatureCollection(updatedData)\n      });\n\n      if (_this.props.onUpdate && !isInternal) {\n        _this.props.onUpdate({\n          data: updatedData && updatedData.features,\n          editType: editType,\n          editContext: editContext\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_onEdit\", function (editAction) {\n      var mode = _this.props.mode;\n      var editType = editAction.editType,\n          updatedData = editAction.updatedData;\n\n      switch (editType) {\n        case _constants.EDIT_TYPE.MOVE_POSITION:\n          // intermediate feature, do not need forward to application\n          // only need update editor internal state\n          _this._onUpdate(editAction, true);\n\n          break;\n\n        case _constants.EDIT_TYPE.ADD_FEATURE:\n          _this._onUpdate(editAction);\n\n          if (mode === _constants.MODES.DRAW_PATH) {\n            var context = editAction.editContext && editAction.editContext[0] || {};\n            var screenCoords = context.screenCoords,\n                mapCoords = context.mapCoords;\n            var featureIndex = updatedData.features.length - 1;\n\n            var selectedFeature = _this._getSelectedFeature(featureIndex);\n\n            _this._onSelect({\n              selectedFeature: selectedFeature,\n              selectedFeatureIndex: featureIndex,\n              selectedEditHandleIndex: null,\n              screenCoords: screenCoords,\n              mapCoords: mapCoords\n            });\n          }\n\n          break;\n\n        case _constants.EDIT_TYPE.ADD_POSITION:\n        case _constants.EDIT_TYPE.REMOVE_POSITION:\n        case _constants.EDIT_TYPE.FINISH_MOVE_POSITION:\n          _this._onUpdate(editAction);\n\n          break;\n\n        default:\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_degregisterEvents\", function () {\n      var eventManager = _this._context && _this._context.eventManager;\n\n      if (!_this._events || !eventManager) {\n        return;\n      }\n\n      if (_this._eventsRegistered) {\n        eventManager.off(_this._events);\n        _this._eventsRegistered = false;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_registerEvents\", function () {\n      var ref = _this._containerRef;\n      var eventManager = _this._context && _this._context.eventManager;\n\n      if (!_this._events || !ref || !eventManager) {\n        return;\n      }\n\n      if (_this._eventsRegistered) {\n        return;\n      }\n\n      eventManager.on(_this._events, ref);\n      _this._eventsRegistered = true;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_onEvent\", function (handler, evt, stopPropagation) {\n      var event = _this._getEvent(evt);\n\n      handler(event);\n\n      if (stopPropagation) {\n        evt.stopImmediatePropagation();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_onClick\", function (event) {\n      var mode = _this.props.mode;\n\n      if (mode === _constants.MODES.SELECT || mode === _constants.MODES.EDITING) {\n        var mapCoords = event.mapCoords,\n            screenCoords = event.screenCoords;\n        var pickedObject = event.picks && event.picks[0] && event.picks[0].object;\n\n        if (pickedObject && (0, _utils.isNumeric)(pickedObject.featureIndex)) {\n          var selectedFeatureIndex = pickedObject.featureIndex;\n\n          var selectedFeature = _this._getSelectedFeature(selectedFeatureIndex);\n\n          _this._onSelect({\n            selectedFeature: selectedFeature,\n            selectedFeatureIndex: selectedFeatureIndex,\n            selectedEditHandleIndex: pickedObject.type === _constants.ELEMENT_TYPE.EDIT_HANDLE ? pickedObject.index : null,\n            mapCoords: mapCoords,\n            screenCoords: screenCoords\n          });\n        } else {\n          _this._onSelect({\n            selectedFeature: null,\n            selectedFeatureIndex: null,\n            selectedEditHandleIndex: null,\n            mapCoords: mapCoords,\n            screenCoords: screenCoords\n          });\n        }\n      }\n\n      var modeProps = _this.getModeProps();\n\n      _this._modeHandler.handleClick(event, modeProps);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_onPointerMove\", function (event) {\n      // hovering\n      var hovered = _this._getHoverState(event);\n\n      var _this$state = _this.state,\n          isDragging = _this$state.isDragging,\n          didDrag = _this$state.didDrag,\n          pointerDownPicks = _this$state.pointerDownPicks,\n          pointerDownScreenCoords = _this$state.pointerDownScreenCoords,\n          pointerDownMapCoords = _this$state.pointerDownMapCoords;\n\n      if (isDragging && !didDrag && pointerDownScreenCoords) {\n        var dx = event.screenCoords[0] - pointerDownScreenCoords[0];\n        var dy = event.screenCoords[1] - pointerDownScreenCoords[1];\n\n        if (dx * dx + dy * dy > 5) {\n          _this.setState({\n            didDrag: true\n          });\n        }\n      }\n\n      var pointerMoveEvent = _objectSpread({}, event, {\n        isDragging: isDragging,\n        pointerDownPicks: pointerDownPicks,\n        pointerDownScreenCoords: pointerDownScreenCoords,\n        pointerDownMapCoords: pointerDownMapCoords\n      });\n\n      if (_this.state.didDrag) {\n        var modeProps = _this.getModeProps();\n\n        _this._modeHandler.handlePointerMove(pointerMoveEvent, modeProps);\n      }\n\n      _this.setState({\n        hovered: hovered,\n        lastPointerMoveEvent: pointerMoveEvent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_onPointerDown\", function (event) {\n      var pickedObject = event.picks && event.picks[0] && event.picks[0].object;\n\n      var startDraggingEvent = _objectSpread({}, event, {\n        pointerDownScreenCoords: event.screenCoords,\n        pointerDownMapCoords: event.mapCoords\n      });\n\n      var newState = {\n        isDragging: pickedObject && (0, _utils.isNumeric)(pickedObject.featureIndex),\n        pointerDownPicks: event.picks,\n        pointerDownScreenCoords: event.screenCoords,\n        pointerDownMapCoords: event.mapCoords\n      };\n\n      _this.setState(newState);\n\n      var modeProps = _this.getModeProps();\n\n      _this._modeHandler.handleStartDragging(startDraggingEvent, modeProps);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_onPointerUp\", function (event) {\n      var stopDraggingEvent = _objectSpread({}, event, {\n        pointerDownScreenCoords: _this.state.pointerDownScreenCoords,\n        pointerDownMapCoords: _this.state.pointerDownMapCoords\n      });\n\n      var newState = {\n        isDragging: false,\n        didDrag: false,\n        pointerDownPicks: null,\n        pointerDownScreenCoords: null,\n        pointerDownMapCoords: null\n      };\n\n      _this.setState(newState);\n\n      var modeProps = _this.getModeProps();\n\n      _this._modeHandler.handleStopDragging(stopDraggingEvent, modeProps);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_onPan\", function (event) {\n      var isDragging = _this.state.isDragging;\n\n      if (isDragging) {\n        event.sourceEvent.stopImmediatePropagation();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"project\", function (pt) {\n      var viewport = _this._context && _this._context.viewport;\n      return viewport && viewport.project(pt);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"unproject\", function (pt) {\n      var viewport = _this._context && _this._context.viewport;\n      return viewport && viewport.unproject(pt);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_getHoverState\", function (event) {\n      var object = event.picks && event.picks[0] && event.picks[0].object;\n\n      if (!object) {\n        return null;\n      }\n\n      return _objectSpread({\n        screenCoords: event.screenCoords,\n        mapCoords: event.mapCoords\n      }, object);\n    });\n\n    _this.state = defaultState;\n    _this._eventsRegistered = false;\n    _this._events = {\n      anyclick: function anyclick(evt) {\n        return _this._onEvent(_this._onClick, evt, true);\n      },\n      click: function click(evt) {\n        return evt.stopImmediatePropagation();\n      },\n      pointermove: function pointermove(evt) {\n        return _this._onEvent(_this._onPointerMove, evt, true);\n      },\n      pointerdown: function pointerdown(evt) {\n        return _this._onEvent(_this._onPointerDown, evt, true);\n      },\n      pointerup: function pointerup(evt) {\n        return _this._onEvent(_this._onPointerUp, evt, true);\n      },\n      panmove: function panmove(evt) {\n        return _this._onEvent(_this._onPan, evt, false);\n      },\n      panstart: function panstart(evt) {\n        return _this._onEvent(_this._onPan, evt, false);\n      },\n      panend: function panend(evt) {\n        return _this._onEvent(_this._onPan, evt, false);\n      }\n    };\n    return _this;\n  }\n\n  _createClass(ModeHandler, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setupModeHandler();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.mode !== this.props.mode) {\n        this._clearEditingState();\n\n        this._setupModeHandler();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._degregisterEvents();\n    }\n  }, {\n    key: \"getModeProps\",\n    value: function getModeProps() {\n      var featureCollection = this._getFeatureCollection();\n\n      var lastPointerMoveEvent = this.state.lastPointerMoveEvent;\n\n      var selectedFeatureIndex = this._getSelectedFeatureIndex();\n\n      var viewport = this._context && this._context.viewport;\n      return {\n        data: featureCollection,\n        selectedIndexes: [selectedFeatureIndex],\n        lastPointerMoveEvent: lastPointerMoveEvent,\n        viewport: viewport,\n        onEdit: this._onEdit\n      };\n    }\n    /* MEMORIZERS */\n\n  }, {\n    key: \"_getEvent\",\n    value: function _getEvent(evt) {\n      var picked = (0, _utils.parseEventElement)(evt);\n      var screenCoords = (0, _utils.getScreenCoords)(evt);\n      var mapCoords = this.unproject(screenCoords);\n      return {\n        picks: picked ? [picked] : null,\n        screenCoords: screenCoords,\n        mapCoords: mapCoords,\n        sourceEvent: evt\n      };\n    }\n  }, {\n    key: \"_isDrawing\",\n    value: function _isDrawing() {\n      var mode = this.props.mode;\n      return _constants.DRAWING_MODE.findIndex(function (m) {\n        return m === mode;\n      }) >= 0;\n    }\n  }, {\n    key: \"render\",\n    value: function render(child) {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactMapGl._MapContext.Consumer, null, function (context) {\n        _this2._context = context;\n        var viewport = context && context.viewport;\n\n        if (!viewport || viewport.height <= 0 || viewport.width <= 0) {\n          return null;\n        }\n\n        return child;\n      });\n    }\n  }]);\n\n  return ModeHandler;\n}(_react.PureComponent);\n\nexports.default = ModeHandler;\n\n_defineProperty(ModeHandler, \"defaultProps\", defaultProps);\n\nModeHandler.displayName = 'ModeHandler';","map":null,"metadata":{},"sourceType":"script"}