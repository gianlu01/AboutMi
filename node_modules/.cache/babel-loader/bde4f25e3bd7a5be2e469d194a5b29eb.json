{"ast":null,"code":"function rad(x) {\n  return x * Math.PI / 180;\n}\n\nfunction isRingClockwise(coords) {\n  var area = 0;\n\n  if (coords.length > 2) {\n    var p1, p2;\n\n    for (var i = 0; i < coords.length - 1; i++) {\n      p1 = coords[i];\n      p2 = coords[i + 1];\n      area += rad(p2[0] - p1[0]) * (2 + Math.sin(rad(p1[1])) + Math.sin(rad(p2[1])));\n    }\n  }\n\n  return area >= 0;\n}\n\nfunction isPolyRHR(coords) {\n  if (coords && coords.length > 0) {\n    if (isRingClockwise(coords[0])) return false;\n    var interiorCoords = coords.slice(1, coords.length);\n    if (!interiorCoords.every(isRingClockwise)) return false;\n  }\n\n  return true;\n}\n\nfunction rightHandRule(geometry) {\n  if (geometry.type === 'Polygon') {\n    return isPolyRHR(geometry.coordinates);\n  } else if (geometry.type === 'MultiPolygon') {\n    return geometry.coordinates.every(isPolyRHR);\n  }\n}\n\nmodule.exports = function validateRightHandRule(geometry, errors) {\n  if (!rightHandRule(geometry)) {\n    errors.push({\n      message: 'Polygons and MultiPolygons should follow the right-hand rule',\n      level: 'message',\n      line: geometry.__line__\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"script"}