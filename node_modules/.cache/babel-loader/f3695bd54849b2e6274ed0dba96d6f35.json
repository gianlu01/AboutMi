{"ast":null,"code":"const CommonSelectors = require('../lib/common_selectors');\n\nconst mouseEventPoint = require('../lib/mouse_event_point');\n\nconst createSupplementaryPoints = require('../lib/create_supplementary_points');\n\nconst StringSet = require('../lib/string_set');\n\nconst doubleClickZoom = require('../lib/double_click_zoom');\n\nconst moveFeatures = require('../lib/move_features');\n\nconst Constants = require('../constants');\n\nconst SimpleSelect = {};\n\nSimpleSelect.onSetup = function (opts) {\n  // turn the opts into state.\n  const state = {\n    dragMoveLocation: null,\n    boxSelectStartLocation: null,\n    boxSelectElement: undefined,\n    boxSelecting: false,\n    canBoxSelect: false,\n    dragMoveing: false,\n    canDragMove: false,\n    initiallySelectedFeatureIds: opts.featureIds || []\n  };\n  this.setSelected(state.initiallySelectedFeatureIds.filter(id => {\n    return this.getFeature(id) !== undefined;\n  }));\n  this.fireActionable();\n  this.setActionableState({\n    combineFeatures: true,\n    uncombineFeatures: true,\n    trash: true\n  });\n  return state;\n};\n\nSimpleSelect.fireUpdate = function () {\n  this.map.fire(Constants.events.UPDATE, {\n    action: Constants.updateActions.MOVE,\n    features: this.getSelected().map(f => f.toGeoJSON())\n  });\n};\n\nSimpleSelect.fireActionable = function () {\n  const selectedFeatures = this.getSelected();\n  const multiFeatures = selectedFeatures.filter(feature => this.isInstanceOf('MultiFeature', feature));\n  let combineFeatures = false;\n\n  if (selectedFeatures.length > 1) {\n    combineFeatures = true;\n    const featureType = selectedFeatures[0].type.replace('Multi', '');\n    selectedFeatures.forEach(feature => {\n      if (feature.type.replace('Multi', '') !== featureType) {\n        combineFeatures = false;\n      }\n    });\n  }\n\n  const uncombineFeatures = multiFeatures.length > 0;\n  const trash = selectedFeatures.length > 0;\n  this.setActionableState({\n    combineFeatures,\n    uncombineFeatures,\n    trash\n  });\n};\n\nSimpleSelect.getUniqueIds = function (allFeatures) {\n  if (!allFeatures.length) return [];\n  const ids = allFeatures.map(s => s.properties.id).filter(id => id !== undefined).reduce((memo, id) => {\n    memo.add(id);\n    return memo;\n  }, new StringSet());\n  return ids.values();\n};\n\nSimpleSelect.stopExtendedInteractions = function (state) {\n  if (state.boxSelectElement) {\n    if (state.boxSelectElement.parentNode) state.boxSelectElement.parentNode.removeChild(state.boxSelectElement);\n    state.boxSelectElement = null;\n  }\n\n  this.map.dragPan.enable();\n  state.boxSelecting = false;\n  state.canBoxSelect = false;\n  state.dragMoving = false;\n  state.canDragMove = false;\n};\n\nSimpleSelect.onStop = function () {\n  doubleClickZoom.enable(this);\n};\n\nSimpleSelect.onMouseMove = function (state) {\n  // On mousemove that is not a drag, stop extended interactions.\n  // This is useful if you drag off the canvas, release the button,\n  // then move the mouse back over the canvas --- we don't allow the\n  // interaction to continue then, but we do let it continue if you held\n  // the mouse button that whole time\n  return this.stopExtendedInteractions(state);\n};\n\nSimpleSelect.onMouseOut = function (state) {\n  // As soon as you mouse leaves the canvas, update the feature\n  if (state.dragMoving) return this.fireUpdate();\n};\n\nSimpleSelect.onTap = SimpleSelect.onClick = function (state, e) {\n  // Click (with or without shift) on no feature\n  if (CommonSelectors.noTarget(e)) return this.clickAnywhere(state, e); // also tap\n\n  if (CommonSelectors.isOfMetaType(Constants.meta.VERTEX)(e)) return this.clickOnVertex(state, e); //tap\n\n  if (CommonSelectors.isFeature(e)) return this.clickOnFeature(state, e);\n};\n\nSimpleSelect.clickAnywhere = function (state) {\n  // Clear the re-render selection\n  const wasSelected = this.getSelectedIds();\n\n  if (wasSelected.length) {\n    this.clearSelectedFeatures();\n    wasSelected.forEach(id => this.doRender(id));\n  }\n\n  doubleClickZoom.enable(this);\n  this.stopExtendedInteractions(state);\n};\n\nSimpleSelect.clickOnVertex = function (state, e) {\n  // Enter direct select mode\n  this.changeMode(Constants.modes.DIRECT_SELECT, {\n    featureId: e.featureTarget.properties.parent,\n    coordPath: e.featureTarget.properties.coord_path,\n    startPos: e.lngLat\n  });\n  this.updateUIClasses({\n    mouse: Constants.cursors.MOVE\n  });\n};\n\nSimpleSelect.startOnActiveFeature = function (state, e) {\n  // Stop any already-underway extended interactions\n  this.stopExtendedInteractions(state); // Disable map.dragPan immediately so it can't start\n\n  this.map.dragPan.disable(); // Re-render it and enable drag move\n\n  this.doRender(e.featureTarget.properties.id); // Set up the state for drag moving\n\n  state.canDragMove = true;\n  state.dragMoveLocation = e.lngLat;\n};\n\nSimpleSelect.clickOnFeature = function (state, e) {\n  // Stop everything\n  doubleClickZoom.disable(this);\n  this.stopExtendedInteractions(state);\n  const isShiftClick = CommonSelectors.isShiftDown(e);\n  const selectedFeatureIds = this.getSelectedIds();\n  const featureId = e.featureTarget.properties.id;\n  const isFeatureSelected = this.isSelected(featureId); // Click (without shift) on any selected feature but a point\n\n  if (!isShiftClick && isFeatureSelected && this.getFeature(featureId).type !== Constants.geojsonTypes.POINT) {\n    // Enter direct select mode\n    return this.changeMode(Constants.modes.DIRECT_SELECT, {\n      featureId: featureId\n    });\n  } // Shift-click on a selected feature\n\n\n  if (isFeatureSelected && isShiftClick) {\n    // Deselect it\n    this.deselect(featureId);\n    this.updateUIClasses({\n      mouse: Constants.cursors.POINTER\n    });\n\n    if (selectedFeatureIds.length === 1) {\n      doubleClickZoom.enable(this);\n    } // Shift-click on an unselected feature\n\n  } else if (!isFeatureSelected && isShiftClick) {\n    // Add it to the selection\n    this.select(featureId);\n    this.updateUIClasses({\n      mouse: Constants.cursors.MOVE\n    }); // Click (without shift) on an unselected feature\n  } else if (!isFeatureSelected && !isShiftClick) {\n    // Make it the only selected feature\n    selectedFeatureIds.forEach(id => this.doRender(id));\n    this.setSelected(featureId);\n    this.updateUIClasses({\n      mouse: Constants.cursors.MOVE\n    });\n  } // No matter what, re-render the clicked feature\n\n\n  this.doRender(featureId);\n};\n\nSimpleSelect.onMouseDown = function (state, e) {\n  if (CommonSelectors.isActiveFeature(e)) return this.startOnActiveFeature(state, e);\n  if (this.drawConfig.boxSelect && CommonSelectors.isShiftMousedown(e)) return this.startBoxSelect(state, e);\n};\n\nSimpleSelect.startBoxSelect = function (state, e) {\n  this.stopExtendedInteractions(state);\n  this.map.dragPan.disable(); // Enable box select\n\n  state.boxSelectStartLocation = mouseEventPoint(e.originalEvent, this.map.getContainer());\n  state.canBoxSelect = true;\n};\n\nSimpleSelect.onTouchStart = function (state, e) {\n  if (CommonSelectors.isActiveFeature(e)) return this.startOnActiveFeature(state, e);\n};\n\nSimpleSelect.onDrag = function (state, e) {\n  if (state.canDragMove) return this.dragMove(state, e);\n  if (this.drawConfig.boxSelect && state.canBoxSelect) return this.whileBoxSelect(state, e);\n};\n\nSimpleSelect.whileBoxSelect = function (state, e) {\n  state.boxSelecting = true;\n  this.updateUIClasses({\n    mouse: Constants.cursors.ADD\n  }); // Create the box node if it doesn't exist\n\n  if (!state.boxSelectElement) {\n    state.boxSelectElement = document.createElement('div');\n    state.boxSelectElement.classList.add(Constants.classes.BOX_SELECT);\n    this.map.getContainer().appendChild(state.boxSelectElement);\n  } // Adjust the box node's width and xy position\n\n\n  const current = mouseEventPoint(e.originalEvent, this.map.getContainer());\n  const minX = Math.min(state.boxSelectStartLocation.x, current.x);\n  const maxX = Math.max(state.boxSelectStartLocation.x, current.x);\n  const minY = Math.min(state.boxSelectStartLocation.y, current.y);\n  const maxY = Math.max(state.boxSelectStartLocation.y, current.y);\n  const translateValue = `translate(${minX}px, ${minY}px)`;\n  state.boxSelectElement.style.transform = translateValue;\n  state.boxSelectElement.style.WebkitTransform = translateValue;\n  state.boxSelectElement.style.width = `${maxX - minX}px`;\n  state.boxSelectElement.style.height = `${maxY - minY}px`;\n};\n\nSimpleSelect.dragMove = function (state, e) {\n  // Dragging when drag move is enabled\n  state.dragMoving = true;\n  e.originalEvent.stopPropagation();\n  const delta = {\n    lng: e.lngLat.lng - state.dragMoveLocation.lng,\n    lat: e.lngLat.lat - state.dragMoveLocation.lat\n  };\n  moveFeatures(this.getSelected(), delta);\n  state.dragMoveLocation = e.lngLat;\n};\n\nSimpleSelect.onMouseUp = function (state, e) {\n  // End any extended interactions\n  if (state.dragMoving) {\n    this.fireUpdate();\n  } else if (state.boxSelecting) {\n    const bbox = [state.boxSelectStartLocation, mouseEventPoint(e.originalEvent, this.map.getContainer())];\n    const featuresInBox = this.featuresAt(null, bbox, 'click');\n    const idsToSelect = this.getUniqueIds(featuresInBox).filter(id => !this.isSelected(id));\n\n    if (idsToSelect.length) {\n      this.select(idsToSelect);\n      idsToSelect.forEach(id => this.doRender(id));\n      this.updateUIClasses({\n        mouse: Constants.cursors.MOVE\n      });\n    }\n  }\n\n  this.stopExtendedInteractions(state);\n};\n\nSimpleSelect.toDisplayFeatures = function (state, geojson, display) {\n  geojson.properties.active = this.isSelected(geojson.properties.id) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  display(geojson);\n  this.fireActionable();\n  if (geojson.properties.active !== Constants.activeStates.ACTIVE || geojson.geometry.type === Constants.geojsonTypes.POINT) return;\n  createSupplementaryPoints(geojson).forEach(display);\n};\n\nSimpleSelect.onTrash = function () {\n  this.deleteFeature(this.getSelectedIds());\n  this.fireActionable();\n};\n\nSimpleSelect.onCombineFeatures = function () {\n  const selectedFeatures = this.getSelected();\n  if (selectedFeatures.length === 0 || selectedFeatures.length < 2) return;\n  const coordinates = [],\n        featuresCombined = [];\n  const featureType = selectedFeatures[0].type.replace('Multi', '');\n\n  for (let i = 0; i < selectedFeatures.length; i++) {\n    const feature = selectedFeatures[i];\n\n    if (feature.type.replace('Multi', '') !== featureType) {\n      return;\n    }\n\n    if (feature.type.includes('Multi')) {\n      feature.getCoordinates().forEach(subcoords => {\n        coordinates.push(subcoords);\n      });\n    } else {\n      coordinates.push(feature.getCoordinates());\n    }\n\n    featuresCombined.push(feature.toGeoJSON());\n  }\n\n  if (featuresCombined.length > 1) {\n    const multiFeature = this.newFeature({\n      type: Constants.geojsonTypes.FEATURE,\n      properties: featuresCombined[0].properties,\n      geometry: {\n        type: `Multi${featureType}`,\n        coordinates: coordinates\n      }\n    });\n    this.addFeature(multiFeature);\n    this.deleteFeature(this.getSelectedIds(), {\n      silent: true\n    });\n    this.setSelected([multiFeature.id]);\n    this.map.fire(Constants.events.COMBINE_FEATURES, {\n      createdFeatures: [multiFeature.toGeoJSON()],\n      deletedFeatures: featuresCombined\n    });\n  }\n\n  this.fireActionable();\n};\n\nSimpleSelect.onUncombineFeatures = function () {\n  const selectedFeatures = this.getSelected();\n  if (selectedFeatures.length === 0) return;\n  const createdFeatures = [];\n  const featuresUncombined = [];\n\n  for (let i = 0; i < selectedFeatures.length; i++) {\n    const feature = selectedFeatures[i];\n\n    if (this.isInstanceOf('MultiFeature', feature)) {\n      feature.getFeatures().forEach(subFeature => {\n        this.addFeature(subFeature);\n        subFeature.properties = feature.properties;\n        createdFeatures.push(subFeature.toGeoJSON());\n        this.select([subFeature.id]);\n      });\n      this.deleteFeature(feature.id, {\n        silent: true\n      });\n      featuresUncombined.push(feature.toGeoJSON());\n    }\n  }\n\n  if (createdFeatures.length > 1) {\n    this.map.fire(Constants.events.UNCOMBINE_FEATURES, {\n      createdFeatures: createdFeatures,\n      deletedFeatures: featuresUncombined\n    });\n  }\n\n  this.fireActionable();\n};\n\nmodule.exports = SimpleSelect;","map":{"version":3,"sources":["C:/Users/michele/Desktop/IT/Code/react/aboutmi/node_modules/@mapbox/mapbox-gl-draw/src/modes/simple_select.js"],"names":["CommonSelectors","require","mouseEventPoint","createSupplementaryPoints","StringSet","doubleClickZoom","moveFeatures","Constants","SimpleSelect","onSetup","opts","state","dragMoveLocation","boxSelectStartLocation","boxSelectElement","undefined","boxSelecting","canBoxSelect","dragMoveing","canDragMove","initiallySelectedFeatureIds","featureIds","setSelected","filter","id","getFeature","fireActionable","setActionableState","combineFeatures","uncombineFeatures","trash","fireUpdate","map","fire","events","UPDATE","action","updateActions","MOVE","features","getSelected","f","toGeoJSON","selectedFeatures","multiFeatures","feature","isInstanceOf","length","featureType","type","replace","forEach","getUniqueIds","allFeatures","ids","s","properties","reduce","memo","add","values","stopExtendedInteractions","parentNode","removeChild","dragPan","enable","dragMoving","onStop","onMouseMove","onMouseOut","onTap","onClick","e","noTarget","clickAnywhere","isOfMetaType","meta","VERTEX","clickOnVertex","isFeature","clickOnFeature","wasSelected","getSelectedIds","clearSelectedFeatures","doRender","changeMode","modes","DIRECT_SELECT","featureId","featureTarget","parent","coordPath","coord_path","startPos","lngLat","updateUIClasses","mouse","cursors","startOnActiveFeature","disable","isShiftClick","isShiftDown","selectedFeatureIds","isFeatureSelected","isSelected","geojsonTypes","POINT","deselect","POINTER","select","onMouseDown","isActiveFeature","drawConfig","boxSelect","isShiftMousedown","startBoxSelect","originalEvent","getContainer","onTouchStart","onDrag","dragMove","whileBoxSelect","ADD","document","createElement","classList","classes","BOX_SELECT","appendChild","current","minX","Math","min","x","maxX","max","minY","y","maxY","translateValue","style","transform","WebkitTransform","width","height","stopPropagation","delta","lng","lat","onMouseUp","bbox","featuresInBox","featuresAt","idsToSelect","toDisplayFeatures","geojson","display","active","activeStates","ACTIVE","INACTIVE","geometry","onTrash","deleteFeature","onCombineFeatures","coordinates","featuresCombined","i","includes","getCoordinates","subcoords","push","multiFeature","newFeature","FEATURE","addFeature","silent","COMBINE_FEATURES","createdFeatures","deletedFeatures","onUncombineFeatures","featuresUncombined","getFeatures","subFeature","UNCOMBINE_FEATURES","module","exports"],"mappings":"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","sourcesContent":["const CommonSelectors = require('../lib/common_selectors');\r\nconst mouseEventPoint = require('../lib/mouse_event_point');\r\nconst createSupplementaryPoints = require('../lib/create_supplementary_points');\r\nconst StringSet = require('../lib/string_set');\r\nconst doubleClickZoom = require('../lib/double_click_zoom');\r\nconst moveFeatures = require('../lib/move_features');\r\nconst Constants = require('../constants');\r\n\r\nconst SimpleSelect = {};\r\n\r\nSimpleSelect.onSetup = function(opts) {\r\n  // turn the opts into state.\r\n  const state = {\r\n    dragMoveLocation: null,\r\n    boxSelectStartLocation: null,\r\n    boxSelectElement: undefined,\r\n    boxSelecting: false,\r\n    canBoxSelect: false,\r\n    dragMoveing: false,\r\n    canDragMove: false,\r\n    initiallySelectedFeatureIds: opts.featureIds || []\r\n  };\r\n\r\n  this.setSelected(state.initiallySelectedFeatureIds.filter(id => {\r\n    return this.getFeature(id) !== undefined;\r\n  }));\r\n  this.fireActionable();\r\n\r\n  this.setActionableState({\r\n    combineFeatures: true,\r\n    uncombineFeatures: true,\r\n    trash: true\r\n  });\r\n\r\n  return state;\r\n};\r\n\r\nSimpleSelect.fireUpdate = function() {\r\n  this.map.fire(Constants.events.UPDATE, {\r\n    action: Constants.updateActions.MOVE,\r\n    features: this.getSelected().map(f => f.toGeoJSON())\r\n  });\r\n};\r\n\r\nSimpleSelect.fireActionable = function() {\r\n  const selectedFeatures = this.getSelected();\r\n\r\n  const multiFeatures = selectedFeatures.filter(\r\n    feature => this.isInstanceOf('MultiFeature', feature)\r\n  );\r\n\r\n  let combineFeatures = false;\r\n\r\n  if (selectedFeatures.length > 1) {\r\n    combineFeatures = true;\r\n    const featureType = selectedFeatures[0].type.replace('Multi', '');\r\n    selectedFeatures.forEach(feature => {\r\n      if (feature.type.replace('Multi', '') !== featureType) {\r\n        combineFeatures = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  const uncombineFeatures = multiFeatures.length > 0;\r\n  const trash = selectedFeatures.length > 0;\r\n\r\n  this.setActionableState({\r\n    combineFeatures, uncombineFeatures, trash\r\n  });\r\n};\r\n\r\nSimpleSelect.getUniqueIds = function(allFeatures) {\r\n  if (!allFeatures.length) return [];\r\n  const ids = allFeatures.map(s => s.properties.id)\r\n    .filter(id => id !== undefined)\r\n    .reduce((memo, id) => {\r\n      memo.add(id);\r\n      return memo;\r\n    }, new StringSet());\r\n\r\n  return ids.values();\r\n};\r\n\r\nSimpleSelect.stopExtendedInteractions = function(state) {\r\n  if (state.boxSelectElement) {\r\n    if (state.boxSelectElement.parentNode) state.boxSelectElement.parentNode.removeChild(state.boxSelectElement);\r\n    state.boxSelectElement = null;\r\n  }\r\n\r\n  this.map.dragPan.enable();\r\n\r\n  state.boxSelecting = false;\r\n  state.canBoxSelect = false;\r\n  state.dragMoving = false;\r\n  state.canDragMove = false;\r\n};\r\n\r\nSimpleSelect.onStop = function() {\r\n  doubleClickZoom.enable(this);\r\n};\r\n\r\nSimpleSelect.onMouseMove = function(state) {\r\n  // On mousemove that is not a drag, stop extended interactions.\r\n  // This is useful if you drag off the canvas, release the button,\r\n  // then move the mouse back over the canvas --- we don't allow the\r\n  // interaction to continue then, but we do let it continue if you held\r\n  // the mouse button that whole time\r\n  return this.stopExtendedInteractions(state);\r\n};\r\n\r\nSimpleSelect.onMouseOut = function(state) {\r\n  // As soon as you mouse leaves the canvas, update the feature\r\n  if (state.dragMoving) return this.fireUpdate();\r\n};\r\n\r\nSimpleSelect.onTap = SimpleSelect.onClick = function(state, e) {\r\n  // Click (with or without shift) on no feature\r\n  if (CommonSelectors.noTarget(e)) return this.clickAnywhere(state, e); // also tap\r\n  if (CommonSelectors.isOfMetaType(Constants.meta.VERTEX)(e)) return this.clickOnVertex(state, e); //tap\r\n  if (CommonSelectors.isFeature(e)) return this.clickOnFeature(state, e);\r\n};\r\n\r\nSimpleSelect.clickAnywhere = function (state) {\r\n  // Clear the re-render selection\r\n  const wasSelected = this.getSelectedIds();\r\n  if (wasSelected.length) {\r\n    this.clearSelectedFeatures();\r\n    wasSelected.forEach(id => this.doRender(id));\r\n  }\r\n  doubleClickZoom.enable(this);\r\n  this.stopExtendedInteractions(state);\r\n};\r\n\r\nSimpleSelect.clickOnVertex = function(state, e) {\r\n  // Enter direct select mode\r\n  this.changeMode(Constants.modes.DIRECT_SELECT, {\r\n    featureId: e.featureTarget.properties.parent,\r\n    coordPath: e.featureTarget.properties.coord_path,\r\n    startPos: e.lngLat\r\n  });\r\n  this.updateUIClasses({ mouse: Constants.cursors.MOVE });\r\n};\r\n\r\nSimpleSelect.startOnActiveFeature = function(state, e) {\r\n  // Stop any already-underway extended interactions\r\n  this.stopExtendedInteractions(state);\r\n\r\n  // Disable map.dragPan immediately so it can't start\r\n  this.map.dragPan.disable();\r\n\r\n  // Re-render it and enable drag move\r\n  this.doRender(e.featureTarget.properties.id);\r\n\r\n  // Set up the state for drag moving\r\n  state.canDragMove = true;\r\n  state.dragMoveLocation = e.lngLat;\r\n};\r\n\r\nSimpleSelect.clickOnFeature = function(state, e) {\r\n  // Stop everything\r\n  doubleClickZoom.disable(this);\r\n  this.stopExtendedInteractions(state);\r\n\r\n  const isShiftClick = CommonSelectors.isShiftDown(e);\r\n  const selectedFeatureIds = this.getSelectedIds();\r\n  const featureId = e.featureTarget.properties.id;\r\n  const isFeatureSelected = this.isSelected(featureId);\r\n\r\n  // Click (without shift) on any selected feature but a point\r\n  if (!isShiftClick && isFeatureSelected && this.getFeature(featureId).type !== Constants.geojsonTypes.POINT) {\r\n    // Enter direct select mode\r\n    return this.changeMode(Constants.modes.DIRECT_SELECT, {\r\n      featureId: featureId\r\n    });\r\n  }\r\n\r\n  // Shift-click on a selected feature\r\n  if (isFeatureSelected && isShiftClick) {\r\n    // Deselect it\r\n    this.deselect(featureId);\r\n    this.updateUIClasses({ mouse: Constants.cursors.POINTER });\r\n    if (selectedFeatureIds.length === 1) {\r\n      doubleClickZoom.enable(this);\r\n    }\r\n  // Shift-click on an unselected feature\r\n  } else if (!isFeatureSelected && isShiftClick) {\r\n    // Add it to the selection\r\n    this.select(featureId);\r\n    this.updateUIClasses({ mouse: Constants.cursors.MOVE });\r\n  // Click (without shift) on an unselected feature\r\n  } else if (!isFeatureSelected && !isShiftClick) {\r\n    // Make it the only selected feature\r\n    selectedFeatureIds.forEach(id => this.doRender(id));\r\n    this.setSelected(featureId);\r\n    this.updateUIClasses({ mouse: Constants.cursors.MOVE });\r\n  }\r\n\r\n  // No matter what, re-render the clicked feature\r\n  this.doRender(featureId);\r\n};\r\n\r\nSimpleSelect.onMouseDown = function(state, e) {\r\n  if (CommonSelectors.isActiveFeature(e)) return this.startOnActiveFeature(state, e);\r\n  if (this.drawConfig.boxSelect && CommonSelectors.isShiftMousedown(e)) return this.startBoxSelect(state, e);\r\n};\r\n\r\nSimpleSelect.startBoxSelect = function(state, e) {\r\n  this.stopExtendedInteractions(state);\r\n  this.map.dragPan.disable();\r\n  // Enable box select\r\n  state.boxSelectStartLocation = mouseEventPoint(e.originalEvent, this.map.getContainer());\r\n  state.canBoxSelect = true;\r\n};\r\n\r\nSimpleSelect.onTouchStart = function(state, e) {\r\n  if (CommonSelectors.isActiveFeature(e)) return this.startOnActiveFeature(state, e);\r\n};\r\n\r\nSimpleSelect.onDrag = function(state, e) {\r\n  if (state.canDragMove) return this.dragMove(state, e);\r\n  if (this.drawConfig.boxSelect && state.canBoxSelect) return this.whileBoxSelect(state, e);\r\n};\r\n\r\nSimpleSelect.whileBoxSelect = function(state, e) {\r\n  state.boxSelecting = true;\r\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\r\n\r\n  // Create the box node if it doesn't exist\r\n  if (!state.boxSelectElement) {\r\n    state.boxSelectElement = document.createElement('div');\r\n    state.boxSelectElement.classList.add(Constants.classes.BOX_SELECT);\r\n    this.map.getContainer().appendChild(state.boxSelectElement);\r\n  }\r\n\r\n  // Adjust the box node's width and xy position\r\n  const current = mouseEventPoint(e.originalEvent, this.map.getContainer());\r\n  const minX = Math.min(state.boxSelectStartLocation.x, current.x);\r\n  const maxX = Math.max(state.boxSelectStartLocation.x, current.x);\r\n  const minY = Math.min(state.boxSelectStartLocation.y, current.y);\r\n  const maxY = Math.max(state.boxSelectStartLocation.y, current.y);\r\n  const translateValue = `translate(${minX}px, ${minY}px)`;\r\n  state.boxSelectElement.style.transform = translateValue;\r\n  state.boxSelectElement.style.WebkitTransform = translateValue;\r\n  state.boxSelectElement.style.width = `${maxX - minX}px`;\r\n  state.boxSelectElement.style.height = `${maxY - minY}px`;\r\n};\r\n\r\nSimpleSelect.dragMove = function(state, e) {\r\n  // Dragging when drag move is enabled\r\n  state.dragMoving = true;\r\n  e.originalEvent.stopPropagation();\r\n\r\n  const delta = {\r\n    lng: e.lngLat.lng - state.dragMoveLocation.lng,\r\n    lat: e.lngLat.lat - state.dragMoveLocation.lat\r\n  };\r\n\r\n  moveFeatures(this.getSelected(), delta);\r\n\r\n  state.dragMoveLocation = e.lngLat;\r\n};\r\n\r\nSimpleSelect.onMouseUp = function(state, e) {\r\n  // End any extended interactions\r\n  if (state.dragMoving) {\r\n    this.fireUpdate();\r\n  } else if (state.boxSelecting) {\r\n    const bbox = [\r\n      state.boxSelectStartLocation,\r\n      mouseEventPoint(e.originalEvent, this.map.getContainer())\r\n    ];\r\n    const featuresInBox = this.featuresAt(null, bbox, 'click');\r\n    const idsToSelect = this.getUniqueIds(featuresInBox)\r\n      .filter(id => !this.isSelected(id));\r\n\r\n    if (idsToSelect.length) {\r\n      this.select(idsToSelect);\r\n      idsToSelect.forEach(id => this.doRender(id));\r\n      this.updateUIClasses({ mouse: Constants.cursors.MOVE });\r\n    }\r\n  }\r\n  this.stopExtendedInteractions(state);\r\n};\r\n\r\nSimpleSelect.toDisplayFeatures = function(state, geojson, display) {\r\n  geojson.properties.active = (this.isSelected(geojson.properties.id)) ?\r\n    Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\r\n  display(geojson);\r\n  this.fireActionable();\r\n  if (geojson.properties.active !== Constants.activeStates.ACTIVE ||\r\n    geojson.geometry.type === Constants.geojsonTypes.POINT) return;\r\n  createSupplementaryPoints(geojson).forEach(display);\r\n};\r\n\r\nSimpleSelect.onTrash = function() {\r\n  this.deleteFeature(this.getSelectedIds());\r\n  this.fireActionable();\r\n};\r\n\r\nSimpleSelect.onCombineFeatures = function() {\r\n  const selectedFeatures = this.getSelected();\r\n\r\n  if (selectedFeatures.length === 0 || selectedFeatures.length < 2) return;\r\n\r\n  const coordinates = [], featuresCombined = [];\r\n  const featureType = selectedFeatures[0].type.replace('Multi', '');\r\n\r\n  for (let i = 0; i < selectedFeatures.length; i++) {\r\n    const feature = selectedFeatures[i];\r\n\r\n    if (feature.type.replace('Multi', '') !== featureType) {\r\n      return;\r\n    }\r\n    if (feature.type.includes('Multi')) {\r\n      feature.getCoordinates().forEach((subcoords) => {\r\n        coordinates.push(subcoords);\r\n      });\r\n    } else {\r\n      coordinates.push(feature.getCoordinates());\r\n    }\r\n\r\n    featuresCombined.push(feature.toGeoJSON());\r\n  }\r\n\r\n  if (featuresCombined.length > 1) {\r\n    const multiFeature = this.newFeature({\r\n      type: Constants.geojsonTypes.FEATURE,\r\n      properties: featuresCombined[0].properties,\r\n      geometry: {\r\n        type: `Multi${featureType}`,\r\n        coordinates: coordinates\r\n      }\r\n    });\r\n\r\n    this.addFeature(multiFeature);\r\n    this.deleteFeature(this.getSelectedIds(), { silent: true });\r\n    this.setSelected([multiFeature.id]);\r\n\r\n    this.map.fire(Constants.events.COMBINE_FEATURES, {\r\n      createdFeatures: [multiFeature.toGeoJSON()],\r\n      deletedFeatures: featuresCombined\r\n    });\r\n  }\r\n  this.fireActionable();\r\n};\r\n\r\nSimpleSelect.onUncombineFeatures = function() {\r\n  const selectedFeatures = this.getSelected();\r\n  if (selectedFeatures.length === 0) return;\r\n\r\n  const createdFeatures = [];\r\n  const featuresUncombined = [];\r\n\r\n  for (let i = 0; i < selectedFeatures.length; i++) {\r\n    const feature = selectedFeatures[i];\r\n\r\n    if (this.isInstanceOf('MultiFeature', feature)) {\r\n      feature.getFeatures().forEach((subFeature) => {\r\n        this.addFeature(subFeature);\r\n        subFeature.properties = feature.properties;\r\n        createdFeatures.push(subFeature.toGeoJSON());\r\n        this.select([subFeature.id]);\r\n      });\r\n      this.deleteFeature(feature.id, { silent: true });\r\n      featuresUncombined.push(feature.toGeoJSON());\r\n    }\r\n  }\r\n\r\n  if (createdFeatures.length > 1) {\r\n    this.map.fire(Constants.events.UNCOMBINE_FEATURES, {\r\n      createdFeatures: createdFeatures,\r\n      deletedFeatures: featuresUncombined\r\n    });\r\n  }\r\n  this.fireActionable();\r\n};\r\n\r\nmodule.exports = SimpleSelect;\r\n"]},"metadata":{},"sourceType":"script"}