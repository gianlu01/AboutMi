{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar martinez = require(\"martinez-polygon-clipping\");\n\nvar invariant_1 = require(\"@turf/invariant\");\n\nvar helpers_1 = require(\"@turf/helpers\");\n/**\r\n * Takes two {@link (Multi)Polygon(s)} and returns a combined polygon. If the input polygons are not contiguous, this function returns a {@link MultiPolygon} feature.\r\n *\r\n * @name union\r\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\r\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\r\n * @param {Object} [options={}] Optional Parameters\r\n * @param {Object} [options.properties={}] Translate Properties to output Feature\r\n * @returns {Feature<(Polygon|MultiPolygon)>} a combined {@link Polygon} or {@link MultiPolygon} feature\r\n * @example\r\n * var poly1 = turf.polygon([[\r\n *     [-82.574787, 35.594087],\r\n *     [-82.574787, 35.615581],\r\n *     [-82.545261, 35.615581],\r\n *     [-82.545261, 35.594087],\r\n *     [-82.574787, 35.594087]\r\n * ]], {\"fill\": \"#0f0\"});\r\n * var poly2 = turf.polygon([[\r\n *     [-82.560024, 35.585153],\r\n *     [-82.560024, 35.602602],\r\n *     [-82.52964, 35.602602],\r\n *     [-82.52964, 35.585153],\r\n *     [-82.560024, 35.585153]\r\n * ]], {\"fill\": \"#00f\"});\r\n *\r\n * var union = turf.union(poly1, poly2);\r\n *\r\n * //addToMap\r\n * var addToMap = [poly1, poly2, union];\r\n */\n\n\nfunction union(polygon1, polygon2, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var coords1 = invariant_1.getGeom(polygon1).coordinates;\n  var coords2 = invariant_1.getGeom(polygon2).coordinates;\n  var unioned = martinez.union(coords1, coords2);\n  if (unioned.length === 0) return null;\n  if (unioned.length === 1) return helpers_1.polygon(unioned[0], options.properties);else return helpers_1.multiPolygon(unioned, options.properties);\n}\n\nexports.default = union;","map":null,"metadata":{},"sourceType":"script"}