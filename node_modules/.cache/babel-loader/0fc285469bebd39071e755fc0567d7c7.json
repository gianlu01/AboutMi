{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DrawEllipseUsingThreePointsMode = void 0;\n\nvar _distance = _interopRequireDefault(require(\"@turf/distance\"));\n\nvar _ellipse = _interopRequireDefault(require(\"@turf/ellipse\"));\n\nvar _bearing = _interopRequireDefault(require(\"@turf/bearing\"));\n\nvar _helpers = require(\"@turf/helpers\");\n\nvar _geojsonEditMode = require(\"./geojson-edit-mode.js\");\n\nvar _threeClickPolygonMode = require(\"./three-click-polygon-mode.js\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar DrawEllipseUsingThreePointsMode =\n/*#__PURE__*/\nfunction (_ThreeClickPolygonMod) {\n  _inherits(DrawEllipseUsingThreePointsMode, _ThreeClickPolygonMod);\n\n  function DrawEllipseUsingThreePointsMode() {\n    _classCallCheck(this, DrawEllipseUsingThreePointsMode);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DrawEllipseUsingThreePointsMode).apply(this, arguments));\n  }\n\n  _createClass(DrawEllipseUsingThreePointsMode, [{\n    key: \"getThreeClickPolygon\",\n    value: function getThreeClickPolygon(coord1, coord2, coord3, modeConfig) {\n      var centerCoordinates = (0, _geojsonEditMode.getIntermediatePosition)(coord1, coord2);\n      var xSemiAxis = Math.max((0, _distance.default)(centerCoordinates, (0, _helpers.point)(coord3)), 0.001);\n      var ySemiAxis = Math.max((0, _distance.default)(coord1, coord2), 0.001) / 2;\n      var options = {\n        angle: (0, _bearing.default)(coord1, coord2)\n      };\n      return (0, _ellipse.default)(centerCoordinates, xSemiAxis, ySemiAxis, options);\n    }\n  }]);\n\n  return DrawEllipseUsingThreePointsMode;\n}(_threeClickPolygonMode.ThreeClickPolygonMode);\n\nexports.DrawEllipseUsingThreePointsMode = DrawEllipseUsingThreePointsMode;","map":null,"metadata":{},"sourceType":"script"}