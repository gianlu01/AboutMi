{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\n\nvar isEqual = require('deep-equal');\n\nimport diff from './util/diff';\nimport { generateID } from './util/uid';\nimport { withMap } from './context';\nvar types = ['symbol', 'line', 'fill', 'fill-extrusion', 'circle'];\n\nvar toCamelCase = function (str) {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (letter, index) {\n    return index === 0 ? letter.toLowerCase() : letter.toUpperCase();\n  }).replace(/[\\s+]|-/g, '');\n};\n\nvar eventToHandler = {\n  mousemove: 'OnMouseMove',\n  mouseenter: 'OnMouseEnter',\n  mouseleave: 'OnMouseLeave',\n  mousedown: 'OnMouseDown',\n  mouseup: 'OnMouseUp',\n  click: 'OnClick'\n};\n\nvar GeoJSONLayer = function (_super) {\n  __extends(GeoJSONLayer, _super);\n\n  function GeoJSONLayer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.id = _this.props.id || \"geojson-\" + generateID();\n    _this.source = __assign({\n      type: 'geojson'\n    }, _this.props.sourceOptions, {\n      data: _this.props.data\n    });\n    _this.layerIds = [];\n\n    _this.buildLayerId = function (type) {\n      return _this.id + \"-\" + type;\n    };\n\n    _this.createLayer = function (type) {\n      var _a = _this.props,\n          before = _a.before,\n          layerOptions = _a.layerOptions,\n          map = _a.map;\n\n      var layerId = _this.buildLayerId(type);\n\n      _this.layerIds.push(layerId);\n\n      var paint = _this.props[toCamelCase(type) + \"Paint\"] || {};\n      var visibility = Object.keys(paint).length ? 'visible' : 'none';\n      var layout = _this.props[toCamelCase(type) + \"Layout\"] || {\n        visibility: visibility\n      };\n      map.addLayer(__assign({\n        id: layerId,\n        source: _this.id,\n        type: type,\n        paint: paint,\n        layout: layout\n      }, layerOptions), before);\n\n      _this.mapLayerMouseHandlers(type);\n    };\n\n    _this.mapLayerMouseHandlers = function (type) {\n      var map = _this.props.map;\n\n      var layerId = _this.buildLayerId(type);\n\n      var events = Object.keys(eventToHandler);\n      events.forEach(function (event) {\n        var handler = _this.props[\"\" + toCamelCase(type) + eventToHandler[event]] || null;\n\n        if (handler) {\n          map.on(event, layerId, handler);\n        }\n      });\n    };\n\n    _this.onStyleDataChange = function () {\n      if (!_this.props.map.getSource(_this.id)) {\n        _this.unbind();\n\n        _this.initialize();\n\n        _this.forceUpdate();\n      }\n    };\n\n    _this.isGeoJSONSource = function (source) {\n      return !!source && typeof source.setData === 'function';\n    };\n\n    return _this;\n  }\n\n  GeoJSONLayer.prototype.initialize = function () {\n    var map = this.props.map;\n    map.addSource(this.id, this.source);\n    this.createLayer('symbol');\n    this.createLayer('line');\n    this.createLayer('fill');\n    this.createLayer('fill-extrusion');\n    this.createLayer('circle');\n  };\n\n  GeoJSONLayer.prototype.unbind = function () {\n    var _this = this;\n\n    var map = this.props.map;\n\n    if (map.getSource(this.id)) {\n      var layers = map.getStyle().layers;\n\n      if (layers) {\n        layers.filter(function (layer) {\n          return layer.source === _this.id;\n        }).forEach(function (layer) {\n          return map.removeLayer(layer.id);\n        });\n      }\n\n      map.removeSource(this.id);\n    }\n\n    types.forEach(function (type) {\n      var events = Object.keys(eventToHandler);\n      events.forEach(function (event) {\n        var prop = toCamelCase(type) + eventToHandler[event];\n\n        if (_this.props[prop]) {\n          map.off(event, _this.buildLayerId(type), _this.props[prop]);\n        }\n      });\n    });\n    this.layerIds.forEach(function (lId) {\n      if (map.getLayer(lId)) {\n        map.removeLayer(lId);\n      }\n    });\n  };\n\n  GeoJSONLayer.prototype.UNSAFE_componentWillMount = function () {\n    var map = this.props.map;\n    this.initialize();\n    map.on('styledata', this.onStyleDataChange);\n  };\n\n  GeoJSONLayer.prototype.componentWillUnmount = function () {\n    var map = this.props.map;\n\n    if (!map || !map.getStyle()) {\n      return;\n    }\n\n    map.off('styledata', this.onStyleDataChange);\n    this.unbind();\n  };\n\n  GeoJSONLayer.prototype.UNSAFE_componentWillReceiveProps = function (props) {\n    var _this = this;\n\n    var _a = this.props,\n        data = _a.data,\n        before = _a.before,\n        layerOptions = _a.layerOptions,\n        map = _a.map;\n    var source = map.getSource(this.id);\n\n    if (!this.isGeoJSONSource(source)) {\n      return;\n    }\n\n    if (props.data !== data) {\n      source.setData(props.data);\n      this.source = __assign({\n        type: 'geojson'\n      }, props.sourceOptions, {\n        data: props.data\n      });\n    }\n\n    var layerFilterChanged = props.layerOptions && layerOptions && !isEqual(props.layerOptions.filter, layerOptions.filter);\n    types.forEach(function (type) {\n      var layerId = _this.buildLayerId(type);\n\n      if (props.layerOptions && layerFilterChanged) {\n        map.setFilter(layerId, props.layerOptions.filter || []);\n      }\n\n      var paintProp = toCamelCase(type) + 'Paint';\n\n      if (!isEqual(props[paintProp], _this.props[paintProp])) {\n        var paintDiff_1 = diff(_this.props[paintProp], props[paintProp]);\n        Object.keys(paintDiff_1).forEach(function (key) {\n          map.setPaintProperty(layerId, key, paintDiff_1[key]);\n        });\n      }\n\n      var layoutProp = toCamelCase(type) + 'Layout';\n\n      if (!isEqual(props[layoutProp], _this.props[layoutProp])) {\n        var layoutDiff_1 = diff(_this.props[layoutProp], props[layoutProp]);\n        Object.keys(layoutDiff_1).forEach(function (key) {\n          map.setLayoutProperty(layerId, key, layoutDiff_1[key]);\n        });\n      }\n\n      var events = Object.keys(eventToHandler);\n      events.forEach(function (event) {\n        var prop = toCamelCase(type) + eventToHandler[event];\n\n        if (props[prop] !== _this.props[prop]) {\n          if (_this.props[prop]) {\n            map.off(event, layerId, _this.props[prop]);\n          }\n\n          if (props[prop]) {\n            map.on(event, layerId, props[prop]);\n          }\n        }\n      });\n\n      if (before !== props.before) {\n        map.moveLayer(layerId, props.before);\n      }\n    });\n  };\n\n  GeoJSONLayer.prototype.render = function () {\n    return null;\n  };\n\n  return GeoJSONLayer;\n}(React.Component);\n\nexport { GeoJSONLayer };\nexport default withMap(GeoJSONLayer);","map":{"version":3,"sources":["../src/geojson-layer.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport * as React from 'react';\r\nvar isEqual = require('deep-equal');\r\nimport diff from './util/diff';\r\nimport { generateID } from './util/uid';\r\nimport { withMap } from './context';\r\nvar types = ['symbol', 'line', 'fill', 'fill-extrusion', 'circle'];\r\nvar toCamelCase = function (str) {\r\n    return str\r\n        .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (letter, index) {\r\n        return index === 0 ? letter.toLowerCase() : letter.toUpperCase();\r\n    })\r\n        .replace(/[\\s+]|-/g, '');\r\n};\r\nvar eventToHandler = {\r\n    mousemove: 'OnMouseMove',\r\n    mouseenter: 'OnMouseEnter',\r\n    mouseleave: 'OnMouseLeave',\r\n    mousedown: 'OnMouseDown',\r\n    mouseup: 'OnMouseUp',\r\n    click: 'OnClick'\r\n};\r\nvar GeoJSONLayer = (function (_super) {\r\n    __extends(GeoJSONLayer, _super);\r\n    function GeoJSONLayer() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.id = _this.props.id || \"geojson-\" + generateID();\r\n        _this.source = __assign({ type: 'geojson' }, _this.props.sourceOptions, { data: _this.props.data });\r\n        _this.layerIds = [];\r\n        _this.buildLayerId = function (type) {\r\n            return _this.id + \"-\" + type;\r\n        };\r\n        _this.createLayer = function (type) {\r\n            var _a = _this.props, before = _a.before, layerOptions = _a.layerOptions, map = _a.map;\r\n            var layerId = _this.buildLayerId(type);\r\n            _this.layerIds.push(layerId);\r\n            var paint = _this.props[toCamelCase(type) + \"Paint\"] || {};\r\n            var visibility = Object.keys(paint).length ? 'visible' : 'none';\r\n            var layout = _this.props[toCamelCase(type) + \"Layout\"] || {\r\n                visibility: visibility\r\n            };\r\n            map.addLayer(__assign({ id: layerId, source: _this.id, type: type,\r\n                paint: paint,\r\n                layout: layout }, layerOptions), before);\r\n            _this.mapLayerMouseHandlers(type);\r\n        };\r\n        _this.mapLayerMouseHandlers = function (type) {\r\n            var map = _this.props.map;\r\n            var layerId = _this.buildLayerId(type);\r\n            var events = Object.keys(eventToHandler);\r\n            events.forEach(function (event) {\r\n                var handler = _this.props[\"\" + toCamelCase(type) + eventToHandler[event]] || null;\r\n                if (handler) {\r\n                    map.on(event, layerId, handler);\r\n                }\r\n            });\r\n        };\r\n        _this.onStyleDataChange = function () {\r\n            if (!_this.props.map.getSource(_this.id)) {\r\n                _this.unbind();\r\n                _this.initialize();\r\n                _this.forceUpdate();\r\n            }\r\n        };\r\n        _this.isGeoJSONSource = function (source) {\r\n            return !!source &&\r\n                typeof source.setData === 'function';\r\n        };\r\n        return _this;\r\n    }\r\n    GeoJSONLayer.prototype.initialize = function () {\r\n        var map = this.props.map;\r\n        map.addSource(this.id, this.source);\r\n        this.createLayer('symbol');\r\n        this.createLayer('line');\r\n        this.createLayer('fill');\r\n        this.createLayer('fill-extrusion');\r\n        this.createLayer('circle');\r\n    };\r\n    GeoJSONLayer.prototype.unbind = function () {\r\n        var _this = this;\r\n        var map = this.props.map;\r\n        if (map.getSource(this.id)) {\r\n            var layers = map.getStyle().layers;\r\n            if (layers) {\r\n                layers\r\n                    .filter(function (layer) { return layer.source === _this.id; })\r\n                    .forEach(function (layer) { return map.removeLayer(layer.id); });\r\n            }\r\n            map.removeSource(this.id);\r\n        }\r\n        types.forEach(function (type) {\r\n            var events = Object.keys(eventToHandler);\r\n            events.forEach(function (event) {\r\n                var prop = toCamelCase(type) + eventToHandler[event];\r\n                if (_this.props[prop]) {\r\n                    map.off(event, _this.buildLayerId(type), _this.props[prop]);\r\n                }\r\n            });\r\n        });\r\n        this.layerIds.forEach(function (lId) {\r\n            if (map.getLayer(lId)) {\r\n                map.removeLayer(lId);\r\n            }\r\n        });\r\n    };\r\n    GeoJSONLayer.prototype.UNSAFE_componentWillMount = function () {\r\n        var map = this.props.map;\r\n        this.initialize();\r\n        map.on('styledata', this.onStyleDataChange);\r\n    };\r\n    GeoJSONLayer.prototype.componentWillUnmount = function () {\r\n        var map = this.props.map;\r\n        if (!map || !map.getStyle()) {\r\n            return;\r\n        }\r\n        map.off('styledata', this.onStyleDataChange);\r\n        this.unbind();\r\n    };\r\n    GeoJSONLayer.prototype.UNSAFE_componentWillReceiveProps = function (props) {\r\n        var _this = this;\r\n        var _a = this.props, data = _a.data, before = _a.before, layerOptions = _a.layerOptions, map = _a.map;\r\n        var source = map.getSource(this.id);\r\n        if (!this.isGeoJSONSource(source)) {\r\n            return;\r\n        }\r\n        if (props.data !== data) {\r\n            source.setData(props.data);\r\n            this.source = __assign({ type: 'geojson' }, props.sourceOptions, { data: props.data });\r\n        }\r\n        var layerFilterChanged = props.layerOptions &&\r\n            layerOptions &&\r\n            !isEqual(props.layerOptions.filter, layerOptions.filter);\r\n        types.forEach(function (type) {\r\n            var layerId = _this.buildLayerId(type);\r\n            if (props.layerOptions && layerFilterChanged) {\r\n                map.setFilter(layerId, props.layerOptions.filter || []);\r\n            }\r\n            var paintProp = toCamelCase(type) + 'Paint';\r\n            if (!isEqual(props[paintProp], _this.props[paintProp])) {\r\n                var paintDiff_1 = diff(_this.props[paintProp], props[paintProp]);\r\n                Object.keys(paintDiff_1).forEach(function (key) {\r\n                    map.setPaintProperty(layerId, key, paintDiff_1[key]);\r\n                });\r\n            }\r\n            var layoutProp = toCamelCase(type) + 'Layout';\r\n            if (!isEqual(props[layoutProp], _this.props[layoutProp])) {\r\n                var layoutDiff_1 = diff(_this.props[layoutProp], props[layoutProp]);\r\n                Object.keys(layoutDiff_1).forEach(function (key) {\r\n                    map.setLayoutProperty(layerId, key, layoutDiff_1[key]);\r\n                });\r\n            }\r\n            var events = Object.keys(eventToHandler);\r\n            events.forEach(function (event) {\r\n                var prop = toCamelCase(type) + eventToHandler[event];\r\n                if (props[prop] !== _this.props[prop]) {\r\n                    if (_this.props[prop]) {\r\n                        map.off(event, layerId, _this.props[prop]);\r\n                    }\r\n                    if (props[prop]) {\r\n                        map.on(event, layerId, props[prop]);\r\n                    }\r\n                }\r\n            });\r\n            if (before !== props.before) {\r\n                map.moveLayer(layerId, props.before);\r\n            }\r\n        });\r\n    };\r\n    GeoJSONLayer.prototype.render = function () {\r\n        return null;\r\n    };\r\n    return GeoJSONLayer;\r\n}(React.Component));\r\nexport { GeoJSONLayer };\r\nexport default withMap(GeoJSONLayer);\r\n//# sourceMappingURL=geojson-layer.js.map"]},"metadata":{},"sourceType":"module"}