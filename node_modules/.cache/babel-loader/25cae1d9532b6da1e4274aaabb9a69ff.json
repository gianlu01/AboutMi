{"ast":null,"code":"/**\r\n * @module ol/css\r\n */\n\n/**\r\n * @typedef {Object} FontParameters\r\n * @property {Array<string>} families\r\n * @property {string} style\r\n * @property {string} weight\r\n */\n\n/**\r\n * The CSS class for hidden feature.\r\n *\r\n * @const\r\n * @type {string}\r\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\r\n * The CSS class that we'll give the DOM elements to have them selectable.\r\n *\r\n * @const\r\n * @type {string}\r\n */\n\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\r\n * The CSS class that we'll give the DOM elements to have them unselectable.\r\n *\r\n * @const\r\n * @type {string}\r\n */\n\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\r\n * The CSS class for unsupported feature.\r\n *\r\n * @const\r\n * @type {string}\r\n */\n\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\r\n * The CSS class for controls.\r\n *\r\n * @const\r\n * @type {string}\r\n */\n\nexport var CLASS_CONTROL = 'ol-control';\n/**\r\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\r\n * to those elements which usually can be expanded.\r\n *\r\n * @const\r\n * @type {string}\r\n */\n\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\r\n * Get the list of font families from a font spec.  Note that this doesn't work\r\n * for font families that have commas in them.\r\n * @param {string} The CSS font property.\r\n * @return {FontParameters} The font families (or null if the input spec is invalid).\r\n */\n\nexport var getFontParameters = function () {\n  /**\r\n   * @type {CSSStyleDeclaration}\r\n   */\n  var style;\n  /**\r\n   * @type {Object<string, FontParameters>}\r\n   */\n\n  var cache = {};\n  return function (font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      var fontWeight = style.fontWeight;\n      var fontStyle = style.fontStyle;\n      style.font = '';\n\n      if (!family) {\n        return null;\n      }\n\n      var families = family.split(/,\\s?/);\n      cache[font] = {\n        families: families,\n        weight: fontWeight,\n        style: fontStyle\n      };\n    }\n\n    return cache[font];\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}