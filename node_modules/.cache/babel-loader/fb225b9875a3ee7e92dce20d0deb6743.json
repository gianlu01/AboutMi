{"ast":null,"code":"module.exports = normalize;\nvar types = {\n  Point: 'geometry',\n  MultiPoint: 'geometry',\n  LineString: 'geometry',\n  MultiLineString: 'geometry',\n  Polygon: 'geometry',\n  MultiPolygon: 'geometry',\n  GeometryCollection: 'geometry',\n  Feature: 'feature',\n  FeatureCollection: 'featurecollection'\n};\n/**\r\n * Normalize a GeoJSON feature into a FeatureCollection.\r\n *\r\n * @param {object} gj geojson data\r\n * @returns {object} normalized geojson data\r\n */\n\nfunction normalize(gj) {\n  if (!gj || !gj.type) return null;\n  var type = types[gj.type];\n  if (!type) return null;\n\n  if (type === 'geometry') {\n    return {\n      type: 'FeatureCollection',\n      features: [{\n        type: 'Feature',\n        properties: {},\n        geometry: gj\n      }]\n    };\n  } else if (type === 'feature') {\n    return {\n      type: 'FeatureCollection',\n      features: [gj]\n    };\n  } else if (type === 'featurecollection') {\n    return gj;\n  }\n}","map":{"version":3,"sources":["C:/Users/michele/Desktop/IT/Code/react/aboutmi/node_modules/@mapbox/geojson-normalize/index.js"],"names":["module","exports","normalize","types","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","Feature","FeatureCollection","gj","type","features","properties","geometry"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,SAAjB;AAEA,IAAIC,KAAK,GAAG;AACRC,EAAAA,KAAK,EAAE,UADC;AAERC,EAAAA,UAAU,EAAE,UAFJ;AAGRC,EAAAA,UAAU,EAAE,UAHJ;AAIRC,EAAAA,eAAe,EAAE,UAJT;AAKRC,EAAAA,OAAO,EAAE,UALD;AAMRC,EAAAA,YAAY,EAAE,UANN;AAORC,EAAAA,kBAAkB,EAAE,UAPZ;AAQRC,EAAAA,OAAO,EAAE,SARD;AASRC,EAAAA,iBAAiB,EAAE;AATX,CAAZ;AAYA;;;;;;;AAMA,SAASV,SAAT,CAAmBW,EAAnB,EAAuB;AACnB,MAAI,CAACA,EAAD,IAAO,CAACA,EAAE,CAACC,IAAf,EAAqB,OAAO,IAAP;AACrB,MAAIA,IAAI,GAAGX,KAAK,CAACU,EAAE,CAACC,IAAJ,CAAhB;AACA,MAAI,CAACA,IAAL,EAAW,OAAO,IAAP;;AAEX,MAAIA,IAAI,KAAK,UAAb,EAAyB;AACrB,WAAO;AACHA,MAAAA,IAAI,EAAE,mBADH;AAEHC,MAAAA,QAAQ,EAAE,CAAC;AACPD,QAAAA,IAAI,EAAE,SADC;AAEPE,QAAAA,UAAU,EAAE,EAFL;AAGPC,QAAAA,QAAQ,EAAEJ;AAHH,OAAD;AAFP,KAAP;AAQH,GATD,MASO,IAAIC,IAAI,KAAK,SAAb,EAAwB;AAC3B,WAAO;AACHA,MAAAA,IAAI,EAAE,mBADH;AAEHC,MAAAA,QAAQ,EAAE,CAACF,EAAD;AAFP,KAAP;AAIH,GALM,MAKA,IAAIC,IAAI,KAAK,mBAAb,EAAkC;AACrC,WAAOD,EAAP;AACH;AACJ","sourcesContent":["module.exports = normalize;\r\n\r\nvar types = {\r\n    Point: 'geometry',\r\n    MultiPoint: 'geometry',\r\n    LineString: 'geometry',\r\n    MultiLineString: 'geometry',\r\n    Polygon: 'geometry',\r\n    MultiPolygon: 'geometry',\r\n    GeometryCollection: 'geometry',\r\n    Feature: 'feature',\r\n    FeatureCollection: 'featurecollection'\r\n};\r\n\r\n/**\r\n * Normalize a GeoJSON feature into a FeatureCollection.\r\n *\r\n * @param {object} gj geojson data\r\n * @returns {object} normalized geojson data\r\n */\r\nfunction normalize(gj) {\r\n    if (!gj || !gj.type) return null;\r\n    var type = types[gj.type];\r\n    if (!type) return null;\r\n\r\n    if (type === 'geometry') {\r\n        return {\r\n            type: 'FeatureCollection',\r\n            features: [{\r\n                type: 'Feature',\r\n                properties: {},\r\n                geometry: gj\r\n            }]\r\n        };\r\n    } else if (type === 'feature') {\r\n        return {\r\n            type: 'FeatureCollection',\r\n            features: [gj]\r\n        };\r\n    } else if (type === 'featurecollection') {\r\n        return gj;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}