{"ast":null,"code":"/**\r\n * @module ol/rotationconstraint\r\n */\nimport { toRadians } from './math.js';\n/**\r\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\r\n */\n\n/**\r\n * @param {number|undefined} rotation Rotation.\r\n * @return {number|undefined} Rotation.\r\n */\n\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n/**\r\n * @param {number|undefined} rotation Rotation.\r\n * @return {number|undefined} Rotation.\r\n */\n\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n/**\r\n * @param {number} n N.\r\n * @return {Type} Rotation constraint.\r\n */\n\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\r\n     * @param {number|undefined} rotation Rotation.\r\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\r\n     * @return {number|undefined} Rotation.\r\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n/**\r\n * @param {number=} opt_tolerance Tolerance.\r\n * @return {Type} Rotation constraint.\r\n */\n\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\r\n     * @param {number|undefined} rotation Rotation.\r\n     * @param {boolean} opt_isMoving True if an interaction or animation is in progress.\r\n     * @return {number|undefined} Rotation.\r\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}","map":null,"metadata":{},"sourceType":"module"}