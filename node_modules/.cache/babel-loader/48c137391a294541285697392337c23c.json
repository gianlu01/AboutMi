{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\michi\\\\OneDrive\\\\Desktop\\\\AboutMi\\\\src\\\\components\\\\Maps.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactMapGL from 'react-map-gl';\nimport { Editor, EditorModes } from 'react-map-gl-draw'; //accessToken: 'pk.eyJ1IjoiZ2lhbmx1MDEiLCJhIjoiY2s1ejQ0a2gyMDY5NjNtcWp5cGF4Y21wMiJ9.S2-22wqQvv8B0aiya-Mh7A';\n//site URL: mapbox://styles/gianlu01/ck5z9olku3d2r1jov9drsa1uu\n\n/*export default function Maps(){\r\n  const [viewport, setViewport] = useState({\r\n    width: '100%',\r\n    height: '100vh',\r\n    latitude: 45.466944,\r\n    longitude: 9.19,\r\n    zoom: 11\r\n  });\r\n\r\n      //const Milan = transform([45.466944, 9.19], 'ESPG:4326', 'ESPG:4357'); 11\r\n      return (\r\n        <div>\r\n        <ReactMapGL\r\n        {...viewport}\r\n        onViewportChange={setViewport}\r\n        mapboxApiAccessToken={'pk.eyJ1IjoiZ2lhbmx1MDEiLCJhIjoiY2s1ejQ0a2gyMDY5NjNtcWp5cGF4Y21wMiJ9.S2-22wqQvv8B0aiya-Mh7A'}\r\n        mapStyle={'mapbox://styles/gianlu01/ck5z9olku3d2r1jov9drsa1uu'  }\r\n        >\r\n        <div>\r\n          <input placeholder=\"Cerca un locale\"></input>\r\n        </div>\r\n        </ReactMapGL>\r\n        </div>\r\n      );\r\n  }*/\n\nconst MODES = [{\n  id: EditorModes.EDITING,\n  text: 'Select and Edit Feature'\n}, {\n  id: EditorModes.DRAW_POINT,\n  text: 'Draw Point'\n}, {\n  id: EditorModes.DRAW_PATH,\n  text: 'Draw Polyline'\n}, {\n  id: EditorModes.DRAW_POLYGON,\n  text: 'Draw Polygon'\n}, {\n  id: EditorModes.DRAW_RECTANGLE,\n  text: 'Draw Rectangle'\n}];\nconst DEFAULT_VIEWPORT = {\n  width: '100vh',\n  height: '100%',\n  longitude: -122.45,\n  latitude: 37.78,\n  zoom: 14\n};\n\nclass Maps extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // map\n      viewport: DEFAULT_VIEWPORT,\n      // editor\n      selectedMode: EditorModes.READ_ONLY\n    };\n\n    this._switchMode = evt => {\n      const selectedMode = evt.target.id;\n      this.setState({\n        selectedMode: selectedMode === this.state.selectedMode ? null : selectedMode\n      });\n    };\n\n    this._renderToolbar = () => {\n      return React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          top: 0,\n          right: 0,\n          maxWidth: '320px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        onChange: this._switchMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"--Please choose a mode--\"), MODES.map(mode => React.createElement(\"option\", {\n        value: mode.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, mode.text))));\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          viewport = _this$state.viewport,\n          selectedMode = _this$state.selectedMode;\n    return React.createElement(ReactMapGL, Object.assign({}, viewport, {\n      width: \"100%\",\n      height: \"100%\",\n      mapboxApiAccessToken: 'pk.eyJ1IjoiZ2lhbmx1MDEiLCJhIjoiY2s1ejQ0a2gyMDY5NjNtcWp5cGF4Y21wMiJ9.S2-22wqQvv8B0aiya-Mh7A',\n      mapStyle: 'mapbox://styles/gianlu01/ck5z9olku3d2r1jov9drsa1uu',\n      onViewportChange: this.setState(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Editor, {\n      clickRadius: 12,\n      mode: selectedMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), this._renderToolbar());\n  }\n\n}\n\nexport default Maps;","map":{"version":3,"sources":["C:/Users/michi/OneDrive/Desktop/AboutMi/src/components/Maps.js"],"names":["React","useState","ReactDOM","ReactMapGL","Editor","EditorModes","MODES","id","EDITING","text","DRAW_POINT","DRAW_PATH","DRAW_POLYGON","DRAW_RECTANGLE","DEFAULT_VIEWPORT","width","height","longitude","latitude","zoom","Maps","Component","state","viewport","selectedMode","READ_ONLY","_switchMode","evt","target","setState","_renderToolbar","position","top","right","maxWidth","map","mode","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,mBAApC,C,CAEA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBE,MAAMC,KAAK,GAAG,CACd;AAAEC,EAAAA,EAAE,EAAEF,WAAW,CAACG,OAAlB;AAA2BC,EAAAA,IAAI,EAAE;AAAjC,CADc,EAEd;AAAEF,EAAAA,EAAE,EAAEF,WAAW,CAACK,UAAlB;AAA8BD,EAAAA,IAAI,EAAE;AAApC,CAFc,EAGd;AAAEF,EAAAA,EAAE,EAAEF,WAAW,CAACM,SAAlB;AAA6BF,EAAAA,IAAI,EAAE;AAAnC,CAHc,EAId;AAAEF,EAAAA,EAAE,EAAEF,WAAW,CAACO,YAAlB;AAAgCH,EAAAA,IAAI,EAAE;AAAtC,CAJc,EAKd;AAAEF,EAAAA,EAAE,EAAEF,WAAW,CAACQ,cAAlB;AAAkCJ,EAAAA,IAAI,EAAE;AAAxC,CALc,CAAd;AAQF,MAAMK,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,OADgB;AAEvBC,EAAAA,MAAM,EAAE,MAFe;AAGvBC,EAAAA,SAAS,EAAE,CAAC,MAHW;AAIvBC,EAAAA,QAAQ,EAAE,KAJa;AAKvBC,EAAAA,IAAI,EAAE;AALiB,CAAzB;;AAQA,MAAMC,IAAN,SAAmBpB,KAAK,CAACqB,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACN;AACAC,MAAAA,QAAQ,EAAET,gBAFJ;AAGN;AACAU,MAAAA,YAAY,EAAEnB,WAAW,CAACoB;AAJpB,KADyB;;AAAA,SAQjCC,WARiC,GAQnBC,GAAG,IAAI;AACnB,YAAMH,YAAY,GAAGG,GAAG,CAACC,MAAJ,CAAWrB,EAAhC;AACA,WAAKsB,QAAL,CAAc;AACbL,QAAAA,YAAY,EAAEA,YAAY,KAAK,KAAKF,KAAL,CAAWE,YAA5B,GAA2C,IAA3C,GAAkDA;AADnD,OAAd;AAGD,KAbgC;;AAAA,SAejCM,cAfiC,GAehB,MAAM;AACrB,aACE;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE,UAAX;AAAuBC,UAAAA,GAAG,EAAE,CAA5B;AAA+BC,UAAAA,KAAK,EAAE,CAAtC;AAAyCC,UAAAA,QAAQ,EAAE;AAAnD,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,QAAQ,EAAE,KAAKR,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAEGpB,KAAK,CAAC6B,GAAN,CAAUC,IAAI,IAAI;AAAQ,QAAA,KAAK,EAAEA,IAAI,CAAC7B,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyB6B,IAAI,CAAC3B,IAA9B,CAAlB,CAFH,CADF,CADF;AAQD,KAxBgC;AAAA;;AA0BjC4B,EAAAA,MAAM,GAAG;AAAA,wBAC4B,KAAKf,KADjC;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,YADX,eACWA,YADX;AAEP,WACE,oBAAC,UAAD,oBACMD,QADN;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,MAAM,EAAC,MAHT;AAIE,MAAA,oBAAoB,EAAE,4FAJxB;AAKE,MAAA,QAAQ,EAAE,oDALZ;AAME,MAAA,gBAAgB,EAAE,KAAKM,QAAL,EANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQE,oBAAC,MAAD;AACE,MAAA,WAAW,EAAE,EADf;AAEE,MAAA,IAAI,EAAEL,YAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAYG,KAAKM,cAAL,EAZH,CADF;AAgBD;;AA5CgC;;AA8CnC,eAAeV,IAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactMapGL from 'react-map-gl';\r\nimport { Editor, EditorModes } from 'react-map-gl-draw';\r\n\r\n//accessToken: 'pk.eyJ1IjoiZ2lhbmx1MDEiLCJhIjoiY2s1ejQ0a2gyMDY5NjNtcWp5cGF4Y21wMiJ9.S2-22wqQvv8B0aiya-Mh7A';\r\n//site URL: mapbox://styles/gianlu01/ck5z9olku3d2r1jov9drsa1uu\r\n\r\n/*export default function Maps(){\r\n  const [viewport, setViewport] = useState({\r\n    width: '100%',\r\n    height: '100vh',\r\n    latitude: 45.466944,\r\n    longitude: 9.19,\r\n    zoom: 11\r\n  });\r\n\r\n      //const Milan = transform([45.466944, 9.19], 'ESPG:4326', 'ESPG:4357'); 11\r\n      return (\r\n        <div>\r\n        <ReactMapGL\r\n        {...viewport}\r\n        onViewportChange={setViewport}\r\n        mapboxApiAccessToken={'pk.eyJ1IjoiZ2lhbmx1MDEiLCJhIjoiY2s1ejQ0a2gyMDY5NjNtcWp5cGF4Y21wMiJ9.S2-22wqQvv8B0aiya-Mh7A'}\r\n        mapStyle={'mapbox://styles/gianlu01/ck5z9olku3d2r1jov9drsa1uu'  }\r\n        >\r\n        <div>\r\n          <input placeholder=\"Cerca un locale\"></input>\r\n        </div>\r\n        </ReactMapGL>\r\n        </div>\r\n      );\r\n  }*/\r\n  const MODES = [\r\n  { id: EditorModes.EDITING, text: 'Select and Edit Feature'},\r\n  { id: EditorModes.DRAW_POINT, text: 'Draw Point'},\r\n  { id: EditorModes.DRAW_PATH, text: 'Draw Polyline'},\r\n  { id: EditorModes.DRAW_POLYGON, text: 'Draw Polygon'},\r\n  { id: EditorModes.DRAW_RECTANGLE, text: 'Draw Rectangle'}\r\n];\r\n\r\nconst DEFAULT_VIEWPORT = {\r\n  width: '100vh',\r\n  height: '100%',\r\n  longitude: -122.45,\r\n  latitude: 37.78,\r\n  zoom: 14\r\n};\r\n\r\nclass Maps extends React.Component {\r\n  state = {\r\n    // map\r\n    viewport: DEFAULT_VIEWPORT,\r\n    // editor\r\n    selectedMode: EditorModes.READ_ONLY\r\n  };\r\n\r\n  _switchMode = evt => {\r\n    const selectedMode = evt.target.id;\r\n    this.setState({\r\n     selectedMode: selectedMode === this.state.selectedMode ? null : selectedMode\r\n    });\r\n  };\r\n\r\n  _renderToolbar = () => {\r\n    return (\r\n      <div style={{position: 'absolute', top: 0, right: 0, maxWidth: '320px'}}>\r\n        <select onChange={this._switchMode}>\r\n          <option value=\"\">--Please choose a mode--</option>\r\n          {MODES.map(mode => <option value={mode.id}>{mode.text}</option>)}\r\n        </select>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { viewport, selectedMode } = this.state;\r\n    return (\r\n      <ReactMapGL\r\n        {...viewport}\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        mapboxApiAccessToken={'pk.eyJ1IjoiZ2lhbmx1MDEiLCJhIjoiY2s1ejQ0a2gyMDY5NjNtcWp5cGF4Y21wMiJ9.S2-22wqQvv8B0aiya-Mh7A'}\r\n        mapStyle={'mapbox://styles/gianlu01/ck5z9olku3d2r1jov9drsa1uu'  }\r\n        onViewportChange={this.setState()}\r\n      >\r\n        <Editor\r\n          clickRadius={12}\r\n          mode={selectedMode}\r\n        />\r\n        {this._renderToolbar()}\r\n      </ReactMapGL>\r\n    );\r\n  }\r\n}\r\nexport default Maps;\r\n"]},"metadata":{},"sourceType":"module"}