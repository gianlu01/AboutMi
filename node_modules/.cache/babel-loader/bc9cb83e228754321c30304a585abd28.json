{"ast":null,"code":"/**\r\n * @module ol/render/Event\r\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport Event from '../events/Event.js';\n\nvar RenderEvent =\n/** @class */\nfunction (_super) {\n  __extends(RenderEvent, _super);\n  /**\r\n   * @param {import(\"./EventType.js\").default} type Type.\r\n   * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\r\n   *     CSS pixels to rendered pixels.\r\n   * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\r\n   * @param {?CanvasRenderingContext2D=} opt_context Context.\r\n   */\n\n\n  function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    var _this = _super.call(this, type) || this;\n    /**\r\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\r\n     * to rendered pixels on this event's `context`.\r\n     * @type {import(\"../transform.js\").Transform|undefined}\r\n     * @api\r\n     */\n\n\n    _this.inversePixelTransform = opt_inversePixelTransform;\n    /**\r\n     * An object representing the current render frame state.\r\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\r\n     * @api\r\n     */\n\n    _this.frameState = opt_frameState;\n    /**\r\n     * Canvas context. Not available when the event is dispatched by the map. Only available\r\n     * when a Canvas renderer is used, null otherwise.\r\n     * @type {CanvasRenderingContext2D|null|undefined}\r\n     * @api\r\n     */\n\n    _this.context = opt_context;\n    return _this;\n  }\n\n  return RenderEvent;\n}(Event);\n\nexport default RenderEvent;","map":null,"metadata":{},"sourceType":"module"}