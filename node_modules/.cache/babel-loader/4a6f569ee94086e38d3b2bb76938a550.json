{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\michi\\\\OneDrive\\\\Desktop\\\\AboutMi\\\\src\\\\components\\\\Maps.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactMapboxGl, { Layer, Marker, Feature } from \"react-mapbox-gl\";\nimport DrawControl from \"react-mapbox-gl-draw\";\nimport \"@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css\";\nimport * as turf from '@turf/turf'; //accessToken: 'pk.eyJ1IjoiZ2lhbmx1MDEiLCJhIjoiY2s1ejQ0a2gyMDY5NjNtcWp5cGF4Y21wMiJ9.S2-22wqQvv8B0aiya-Mh7A';\n//site URL: mapbox://styles/gianlu01/ck5z9olku3d2r1jov9drsa1uu\n\nconst Map = ReactMapboxGl({\n  accessToken: \"pk.eyJ1IjoiZ2lhbmx1MDEiLCJhIjoiY2s1ejQ0a2gyMDY5NjNtcWp5cGF4Y21wMiJ9.S2-22wqQvv8B0aiya-Mh7A\"\n});\n\nclass Maps extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stato: false,\n      markers: [[,]]\n    };\n  }\n\n  render() {\n    var points = turf.points([[9.19, 45.466944], [9.1792887, 45.4704962]]);\n    const controls = {\n      polygon: true,\n      trash: true,\n      point: false,\n      line_string: false,\n      combine_features: false,\n      uncombine_features: false\n    };\n\n    const onDrawCreate = ({\n      features\n    }) => {\n      var poly = features[0].geometry.coordinates;\n      poly = turf.polygon(poly);\n      var result = turf.pointsWithinPolygon(points, poly);\n\n      if (result.features.length <= 0) {\n        alert(\"Locals not founds\");\n      } else {\n        //this.setState({stato: true});\n        this.setState({\n          markers: result.features\n        });\n      }\n    };\n\n    const onDrawUpdate = ({\n      features\n    }) => {\n      console.log(features);\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Map, {\n      style: \"mapbox://styles/mapbox/streets-v9\" // eslint-disable-line\n      ,\n      containerStyle: {\n        height: \"100vh\",\n        width: \"100%\"\n      },\n      center: [9.19, 45.466944],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"//@TODO pasto sai cosa devi fare ahahaha\", React.createElement(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"ahhhhhhhhh\",\n      style: {\n        position: 'absolute'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(DrawControl, {\n      onDrawCreate: onDrawCreate,\n      onDrawUpdate: onDrawUpdate,\n      controls: controls,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), this.markerRender));\n  }\n\n}\n\nmarkerRender = () => {\n  for (var i = 0; i < this.state.markers; i++) {\n    console.log(\"a\");\n    return React.createElement(Layer, {\n      type: \"symbol\",\n      id: \"marker\",\n      layout: {\n        \"icon-image\": \"marker-15\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Feature, {\n      coordinates: [this.state.markers[i].geometry.coordinates[0], this.state.markers[i].geometry.coordinates[1]],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }\n};\n\nexport default Maps;\n/*\r\n{if (markerState.state){\r\n  <Marker\r\n    coordinates={[-0.2416815, 51.5285582]}\r\n    anchor=\"bottom\">\r\n  </Marker>\r\n  //onClick={this.onMarkerClick.bind(this, feature.geometry.coordinates)}>\r\n}}*/","map":{"version":3,"sources":["C:/Users/michi/OneDrive/Desktop/AboutMi/src/components/Maps.js"],"names":["React","ReactDOM","ReactMapboxGl","Layer","Marker","Feature","DrawControl","turf","Map","accessToken","Maps","Component","constructor","props","state","stato","markers","render","points","controls","polygon","trash","point","line_string","combine_features","uncombine_features","onDrawCreate","features","poly","geometry","coordinates","result","pointsWithinPolygon","length","alert","setState","onDrawUpdate","console","log","height","width","textAlign","position","markerRender","i"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ReactMapboxGl, {Layer, Marker, Feature} from \"react-mapbox-gl\";\r\nimport DrawControl from \"react-mapbox-gl-draw\";\r\nimport \"@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css\";\r\nimport * as turf from '@turf/turf';\r\n\r\n//accessToken: 'pk.eyJ1IjoiZ2lhbmx1MDEiLCJhIjoiY2s1ejQ0a2gyMDY5NjNtcWp5cGF4Y21wMiJ9.S2-22wqQvv8B0aiya-Mh7A';\r\n//site URL: mapbox://styles/gianlu01/ck5z9olku3d2r1jov9drsa1uu\r\n\r\nconst Map = ReactMapboxGl({\r\n    accessToken: \"pk.eyJ1IjoiZ2lhbmx1MDEiLCJhIjoiY2s1ejQ0a2gyMDY5NjNtcWp5cGF4Y21wMiJ9.S2-22wqQvv8B0aiya-Mh7A\"\r\n});\r\n\r\nclass Maps extends React.Component{\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        stato: false,\r\n        markers: [[,]]\r\n      }\r\n    }\r\n    render (){\r\n      var points = turf.points([\r\n          [9.19,45.466944],\r\n          [9.1792887,45.4704962]\r\n      ]);\r\n      const controls = {\r\n        polygon: true,\r\n        trash: true,\r\n        point: false,\r\n        line_string: false,\r\n        combine_features:false,\r\n        uncombine_features:false\r\n      }\r\n        const onDrawCreate = ({ features }) => {\r\n            var poly = features[0].geometry.coordinates;\r\n            poly = turf.polygon(poly);\r\n            var result = turf.pointsWithinPolygon(points, poly);\r\n            if (result.features.length <= 0) {\r\n                alert(\"Locals not founds\")\r\n            }else{\r\n              //this.setState({stato: true});\r\n              this.setState({markers: result.features});\r\n            }\r\n          };\r\n\r\n          const onDrawUpdate = ({ features }) => {\r\n            console.log(features);\r\n          };\r\n\r\n      return(\r\n        <div>\r\n          <Map\r\n            style=  \"mapbox://styles/mapbox/streets-v9\" // eslint-disable-line\r\n            containerStyle={{\r\n              height: \"100vh\",\r\n              width: \"100%\"\r\n            }}\r\n            center={[9.19,45.466944]}\r\n            >\r\n            //@TODO pasto sai cosa devi fare ahahaha\r\n            <div style={{textAlign: 'center'}}>\r\n              <input type='text' placeholder='ahhhhhhhhh' style={{position: 'absolute'}}></input>\r\n              </div>\r\n              <DrawControl onDrawCreate={onDrawCreate} onDrawUpdate={onDrawUpdate} controls={controls} />\r\n                {this.markerRender}\r\n              </Map>\r\n              </div>\r\n            );\r\n          }\r\n          }\r\n\r\nmarkerRender =()=>{\r\n  for(var i = 0; i<this.state.markers; i++){\r\n    console.log(\"a\")\r\n    return(\r\n      <Layer\r\n        type=\"symbol\"\r\n        id=\"marker\"\r\n        layout={{ \"icon-image\": \"marker-15\" }}>\r\n        <Feature coordinates={[this.state.markers[i].geometry.coordinates[0], this.state.markers[i].geometry.coordinates[1]]}/>\r\n      </Layer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Maps;\r\n\r\n\r\n\r\n/*\r\n{if (markerState.state){\r\n  <Marker\r\n    coordinates={[-0.2416815, 51.5285582]}\r\n    anchor=\"bottom\">\r\n  </Marker>\r\n  //onClick={this.onMarkerClick.bind(this, feature.geometry.coordinates)}>\r\n}}*/\r\n"]},"metadata":{},"sourceType":"module"}