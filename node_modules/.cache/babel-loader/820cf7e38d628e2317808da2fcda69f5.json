{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\r\n * @module ol/MapEvent\r\n */\n\n\nimport Event from './events/Event.js';\n/**\r\n * @classdesc\r\n * Events emitted as map events are instances of this type.\r\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\r\n */\n\nvar MapEvent =\n/** @class */\nfunction (_super) {\n  __extends(MapEvent, _super);\n  /**\r\n   * @param {string} type Event type.\r\n   * @param {import(\"./PluggableMap.js\").default} map Map.\r\n   * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\r\n   */\n\n\n  function MapEvent(type, map, opt_frameState) {\n    var _this = _super.call(this, type) || this;\n    /**\r\n     * The map where the event occurred.\r\n     * @type {import(\"./PluggableMap.js\").default}\r\n     * @api\r\n     */\n\n\n    _this.map = map;\n    /**\r\n     * The frame state at the time of the event.\r\n     * @type {?import(\"./PluggableMap.js\").FrameState}\r\n     * @api\r\n     */\n\n    _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n    return _this;\n  }\n\n  return MapEvent;\n}(Event);\n\nexport default MapEvent;","map":null,"metadata":{},"sourceType":"module"}