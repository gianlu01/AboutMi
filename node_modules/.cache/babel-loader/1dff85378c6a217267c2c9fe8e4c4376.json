{"ast":null,"code":"export default function within(ids, coords, qx, qy, r, nodeSize) {\n  const stack = [0, ids.length - 1, 0];\n  const result = [];\n  const r2 = r * r;\n\n  while (stack.length) {\n    const axis = stack.pop();\n    const right = stack.pop();\n    const left = stack.pop();\n\n    if (right - left <= nodeSize) {\n      for (let i = left; i <= right; i++) {\n        if (sqDist(coords[2 * i], coords[2 * i + 1], qx, qy) <= r2) result.push(ids[i]);\n      }\n\n      continue;\n    }\n\n    const m = Math.floor((left + right) / 2);\n    const x = coords[2 * m];\n    const y = coords[2 * m + 1];\n    if (sqDist(x, y, qx, qy) <= r2) result.push(ids[m]);\n    const nextAxis = (axis + 1) % 2;\n\n    if (axis === 0 ? qx - r <= x : qy - r <= y) {\n      stack.push(left);\n      stack.push(m - 1);\n      stack.push(nextAxis);\n    }\n\n    if (axis === 0 ? qx + r >= x : qy + r >= y) {\n      stack.push(m + 1);\n      stack.push(right);\n      stack.push(nextAxis);\n    }\n  }\n\n  return result;\n}\n\nfunction sqDist(ax, ay, bx, by) {\n  const dx = ax - bx;\n  const dy = ay - by;\n  return dx * dx + dy * dy;\n}","map":{"version":3,"sources":["C:/Users/michele/Desktop/IT/Code/react/aboutmi/node_modules/kdbush/src/within.js"],"names":["within","ids","coords","qx","qy","r","nodeSize","stack","length","result","r2","axis","pop","right","left","i","sqDist","push","m","Math","floor","x","y","nextAxis","ax","ay","bx","by","dx","dy"],"mappings":"AACA,eAAe,SAASA,MAAT,CAAgBC,GAAhB,EAAqBC,MAArB,EAA6BC,EAA7B,EAAiCC,EAAjC,EAAqCC,CAArC,EAAwCC,QAAxC,EAAkD;AAC7D,QAAMC,KAAK,GAAG,CAAC,CAAD,EAAIN,GAAG,CAACO,MAAJ,GAAa,CAAjB,EAAoB,CAApB,CAAd;AACA,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,EAAE,GAAGL,CAAC,GAAGA,CAAf;;AAEA,SAAOE,KAAK,CAACC,MAAb,EAAqB;AACjB,UAAMG,IAAI,GAAGJ,KAAK,CAACK,GAAN,EAAb;AACA,UAAMC,KAAK,GAAGN,KAAK,CAACK,GAAN,EAAd;AACA,UAAME,IAAI,GAAGP,KAAK,CAACK,GAAN,EAAb;;AAEA,QAAIC,KAAK,GAAGC,IAAR,IAAgBR,QAApB,EAA8B;AAC1B,WAAK,IAAIS,CAAC,GAAGD,IAAb,EAAmBC,CAAC,IAAIF,KAAxB,EAA+BE,CAAC,EAAhC,EAAoC;AAChC,YAAIC,MAAM,CAACd,MAAM,CAAC,IAAIa,CAAL,CAAP,EAAgBb,MAAM,CAAC,IAAIa,CAAJ,GAAQ,CAAT,CAAtB,EAAmCZ,EAAnC,EAAuCC,EAAvC,CAAN,IAAoDM,EAAxD,EAA4DD,MAAM,CAACQ,IAAP,CAAYhB,GAAG,CAACc,CAAD,CAAf;AAC/D;;AACD;AACH;;AAED,UAAMG,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACN,IAAI,GAAGD,KAAR,IAAiB,CAA5B,CAAV;AAEA,UAAMQ,CAAC,GAAGnB,MAAM,CAAC,IAAIgB,CAAL,CAAhB;AACA,UAAMI,CAAC,GAAGpB,MAAM,CAAC,IAAIgB,CAAJ,GAAQ,CAAT,CAAhB;AAEA,QAAIF,MAAM,CAACK,CAAD,EAAIC,CAAJ,EAAOnB,EAAP,EAAWC,EAAX,CAAN,IAAwBM,EAA5B,EAAgCD,MAAM,CAACQ,IAAP,CAAYhB,GAAG,CAACiB,CAAD,CAAf;AAEhC,UAAMK,QAAQ,GAAG,CAACZ,IAAI,GAAG,CAAR,IAAa,CAA9B;;AAEA,QAAIA,IAAI,KAAK,CAAT,GAAaR,EAAE,GAAGE,CAAL,IAAUgB,CAAvB,GAA2BjB,EAAE,GAAGC,CAAL,IAAUiB,CAAzC,EAA4C;AACxCf,MAAAA,KAAK,CAACU,IAAN,CAAWH,IAAX;AACAP,MAAAA,KAAK,CAACU,IAAN,CAAWC,CAAC,GAAG,CAAf;AACAX,MAAAA,KAAK,CAACU,IAAN,CAAWM,QAAX;AACH;;AACD,QAAIZ,IAAI,KAAK,CAAT,GAAaR,EAAE,GAAGE,CAAL,IAAUgB,CAAvB,GAA2BjB,EAAE,GAAGC,CAAL,IAAUiB,CAAzC,EAA4C;AACxCf,MAAAA,KAAK,CAACU,IAAN,CAAWC,CAAC,GAAG,CAAf;AACAX,MAAAA,KAAK,CAACU,IAAN,CAAWJ,KAAX;AACAN,MAAAA,KAAK,CAACU,IAAN,CAAWM,QAAX;AACH;AACJ;;AAED,SAAOd,MAAP;AACH;;AAED,SAASO,MAAT,CAAgBQ,EAAhB,EAAoBC,EAApB,EAAwBC,EAAxB,EAA4BC,EAA5B,EAAgC;AAC5B,QAAMC,EAAE,GAAGJ,EAAE,GAAGE,EAAhB;AACA,QAAMG,EAAE,GAAGJ,EAAE,GAAGE,EAAhB;AACA,SAAOC,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAtB;AACH","sourcesContent":["\r\nexport default function within(ids, coords, qx, qy, r, nodeSize) {\r\n    const stack = [0, ids.length - 1, 0];\r\n    const result = [];\r\n    const r2 = r * r;\r\n\r\n    while (stack.length) {\r\n        const axis = stack.pop();\r\n        const right = stack.pop();\r\n        const left = stack.pop();\r\n\r\n        if (right - left <= nodeSize) {\r\n            for (let i = left; i <= right; i++) {\r\n                if (sqDist(coords[2 * i], coords[2 * i + 1], qx, qy) <= r2) result.push(ids[i]);\r\n            }\r\n            continue;\r\n        }\r\n\r\n        const m = Math.floor((left + right) / 2);\r\n\r\n        const x = coords[2 * m];\r\n        const y = coords[2 * m + 1];\r\n\r\n        if (sqDist(x, y, qx, qy) <= r2) result.push(ids[m]);\r\n\r\n        const nextAxis = (axis + 1) % 2;\r\n\r\n        if (axis === 0 ? qx - r <= x : qy - r <= y) {\r\n            stack.push(left);\r\n            stack.push(m - 1);\r\n            stack.push(nextAxis);\r\n        }\r\n        if (axis === 0 ? qx + r >= x : qy + r >= y) {\r\n            stack.push(m + 1);\r\n            stack.push(right);\r\n            stack.push(nextAxis);\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction sqDist(ax, ay, bx, by) {\r\n    const dx = ax - bx;\r\n    const dy = ay - by;\r\n    return dx * dx + dy * dy;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}