{"ast":null,"code":"import * as martinez from 'martinez-polygon-clipping';\nimport area from '@turf/area';\nimport { feature, multiPolygon, polygon } from '@turf/helpers';\nimport { getGeom } from '@turf/invariant';\nimport { flattenEach } from '@turf/meta';\n/**\r\n * Finds the difference between two {@link Polygon|polygons} by clipping the second polygon from the first.\r\n *\r\n * @name difference\r\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\r\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\r\n * @returns {Feature<Polygon|MultiPolygon>|null} a Polygon or MultiPolygon feature showing the area of `polygon1` excluding the area of `polygon2` (if empty returns `null`)\r\n * @example\r\n * var polygon1 = turf.polygon([[\r\n *   [128, -26],\r\n *   [141, -26],\r\n *   [141, -21],\r\n *   [128, -21],\r\n *   [128, -26]\r\n * ]], {\r\n *   \"fill\": \"#F00\",\r\n *   \"fill-opacity\": 0.1\r\n * });\r\n * var polygon2 = turf.polygon([[\r\n *   [126, -28],\r\n *   [140, -28],\r\n *   [140, -20],\r\n *   [126, -20],\r\n *   [126, -28]\r\n * ]], {\r\n *   \"fill\": \"#00F\",\r\n *   \"fill-opacity\": 0.1\r\n * });\r\n *\r\n * var difference = turf.difference(polygon1, polygon2);\r\n *\r\n * //addToMap\r\n * var addToMap = [polygon1, polygon2, difference];\r\n */\n\nfunction difference(polygon1, polygon2) {\n  var geom1 = getGeom(polygon1);\n  var geom2 = getGeom(polygon2);\n  var properties = polygon1.properties || {}; // Issue #721 - JSTS/Martinez can't handle empty polygons\n\n  geom1 = removeEmptyPolygon(geom1);\n  geom2 = removeEmptyPolygon(geom2);\n  if (!geom1) return null;\n  if (!geom2) return feature(geom1, properties);\n  var differenced = martinez.diff(geom1.coordinates, geom2.coordinates);\n  if (differenced.length === 0) return null;\n  if (differenced.length === 1) return polygon(differenced[0], properties);\n  return multiPolygon(differenced, properties);\n}\n/**\r\n * Detect Empty Polygon\r\n *\r\n * @private\r\n * @param {Geometry<Polygon|MultiPolygon>} geom Geometry Object\r\n * @returns {Geometry<Polygon|MultiPolygon>|null} removed any polygons with no areas\r\n */\n\n\nfunction removeEmptyPolygon(geom) {\n  switch (geom.type) {\n    case 'Polygon':\n      if (area(geom) > 1) return geom;\n      return null;\n\n    case 'MultiPolygon':\n      var coordinates = [];\n      flattenEach(geom, function (feature) {\n        if (area(feature) > 1) coordinates.push(feature.geometry.coordinates);\n      });\n      if (coordinates.length) return {\n        type: 'MultiPolygon',\n        coordinates: coordinates\n      };\n  }\n}\n\nexport default difference;","map":null,"metadata":{},"sourceType":"module"}