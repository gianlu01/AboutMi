{"ast":null,"code":"function StringSet(items) {\n  this._items = {};\n  this._nums = {};\n  this._length = items ? items.length : 0;\n  if (!items) return;\n\n  for (var i = 0, l = items.length; i < l; i++) {\n    this.add(items[i]);\n    if (items[i] === undefined) continue;\n    if (typeof items[i] === 'string') this._items[items[i]] = i;else this._nums[items[i]] = i;\n  }\n}\n\nStringSet.prototype.add = function (x) {\n  if (this.has(x)) return this;\n  this._length++;\n  if (typeof x === 'string') this._items[x] = this._length;else this._nums[x] = this._length;\n  return this;\n};\n\nStringSet.prototype.delete = function (x) {\n  if (this.has(x) === false) return this;\n  this._length--;\n  delete this._items[x];\n  delete this._nums[x];\n  return this;\n};\n\nStringSet.prototype.has = function (x) {\n  if (typeof x !== 'string' && typeof x !== 'number') return false;\n  return this._items[x] !== undefined || this._nums[x] !== undefined;\n};\n\nStringSet.prototype.values = function () {\n  var _this = this;\n\n  var values = [];\n  Object.keys(this._items).forEach(function (k) {\n    values.push({\n      k: k,\n      v: _this._items[k]\n    });\n  });\n  Object.keys(this._nums).forEach(function (k) {\n    values.push({\n      k: JSON.parse(k),\n      v: _this._nums[k]\n    });\n  });\n  return values.sort(function (a, b) {\n    return a.v - b.v;\n  }).map(function (a) {\n    return a.k;\n  });\n};\n\nStringSet.prototype.clear = function () {\n  this._length = 0;\n  this._items = {};\n  this._nums = {};\n  return this;\n};\n\nmodule.exports = StringSet;","map":null,"metadata":{},"sourceType":"script"}