{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gianluca\\\\Documents\\\\Scuola\\\\Informatica\\\\AboutMi\\\\Sito\\\\AboutMi\\\\src\\\\components\\\\Maps.js\";\nimport React from 'react';\nimport OlMap from \"ol/Map\";\nimport OlView from \"ol/View\";\nimport OlLayerTile from \"ol/layer/Tile\";\nimport OlSourceOSM from \"ol/source/OSM\";\n\nclass Maps extends React.Component {\n  constructor(props) {\n    super(props); // Milano: 1023068.820178505, 5694894.828017104\n    //OSMStandard\n\n    const Milan = proj.transform([45.466944, 9.19], 'ESPG:4326', 'ESPG:4357');\n    this.state = {\n      center: [1023068.820178505, 5694894.828017104],\n      zoom: 13\n    };\n    this.olmap = new OlMap({\n      target: null,\n      layers: [new OlLayerTile({\n        source: new OlSourceOSM()\n      })],\n      view: new OlView({\n        center: Milan,\n        zoom: this.state.zoom,\n        maxZoom: 18,\n        minZoom: 11\n      })\n    });\n    this.olmap.on('click', function (evento) {\n      console.log(evento.coordinate);\n    });\n  }\n\n  updateMap() {\n    this.olmap.getView().setCenter(this.state.center);\n    this.olmap.getView().setZoom(this.state.zoom);\n  }\n\n  componentDidMount() {\n    this.olmap.setTarget(\"map\"); // Listen to map changes\n\n    this.olmap.on(\"moveend\", () => {\n      let center = this.olmap.getView().getCenter();\n      let zoom = this.olmap.getView().getZoom();\n      this.setState({\n        center,\n        zoom\n      });\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    let center = this.olmap.getView().getCenter();\n    let zoom = this.olmap.getView().getZoom();\n    if (center === nextState.center && zoom === nextState.zoom) return false;\n    return true;\n  } // <button onClick={e => this.updateMap    ()}>setState on click</button>\n\n\n  render() {\n    this.updateMap(); // Update map on render?\n\n    return React.createElement(\"div\", {\n      id: \"map\",\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Maps;","map":{"version":3,"sources":["C:/Users/Gianluca/Documents/Scuola/Informatica/AboutMi/Sito/AboutMi/src/components/Maps.js"],"names":["React","OlMap","OlView","OlLayerTile","OlSourceOSM","Maps","Component","constructor","props","Milan","proj","transform","state","center","zoom","olmap","target","layers","source","view","maxZoom","minZoom","on","evento","console","log","coordinate","updateMap","getView","setCenter","setZoom","componentDidMount","setTarget","getCenter","getZoom","setState","shouldComponentUpdate","nextProps","nextState","render","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,QAAlB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAIA,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAGf;AACA;;AAEA,UAAMC,KAAK,GAAGC,IAAI,CAACC,SAAL,CACZ,CAAC,SAAD,EAAY,IAAZ,CADY,EAEZ,WAFY,EAGZ,WAHY,CAAd;AAMA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,CAAC,iBAAD,EAAoB,iBAApB,CADG;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAKA,SAAKC,KAAL,GAAa,IAAId,KAAJ,CAAU;AACrBe,MAAAA,MAAM,EAAE,IADa;AAErBC,MAAAA,MAAM,EAAE,CACN,IAAId,WAAJ,CAAgB;AACde,QAAAA,MAAM,EAAE,IAAId,WAAJ;AADM,OAAhB,CADM,CAFa;AAOrBe,MAAAA,IAAI,EAAE,IAAIjB,MAAJ,CAAW;AACfW,QAAAA,MAAM,EAAEJ,KADO;AAEfK,QAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,IAFF;AAGfM,QAAAA,OAAO,EAAE,EAHM;AAIfC,QAAAA,OAAO,EAAE;AAJM,OAAX;AAPe,KAAV,CAAb;AAeA,SAAKN,KAAL,CAAWO,EAAX,CAAc,OAAd,EAAuB,UAASC,MAAT,EAAgB;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,UAAnB;AACH,KAFD;AAGD;;AAIDC,EAAAA,SAAS,GAAG;AACV,SAAKZ,KAAL,CAAWa,OAAX,GAAqBC,SAArB,CAA+B,KAAKjB,KAAL,CAAWC,MAA1C;AACA,SAAKE,KAAL,CAAWa,OAAX,GAAqBE,OAArB,CAA6B,KAAKlB,KAAL,CAAWE,IAAxC;AACD;;AAEDiB,EAAAA,iBAAiB,GAAG;AAClB,SAAKhB,KAAL,CAAWiB,SAAX,CAAqB,KAArB,EADkB,CAGlB;;AACA,SAAKjB,KAAL,CAAWO,EAAX,CAAc,SAAd,EAAyB,MAAM;AAC7B,UAAIT,MAAM,GAAG,KAAKE,KAAL,CAAWa,OAAX,GAAqBK,SAArB,EAAb;AACA,UAAInB,IAAI,GAAG,KAAKC,KAAL,CAAWa,OAAX,GAAqBM,OAArB,EAAX;AACA,WAAKC,QAAL,CAAc;AAAEtB,QAAAA,MAAF;AAAUC,QAAAA;AAAV,OAAd;AACD,KAJD;AAKD;;AAEDsB,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC1C,QAAIzB,MAAM,GAAG,KAAKE,KAAL,CAAWa,OAAX,GAAqBK,SAArB,EAAb;AACA,QAAInB,IAAI,GAAG,KAAKC,KAAL,CAAWa,OAAX,GAAqBM,OAArB,EAAX;AACA,QAAIrB,MAAM,KAAKyB,SAAS,CAACzB,MAArB,IAA+BC,IAAI,KAAKwB,SAAS,CAACxB,IAAtD,EAA4D,OAAO,KAAP;AAC5D,WAAO,IAAP;AACD,GA7D8B,CA+DnC;;;AAEIyB,EAAAA,MAAM,GAAG;AACP,SAAKZ,SAAL,GADO,CACW;;AAClB,WAEE;AAAK,MAAA,EAAE,EAAC,KAAR;AAAc,MAAA,KAAK,EAAE;AAAEa,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF;AAMD;;AAzE8B;;AA2EnC,eAAepC,IAAf","sourcesContent":["import React from 'react';\r\nimport OlMap from \"ol/Map\";\r\nimport OlView from \"ol/View\";\r\nimport OlLayerTile from \"ol/layer/Tile\";\r\nimport OlSourceOSM from \"ol/source/OSM\";\r\n\r\n\r\n\r\nclass Maps extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n\r\n      // Milano: 1023068.820178505, 5694894.828017104\r\n      //OSMStandard\r\n\r\n      const Milan = proj.transform(\r\n        [45.466944, 9.19],\r\n        'ESPG:4326',\r\n        'ESPG:4357'\r\n      );\r\n\r\n      this.state = {\r\n        center: [1023068.820178505, 5694894.828017104],\r\n        zoom: 13\r\n      }\r\n\r\n      this.olmap = new OlMap({\r\n        target: null,\r\n        layers: [\r\n          new OlLayerTile({\r\n            source: new OlSourceOSM(),\r\n          })\r\n        ],\r\n        view: new OlView({\r\n          center: Milan,\r\n          zoom: this.state.zoom,\r\n          maxZoom: 18,\r\n          minZoom: 11\r\n        })\r\n      });\r\n\r\n      this.olmap.on('click', function(evento){\r\n          console.log(evento.coordinate);\r\n      })\r\n    }\r\n\r\n    \r\n\r\n    updateMap() {\r\n      this.olmap.getView().setCenter(this.state.center);\r\n      this.olmap.getView().setZoom(this.state.zoom);\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.olmap.setTarget(\"map\");\r\n\r\n      // Listen to map changes\r\n      this.olmap.on(\"moveend\", () => {\r\n        let center = this.olmap.getView().getCenter();\r\n        let zoom = this.olmap.getView().getZoom();\r\n        this.setState({ center, zoom });\r\n      });\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n      let center = this.olmap.getView().getCenter();\r\n      let zoom = this.olmap.getView().getZoom();\r\n      if (center === nextState.center && zoom === nextState.zoom) return false;\r\n      return true;\r\n    }\r\n    \r\n// <button onClick={e => this.updateMap    ()}>setState on click</button>\r\n\r\n    render() {\r\n      this.updateMap(); // Update map on render?\r\n      return (\r\n\r\n        <div id=\"map\" style={{ width: \"100%\", height: \"100%\" }}>\r\n            \r\n        </div>\r\n      );\r\n    }\r\n  }\r\nexport default Maps;\r\n"]},"metadata":{},"sourceType":"module"}