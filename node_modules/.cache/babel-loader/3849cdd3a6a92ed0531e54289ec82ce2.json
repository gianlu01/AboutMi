{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"uuid/v1\"));\n\nvar _constants = require(\"../constants\");\n\nvar _baseMode = _interopRequireDefault(require(\"./base-mode\"));\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar DrawLineStringMode =\n/*#__PURE__*/\nfunction (_BaseMode) {\n  _inherits(DrawLineStringMode, _BaseMode);\n\n  function DrawLineStringMode() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DrawLineStringMode);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DrawLineStringMode)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function (event, props) {\n      var data = props.data,\n          selectedIndexes = props.selectedIndexes;\n\n      var selectedFeature = _this.getSelectedFeature(props);\n\n      var tentativeFeature = _this.getTentativeFeature(); // add position to a selectedFeature\n\n\n      if (selectedFeature) {\n        var selectedFeatureIndex = selectedIndexes[0];\n        var positionIndexes = [selectedFeature.geometry.coordinates.length];\n        var updatedData = data.addPosition(selectedFeatureIndex, positionIndexes, event.mapCoords).getObject();\n        props.onEdit({\n          editType: _constants.EDIT_TYPE.ADD_POSITION,\n          updatedData: updatedData,\n          editContext: [{\n            featureIndex: selectedFeatureIndex,\n            editHandleIndex: positionIndexes[0],\n            screenCoords: event.screenCoords,\n            mapCoords: event.mapCoords\n          }]\n        }); // commit tentativeFeature to featureCollection\n      } else if (tentativeFeature) {\n        _this.setTentativeFeature(null);\n\n        var feature = {\n          type: 'Feature',\n          properties: {\n            id: tentativeFeature.properties.id,\n            // todo deprecate renderType\n            renderType: _constants.RENDER_TYPE.LINE_STRING\n          },\n          geometry: {\n            type: _constants.GEOJSON_TYPE.LINE_STRING,\n            coordinates: [tentativeFeature.geometry.coordinates[0], event.mapCoords]\n          }\n        };\n\n        var _updatedData = data.addFeature(feature).getObject();\n\n        props.onEdit({\n          editType: _constants.EDIT_TYPE.ADD_FEATURE,\n          updatedData: _updatedData,\n          editContext: null\n        });\n      } else {\n        tentativeFeature = {\n          type: 'Feature',\n          properties: {\n            // TODO deprecate id & renderType\n            id: (0, _v.default)(),\n            renderType: _constants.RENDER_TYPE.LINE_STRING,\n            guideType: _constants.GUIDE_TYPE.TENTATIVE\n          },\n          geometry: {\n            type: _constants.GEOJSON_TYPE.POINT,\n            coordinates: [event.mapCoords]\n          }\n        };\n\n        _this.setTentativeFeature(tentativeFeature);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getGuides\", function (props) {\n      var selectedFeature = _this.getSelectedFeature(props);\n\n      var tentativeFeature = _this.getTentativeFeature();\n\n      var feature = selectedFeature || tentativeFeature;\n      var coordinates = (0, _utils.getFeatureCoordinates)(feature);\n\n      if (!coordinates) {\n        return null;\n      }\n\n      var event = props.lastPointerMoveEvent; // existing editHandles + cursorEditHandle\n\n      var editHandles = _this.getEditHandlesFromFeature(feature) || [];\n      var cursorEditHandle = {\n        type: 'Feature',\n        properties: {\n          guideType: _constants.GUIDE_TYPE.CURSOR_EDIT_HANDLE,\n          // TODO remove renderType\n          renderType: _constants.RENDER_TYPE.LINE_STRING,\n          positionIndexes: [editHandles.length]\n        },\n        geometry: {\n          type: _constants.GEOJSON_TYPE.POINT,\n          coordinates: [event.mapCoords]\n        }\n      };\n      editHandles.push(cursorEditHandle); // tentativeFeature\n\n      tentativeFeature = {\n        type: 'Feature',\n        properties: {\n          // TODO deprecate id and renderType\n          id: (0, _v.default)(),\n          guideType: _constants.GUIDE_TYPE.TENTATIVE,\n          renderType: _constants.RENDER_TYPE.LINE_STRING\n        },\n        geometry: {\n          type: _constants.GEOJSON_TYPE.LINE_STRING,\n          coordinates: [coordinates[coordinates.length - 1], event.mapCoords]\n        }\n      };\n      return {\n        tentativeFeature: tentativeFeature,\n        editHandles: editHandles\n      };\n    });\n\n    return _this;\n  }\n\n  return DrawLineStringMode;\n}(_baseMode.default);\n\nexports.default = DrawLineStringMode;","map":null,"metadata":{},"sourceType":"script"}