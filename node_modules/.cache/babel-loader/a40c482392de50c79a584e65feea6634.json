{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst mapbox_gl_draw_1 = __importDefault(require(\"@mapbox/mapbox-gl-draw\"));\n\nconst React = __importStar(require(\"react\"));\n\nconst react_mapbox_gl_1 = require(\"react-mapbox-gl\");\n\nfunction noop() {\n  /* do nothing */\n}\n\nclass DrawControl extends React.Component {\n  componentDidMount() {\n    const map = this.context; // The map needs to be passed in the React Context, or welse we can't do\n    // anything.\n\n    if (!map || !map.getStyle()) {\n      throw new Error('Map is undefined in React context.');\n    }\n\n    const {\n      modes,\n      onDrawActionable,\n      onDrawCombine,\n      onDrawCreate,\n      onDrawDelete,\n      onDrawModeChange,\n      onDrawRender,\n      onDrawSelectionChange,\n      onDrawUncombine,\n      onDrawUpdate,\n      position\n    } = this.props; // Define a new Draw Control\n\n    this.draw = new mapbox_gl_draw_1.default(Object.assign(Object.assign({}, this.props), {\n      modes: Object.assign(Object.assign({}, mapbox_gl_draw_1.default.modes), modes)\n    })); // Add it to our map\n\n    map.addControl(this.draw, position); // Hook draw events\n\n    map.on('draw.actionable', onDrawActionable || noop);\n    map.on('draw.combine', onDrawCombine || noop);\n    map.on('draw.create', onDrawCreate || noop);\n    map.on('draw.delete', onDrawDelete || noop);\n    map.on('draw.modechange', onDrawModeChange || noop);\n    map.on('draw.render', onDrawRender || noop);\n    map.on('draw.selectionchange', onDrawSelectionChange || noop);\n    map.on('draw.uncombine', onDrawUncombine || noop);\n    map.on('draw.update', onDrawUpdate || noop);\n  }\n\n  componentWillUnmount() {\n    const map = this.context;\n\n    if (!map || !map.getStyle()) {\n      return;\n    }\n\n    if (!this.draw) {\n      return;\n    }\n\n    map.removeControl(this.draw);\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nexports.default = DrawControl;\nDrawControl.contextType = react_mapbox_gl_1.MapContext;\nDrawControl.defaultProps = {\n  position: 'top-left'\n};","map":{"version":3,"sources":["C:/Users/michele/Desktop/IT/Code/react/aboutmi/node_modules/react-mapbox-gl-draw/lib/index.js"],"names":["__importDefault","mod","__esModule","__importStar","result","k","Object","hasOwnProperty","call","defineProperty","exports","value","mapbox_gl_draw_1","require","React","react_mapbox_gl_1","noop","DrawControl","Component","componentDidMount","map","context","getStyle","Error","modes","onDrawActionable","onDrawCombine","onDrawCreate","onDrawDelete","onDrawModeChange","onDrawRender","onDrawSelectionChange","onDrawUncombine","onDrawUpdate","position","props","draw","default","assign","addControl","on","componentWillUnmount","removeControl","render","contextType","MapContext","defaultProps"],"mappings":"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","sourcesContent":["\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result[\"default\"] = mod;\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst mapbox_gl_draw_1 = __importDefault(require(\"@mapbox/mapbox-gl-draw\"));\r\nconst React = __importStar(require(\"react\"));\r\nconst react_mapbox_gl_1 = require(\"react-mapbox-gl\");\r\nfunction noop() {\r\n    /* do nothing */\r\n}\r\nclass DrawControl extends React.Component {\r\n    componentDidMount() {\r\n        const map = this.context;\r\n        // The map needs to be passed in the React Context, or welse we can't do\r\n        // anything.\r\n        if (!map || !map.getStyle()) {\r\n            throw new Error('Map is undefined in React context.');\r\n        }\r\n        const { modes, onDrawActionable, onDrawCombine, onDrawCreate, onDrawDelete, onDrawModeChange, onDrawRender, onDrawSelectionChange, onDrawUncombine, onDrawUpdate, position } = this.props;\r\n        // Define a new Draw Control\r\n        this.draw = new mapbox_gl_draw_1.default(Object.assign(Object.assign({}, this.props), { modes: Object.assign(Object.assign({}, mapbox_gl_draw_1.default.modes), modes) }));\r\n        // Add it to our map\r\n        map.addControl(this.draw, position);\r\n        // Hook draw events\r\n        map.on('draw.actionable', onDrawActionable || noop);\r\n        map.on('draw.combine', onDrawCombine || noop);\r\n        map.on('draw.create', onDrawCreate || noop);\r\n        map.on('draw.delete', onDrawDelete || noop);\r\n        map.on('draw.modechange', onDrawModeChange || noop);\r\n        map.on('draw.render', onDrawRender || noop);\r\n        map.on('draw.selectionchange', onDrawSelectionChange || noop);\r\n        map.on('draw.uncombine', onDrawUncombine || noop);\r\n        map.on('draw.update', onDrawUpdate || noop);\r\n    }\r\n    componentWillUnmount() {\r\n        const map = this.context;\r\n        if (!map || !map.getStyle()) {\r\n            return;\r\n        }\r\n        if (!this.draw) {\r\n            return;\r\n        }\r\n        map.removeControl(this.draw);\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\nexports.default = DrawControl;\r\nDrawControl.contextType = react_mapbox_gl_1.MapContext;\r\nDrawControl.defaultProps = {\r\n    position: 'top-left'\r\n};\r\n"]},"metadata":{},"sourceType":"script"}