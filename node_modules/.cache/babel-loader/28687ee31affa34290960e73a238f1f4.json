{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\michi\\\\OneDrive\\\\Desktop\\\\AboutMi\\\\src\\\\components\\\\Maps.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactMapboxGl, { Layer, Marker, Feature, GeoJSONLayer } from \"react-mapbox-gl\";\nimport DrawControl from \"react-mapbox-gl-draw\";\nimport \"@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css\";\nimport * as turf from '@turf/turf';\nimport Data from '../data/Data.geojson'; //accessToken: 'pk.eyJ1IjoiZ2lhbmx1MDEiLCJhIjoiY2s1ejQ0a2gyMDY5NjNtcWp5cGF4Y21wMiJ9.S2-22wqQvv8B0aiya-Mh7A';\n//site URL: mapbox://styles/gianlu01/ck5z9olku3d2r1jov9drsa1uu\n//geoJson URL: http://dati.comune.milano.it/dataset/ds252-economia-locali-pubblico-spettacolo/resource/e5e1c5ed-03b9-415e-9880-a2c163e4973f/view/76fa6876-f208-440f-a57c-6b3d71e52278\n\nconst Map = ReactMapboxGl({\n  accessToken: \"pk.eyJ1IjoiZ2lhbmx1MDEiLCJhIjoiY2s1ejQ0a2gyMDY5NjNtcWp5cGF4Y21wMiJ9.S2-22wqQvv8B0aiya-Mh7A\"\n});\n\nclass Maps extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stato: false,\n      markers: Data\n    };\n    console.log(Data);\n  }\n\n  render() {\n    var points = turf.points([[9.19, 45.466944], [9.1792887, 45.4704962]]);\n    console.log(this.state.markers);\n    const controls = {\n      polygon: true,\n      trash: true,\n      point: false,\n      line_string: false,\n      combine_features: false,\n      uncombine_features: false\n    };\n\n    const onDrawCreate = ({\n      features\n    }) => {\n      console.log(\"data ==  \" + Data);\n      var result = turf.pointsWithinPolygon(Data, this.drawControl.draw.getAll());\n      console.log(result);\n\n      if (result.features.length <= 0) {\n        alert(\"Locals not founds\");\n      } else {\n        this.setState({\n          stato: true,\n          markers: result\n        });\n        console.log(this.state.markers); //MM();\n      }\n    };\n\n    const onDrawUpdate = ({\n      features\n    }) => {//onDrawCreate(features);\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Map, {\n      style: \"mapbox://styles/mapbox/streets-v9\" // eslint-disable-line\n      ,\n      containerStyle: {\n        height: \"100vh\",\n        width: \"100%\"\n      },\n      center: [9.19, 45.466944],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"//@TODO pasto sai cosa devi fare ahahaha\", React.createElement(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"ahhhhhhhhh\",\n      style: {\n        position: 'absolute'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(GeoJSONLayer, {\n      data: this.state.markers,\n      symbolLayout: {\n        'text-field': \"A\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(DrawControl, {\n      onDrawCreate: onDrawCreate,\n      onDrawUpdate: onDrawUpdate,\n      controls: controls,\n      ref: drawControl => {\n        this.drawControl = drawControl;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Maps;\n/*\r\n{if (markerState.state){\r\n        <Marker\r\n          coordinates={[-0.2416815, 51.5285582]}\r\n          anchor=\"bottom\">\r\n        </Marker>\r\n        //onClick={this.onMarkerClick.bind(this, feature.geometry.coordinates)}>\r\n      }}*/","map":{"version":3,"sources":["C:/Users/michi/OneDrive/Desktop/AboutMi/src/components/Maps.js"],"names":["React","ReactDOM","ReactMapboxGl","Layer","Marker","Feature","GeoJSONLayer","DrawControl","turf","Data","Map","accessToken","Maps","Component","constructor","props","state","stato","markers","console","log","render","points","controls","polygon","trash","point","line_string","combine_features","uncombine_features","onDrawCreate","features","result","pointsWithinPolygon","drawControl","draw","getAll","length","alert","setState","onDrawUpdate","height","width","textAlign","position"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ReactMapboxGl, {\r\n  Layer,\r\n  Marker,\r\n  Feature,\r\n  GeoJSONLayer\r\n} from \"react-mapbox-gl\";\r\nimport DrawControl from \"react-mapbox-gl-draw\";\r\nimport \"@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css\";\r\nimport * as turf from '@turf/turf';\r\nimport Data from '../data/Data.geojson'\r\n//accessToken: 'pk.eyJ1IjoiZ2lhbmx1MDEiLCJhIjoiY2s1ejQ0a2gyMDY5NjNtcWp5cGF4Y21wMiJ9.S2-22wqQvv8B0aiya-Mh7A';\r\n//site URL: mapbox://styles/gianlu01/ck5z9olku3d2r1jov9drsa1uu\r\n//geoJson URL: http://dati.comune.milano.it/dataset/ds252-economia-locali-pubblico-spettacolo/resource/e5e1c5ed-03b9-415e-9880-a2c163e4973f/view/76fa6876-f208-440f-a57c-6b3d71e52278\r\n\r\nconst Map = ReactMapboxGl({\r\n  accessToken: \"pk.eyJ1IjoiZ2lhbmx1MDEiLCJhIjoiY2s1ejQ0a2gyMDY5NjNtcWp5cGF4Y21wMiJ9.S2-22wqQvv8B0aiya-Mh7A\"\r\n});\r\n\r\nclass Maps extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stato: false,\r\n      markers: Data\r\n    }\r\n    console.log(Data)\r\n  }\r\n\r\n  render() {\r\n    var points = turf.points([\r\n      [9.19, 45.466944],\r\n      [9.1792887, 45.4704962]\r\n    ]);\r\n\r\n    console.log(this.state.markers)\r\n\r\n    const controls = {\r\n      polygon: true,\r\n      trash: true,\r\n      point: false,\r\n      line_string: false,\r\n      combine_features: false,\r\n      uncombine_features: false\r\n    }\r\n\r\n    const onDrawCreate = ({features}) => {\r\n      console.log(\"data ==  \"+Data)\r\n      var result = turf.pointsWithinPolygon(Data, this.drawControl.draw.getAll());\r\n      console.log(result)\r\n      if (result.features.length <= 0) {\r\n        alert(\"Locals not founds\")\r\n      } else {\r\n        this.setState({\r\n          stato: true,\r\n          markers:result\r\n        });\r\n        console.log(this.state.markers)\r\n        //MM();\r\n      }\r\n    };\r\n\r\n    const onDrawUpdate = ({ features}) => {\r\n            //onDrawCreate(features);\r\n        };\r\n\r\n    return (\r\n      <div>\r\n        <Map style=\"mapbox://styles/mapbox/streets-v9\" // eslint-disable-line\r\n          containerStyle={{\r\n            height: \"100vh\",\r\n            width: \"100%\"\r\n          }}\r\n          center={\r\n          [9.19, 45.466944]\r\n          } >\r\n              //@TODO pasto sai cosa devi fare ahahaha\r\n          <div style={{\r\n            textAlign: 'center'\r\n          }} >\r\n            <input type='text'\r\n              placeholder='ahhhhhhhhh'\r\n              style={{\r\n                position: 'absolute'\r\n                    }} >\r\n            </input>\r\n          </div>\r\n            <GeoJSONLayer\r\n              data={this.state.markers}\r\n              symbolLayout={{\r\n                'text-field': \"A\"\r\n                }}\r\n              >\r\n            </GeoJSONLayer>\r\n            <DrawControl\r\n              onDrawCreate={onDrawCreate}\r\n              onDrawUpdate={onDrawUpdate}\r\n              controls={controls}\r\n              ref={(drawControl) => { this.drawControl = drawControl; }}\r\n            />\r\n        </Map>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Maps;\r\n\r\n\r\n\r\n            /*\r\n{if (markerState.state){\r\n                    <Marker\r\n                      coordinates={[-0.2416815, 51.5285582]}\r\n                      anchor=\"bottom\">\r\n                    </Marker>\r\n                    //onClick={this.onMarkerClick.bind(this, feature.geometry.coordinates)}>\r\n                  }}*/\r\n"]},"metadata":{},"sourceType":"module"}