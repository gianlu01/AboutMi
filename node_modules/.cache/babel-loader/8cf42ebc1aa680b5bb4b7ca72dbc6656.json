{"ast":null,"code":"module.exports = Extent;\n\nfunction Extent(bbox) {\n  if (!(this instanceof Extent)) {\n    return new Extent(bbox);\n  }\n\n  this._bbox = bbox || [Infinity, Infinity, -Infinity, -Infinity];\n  this._valid = !!bbox;\n}\n\nExtent.prototype.include = function (ll) {\n  this._valid = true;\n  this._bbox[0] = Math.min(this._bbox[0], ll[0]);\n  this._bbox[1] = Math.min(this._bbox[1], ll[1]);\n  this._bbox[2] = Math.max(this._bbox[2], ll[0]);\n  this._bbox[3] = Math.max(this._bbox[3], ll[1]);\n  return this;\n};\n\nExtent.prototype.equals = function (_) {\n  var other;\n\n  if (_ instanceof Extent) {\n    other = _.bbox();\n  } else {\n    other = _;\n  }\n\n  return this._bbox[0] == other[0] && this._bbox[1] == other[1] && this._bbox[2] == other[2] && this._bbox[3] == other[3];\n};\n\nExtent.prototype.center = function (_) {\n  if (!this._valid) return null;\n  return [(this._bbox[0] + this._bbox[2]) / 2, (this._bbox[1] + this._bbox[3]) / 2];\n};\n\nExtent.prototype.union = function (_) {\n  this._valid = true;\n  var other;\n\n  if (_ instanceof Extent) {\n    other = _.bbox();\n  } else {\n    other = _;\n  }\n\n  this._bbox[0] = Math.min(this._bbox[0], other[0]);\n  this._bbox[1] = Math.min(this._bbox[1], other[1]);\n  this._bbox[2] = Math.max(this._bbox[2], other[2]);\n  this._bbox[3] = Math.max(this._bbox[3], other[3]);\n  return this;\n};\n\nExtent.prototype.bbox = function () {\n  if (!this._valid) return null;\n  return this._bbox;\n};\n\nExtent.prototype.contains = function (ll) {\n  if (!ll) return this._fastContains();\n  if (!this._valid) return null;\n  var lon = ll[0],\n      lat = ll[1];\n  return this._bbox[0] <= lon && this._bbox[1] <= lat && this._bbox[2] >= lon && this._bbox[3] >= lat;\n};\n\nExtent.prototype.intersect = function (_) {\n  if (!this._valid) return null;\n  var other;\n\n  if (_ instanceof Extent) {\n    other = _.bbox();\n  } else {\n    other = _;\n  }\n\n  return !(this._bbox[0] > other[2] || this._bbox[2] < other[0] || this._bbox[3] < other[1] || this._bbox[1] > other[3]);\n};\n\nExtent.prototype._fastContains = function () {\n  if (!this._valid) return new Function('return null;');\n  var body = 'return ' + this._bbox[0] + '<= ll[0] &&' + this._bbox[1] + '<= ll[1] &&' + this._bbox[2] + '>= ll[0] &&' + this._bbox[3] + '>= ll[1]';\n  return new Function('ll', body);\n};\n\nExtent.prototype.polygon = function () {\n  if (!this._valid) return null;\n  return {\n    type: 'Polygon',\n    coordinates: [[// W, S\n    [this._bbox[0], this._bbox[1]], // E, S\n    [this._bbox[2], this._bbox[1]], // E, N\n    [this._bbox[2], this._bbox[3]], // W, N\n    [this._bbox[0], this._bbox[3]], // W, S\n    [this._bbox[0], this._bbox[1]]]]\n  };\n};","map":null,"metadata":{},"sourceType":"script"}