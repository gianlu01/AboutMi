{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _constants = require(\"./constants\");\n\nvar _modeHandler = _interopRequireDefault(require(\"./mode-handler\"));\n\nvar _utils = require(\"./edit-modes/utils\");\n\nvar _style = require(\"./style\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar defaultProps = _objectSpread({}, _modeHandler.default.defaultProps, {\n  clickRadius: 0,\n  featureShape: 'circle',\n  editHandleShape: 'rect',\n  editHandleStyle: _style.editHandleStyle,\n  featureStyle: _style.featureStyle\n});\n\nvar Editor =\n/*#__PURE__*/\nfunction (_ModeHandler) {\n  _inherits(Editor, _ModeHandler);\n\n  function Editor() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Editor);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Editor)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_getEditHandleState\", function (editHandle, renderState) {\n      var _this$state = _this.state,\n          pointerDownPicks = _this$state.pointerDownPicks,\n          hovered = _this$state.hovered;\n\n      if (renderState) {\n        return renderState;\n      }\n\n      var editHandleIndex = editHandle.properties.positionIndexes[0];\n      var draggingEditHandleIndex = null;\n      var pickedObject = pointerDownPicks && pointerDownPicks[0] && pointerDownPicks[0].object;\n\n      if (pickedObject && pickedObject.guideType === _constants.GUIDE_TYPE.EDIT_HANDLE) {\n        draggingEditHandleIndex = pickedObject.index;\n      }\n\n      if (editHandleIndex === draggingEditHandleIndex) {\n        return _constants.RENDER_STATE.SELECTED;\n      }\n\n      if (hovered && hovered.type === _constants.ELEMENT_TYPE.EDIT_HANDLE) {\n        if (hovered.index === editHandleIndex) {\n          return _constants.RENDER_STATE.HOVERED;\n        } // cursor hovered on first vertex when drawing polygon\n\n\n        if (hovered.index === 0 && editHandle.properties.guideType === _constants.GUIDE_TYPE.CURSOR_EDIT_HANDLE) {\n          return _constants.RENDER_STATE.CLOSING;\n        }\n      }\n\n      return _constants.RENDER_STATE.INACTIVE;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_getFeatureRenderState\", function (index, renderState) {\n      var hovered = _this.state.hovered;\n\n      var selectedFeatureIndex = _this._getSelectedFeatureIndex();\n\n      if (renderState) {\n        return renderState;\n      }\n\n      if (index === selectedFeatureIndex) {\n        return _constants.RENDER_STATE.SELECTED;\n      }\n\n      if (hovered && hovered.type === _constants.ELEMENT_TYPE.FEATURE && hovered.featureIndex === index) {\n        return _constants.RENDER_STATE.HOVERED;\n      }\n\n      return _constants.RENDER_STATE.INACTIVE;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_getStyleProp\", function (styleProp, params) {\n      return typeof styleProp === 'function' ? styleProp(params) : styleProp;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_renderEditHandle\", function (editHandle, feature) {\n      /* eslint-enable max-params */\n      var coordinates = (0, _utils.getFeatureCoordinates)(editHandle);\n\n      var p = _this.project(coordinates && coordinates[0]);\n\n      if (!p) {\n        return null;\n      }\n\n      var _editHandle$propertie = editHandle.properties,\n          featureIndex = _editHandle$propertie.featureIndex,\n          positionIndexes = _editHandle$propertie.positionIndexes;\n      var _this$props = _this.props,\n          clickRadius = _this$props.clickRadius,\n          editHandleShape = _this$props.editHandleShape,\n          editHandleStyle = _this$props.editHandleStyle;\n      var index = positionIndexes[0];\n\n      var shape = _this._getStyleProp(editHandleShape, {\n        feature: feature || editHandle,\n        index: index,\n        featureIndex: featureIndex,\n        state: _this._getEditHandleState(editHandle)\n      });\n\n      var style = _this._getStyleProp(editHandleStyle, {\n        feature: feature || editHandle,\n        index: index,\n        featureIndex: featureIndex,\n        shape: shape,\n        state: _this._getEditHandleState(editHandle)\n      }); // disable events for cursor editHandle\n\n\n      if (editHandle.properties.guideType === _constants.GUIDE_TYPE.CURSOR_EDIT_HANDLE) {\n        style = _objectSpread({}, style, {\n          // disable pointer events for cursor\n          pointerEvents: 'none'\n        });\n      }\n\n      var elemKey = \"\".concat(_constants.ELEMENT_TYPE.EDIT_HANDLE, \".\").concat(featureIndex, \".\").concat(index); // first <circle|rect> is to make path easily interacted with\n\n      switch (shape) {\n        case 'circle':\n          return _react.default.createElement(\"g\", {\n            key: elemKey,\n            transform: \"translate(\".concat(p[0], \", \").concat(p[1], \")\")\n          }, _react.default.createElement(\"circle\", {\n            \"data-type\": _constants.ELEMENT_TYPE.EDIT_HANDLE,\n            \"data-index\": index,\n            \"data-feature-index\": featureIndex,\n            key: \"\".concat(elemKey, \".hidden\"),\n            style: _objectSpread({}, style, {\n              stroke: 'none',\n              fill: '#000',\n              fillOpacity: 0\n            }),\n            cx: 0,\n            cy: 0,\n            r: clickRadius\n          }), _react.default.createElement(\"circle\", {\n            \"data-type\": _constants.ELEMENT_TYPE.EDIT_HANDLE,\n            \"data-index\": index,\n            \"data-feature-index\": featureIndex,\n            key: elemKey,\n            style: style,\n            cx: 0,\n            cy: 0\n          }));\n\n        case 'rect':\n          return _react.default.createElement(\"g\", {\n            key: elemKey,\n            transform: \"translate(\".concat(p[0], \", \").concat(p[1], \")\")\n          }, _react.default.createElement(\"rect\", {\n            \"data-type\": _constants.ELEMENT_TYPE.EDIT_HANDLE,\n            \"data-index\": index,\n            \"data-feature-index\": featureIndex,\n            key: \"\".concat(elemKey, \".hidden\"),\n            style: _objectSpread({}, style, {\n              height: clickRadius,\n              width: clickRadius,\n              fill: '#000',\n              fillOpacity: 0\n            }),\n            r: clickRadius\n          }), _react.default.createElement(\"rect\", {\n            \"data-type\": _constants.ELEMENT_TYPE.EDIT_HANDLE,\n            \"data-index\": index,\n            \"data-feature-index\": featureIndex,\n            key: \"\".concat(elemKey),\n            style: style\n          }));\n\n        default:\n          return null;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_renderSegment\", function (featureIndex, index, coordinates, style) {\n      var path = _this._getPathInScreenCoords(coordinates, _constants.GEOJSON_TYPE.LINE_STRING);\n\n      var radius = style.radius,\n          others = _objectWithoutProperties(style, [\"radius\"]);\n\n      var clickRadius = _this.props.clickRadius;\n      var elemKey = \"\".concat(_constants.ELEMENT_TYPE.SEGMENT, \".\").concat(featureIndex, \".\").concat(index);\n      return _react.default.createElement(\"g\", {\n        key: elemKey\n      }, _react.default.createElement(\"path\", {\n        key: \"\".concat(elemKey, \".hidden\"),\n        \"data-type\": _constants.ELEMENT_TYPE.SEGMENT,\n        \"data-index\": index,\n        \"data-feature-index\": featureIndex,\n        style: _objectSpread({}, others, {\n          strokeWidth: clickRadius || radius,\n          opacity: 0\n        }),\n        d: path\n      }), _react.default.createElement(\"path\", {\n        key: elemKey,\n        \"data-type\": _constants.ELEMENT_TYPE.SEGMENT,\n        \"data-index\": index,\n        \"data-feature-index\": featureIndex,\n        style: others,\n        d: path\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_renderSegments\", function (featureIndex, coordinates, style) {\n      var segments = [];\n\n      for (var i = 0; i < coordinates.length - 1; i++) {\n        segments.push(_this._renderSegment(featureIndex, i, [coordinates[i], coordinates[i + 1]], style));\n      }\n\n      return segments;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_renderFill\", function (featureIndex, coordinates, style) {\n      var path = _this._getPathInScreenCoords(coordinates, _constants.GEOJSON_TYPE.POLYGON);\n\n      return _react.default.createElement(\"path\", {\n        key: \"\".concat(_constants.ELEMENT_TYPE.FILL, \".\").concat(featureIndex),\n        \"data-type\": _constants.ELEMENT_TYPE.FILL,\n        \"data-feature-index\": featureIndex,\n        style: _objectSpread({}, style, {\n          stroke: 'none'\n        }),\n        d: path\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_renderTentativeFeature\", function (feature, cursorEditHandle) {\n      var featureStyle = _this.props.featureStyle;\n      var coordinates = feature.geometry.coordinates,\n          renderType = feature.properties.renderType;\n\n      if (!coordinates || coordinates.length < 2) {\n        return null;\n      } // >= 2 coordinates\n\n\n      var firstCoords = coordinates[0];\n      var lastCoords = coordinates[coordinates.length - 1];\n\n      var uncommittedStyle = _this._getStyleProp(featureStyle, {\n        feature: feature,\n        index: null,\n        state: _constants.RENDER_STATE.UNCOMMITTED\n      });\n\n      var committedPath;\n      var uncommittedPath;\n      var closingPath;\n\n      var fill = _this._renderFill('tentative', coordinates, uncommittedStyle);\n\n      switch (renderType) {\n        case _constants.RENDER_TYPE.LINE_STRING:\n        case _constants.RENDER_TYPE.POLYGON:\n          var committedStyle = _this._getStyleProp(featureStyle, {\n            feature: feature,\n            state: _constants.RENDER_STATE.SELECTED\n          });\n\n          if (cursorEditHandle) {\n            var cursorCoords = coordinates[coordinates.length - 2];\n            committedPath = _this._renderSegments('tentative', coordinates.slice(0, coordinates.length - 1), committedStyle);\n            uncommittedPath = _this._renderSegment('tentative-uncommitted', coordinates.length - 2, [cursorCoords, lastCoords], uncommittedStyle);\n          } else {\n            committedPath = _this._renderSegments('tentative', coordinates, committedStyle);\n          }\n\n          if (renderType === _constants.RENDER_TYPE.POLYGON) {\n            var closingStyle = _this._getStyleProp(featureStyle, {\n              feature: feature,\n              index: null,\n              state: _constants.RENDER_STATE.CLOSING\n            });\n\n            closingPath = _this._renderSegment('tentative-closing', coordinates.length - 1, [lastCoords, firstCoords], closingStyle);\n          }\n\n          break;\n\n        case _constants.RENDER_TYPE.RECTANGLE:\n          uncommittedPath = _this._renderSegments('tentative', _toConsumableArray(coordinates).concat([firstCoords]), uncommittedStyle);\n          break;\n\n        default:\n      }\n\n      return [fill, committedPath, uncommittedPath, closingPath].filter(Boolean);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_renderGuides\", function (_ref) {\n      var tentativeFeature = _ref.tentativeFeature,\n          editHandles = _ref.editHandles;\n\n      var features = _this.getFeatures();\n\n      var cursorEditHandle = editHandles.find(function (f) {\n        return f.properties.guideType === _constants.GUIDE_TYPE.CURSOR_EDIT_HANDLE;\n      });\n      return _react.default.createElement(\"g\", {\n        key: \"feature-guides\"\n      }, tentativeFeature && _this._renderTentativeFeature(tentativeFeature, cursorEditHandle), editHandles && editHandles.map(function (editHandle) {\n        var feature = features && features[editHandle.properties.featureIndex] || tentativeFeature;\n        return _this._renderEditHandle(editHandle, feature);\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_renderPoint\", function (feature, index, path) {\n      var renderState = _this._getFeatureRenderState(index);\n\n      var _this$props2 = _this.props,\n          featureStyle = _this$props2.featureStyle,\n          featureShape = _this$props2.featureShape,\n          clickRadius = _this$props2.clickRadius;\n\n      var shape = _this._getStyleProp(featureShape, {\n        feature: feature,\n        index: index,\n        state: renderState\n      });\n\n      var style = _this._getStyleProp(featureStyle, {\n        feature: feature,\n        index: index,\n        state: renderState\n      });\n\n      var elemKey = \"feature.\".concat(index);\n\n      if (shape === 'rect') {\n        return _react.default.createElement(\"g\", {\n          key: elemKey,\n          transform: \"translate(\".concat(path[0][0], \", \").concat(path[0][1], \")\")\n        }, _react.default.createElement(\"rect\", {\n          \"data-type\": _constants.ELEMENT_TYPE.FEATURE,\n          \"data-feature-index\": index,\n          key: \"\".concat(elemKey, \".hidden\"),\n          style: _objectSpread({}, style, {\n            width: clickRadius,\n            height: clickRadius,\n            fill: '#000',\n            fillOpacity: 0\n          })\n        }), _react.default.createElement(\"rect\", {\n          \"data-type\": _constants.ELEMENT_TYPE.FEATURE,\n          \"data-feature-index\": index,\n          key: elemKey,\n          style: style\n        }));\n      }\n\n      return _react.default.createElement(\"g\", {\n        key: \"feature.\".concat(index),\n        transform: \"translate(\".concat(path[0][0], \", \").concat(path[0][1], \")\")\n      }, _react.default.createElement(\"circle\", {\n        \"data-type\": _constants.ELEMENT_TYPE.FEATURE,\n        \"data-feature-index\": index,\n        key: \"\".concat(elemKey, \".hidden\"),\n        style: _objectSpread({}, style, {\n          opacity: 0\n        }),\n        cx: 0,\n        cy: 0,\n        r: clickRadius\n      }), _react.default.createElement(\"circle\", {\n        \"data-type\": _constants.ELEMENT_TYPE.FEATURE,\n        \"data-feature-index\": index,\n        key: elemKey,\n        style: style,\n        cx: 0,\n        cy: 0\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_renderPath\", function (feature, index, path) {\n      var _this$props3 = _this.props,\n          featureStyle = _this$props3.featureStyle,\n          clickRadius = _this$props3.clickRadius;\n\n      var selectedFeatureIndex = _this._getSelectedFeatureIndex();\n\n      var selected = index === selectedFeatureIndex;\n\n      var renderState = _this._getFeatureRenderState(index);\n\n      var style = _this._getStyleProp(featureStyle, {\n        feature: feature,\n        index: index,\n        state: renderState\n      });\n\n      var elemKey = \"feature.\".concat(index);\n\n      if (selected) {\n        return _react.default.createElement(\"g\", {\n          key: elemKey\n        }, _this._renderSegments(index, feature.geometry.coordinates, style));\n      } // first <path> is to make path easily interacted with\n\n\n      return _react.default.createElement(\"g\", {\n        key: elemKey\n      }, _react.default.createElement(\"path\", {\n        \"data-type\": _constants.ELEMENT_TYPE.FEATURE,\n        \"data-feature-index\": index,\n        key: \"\".concat(elemKey, \".hidden\"),\n        style: _objectSpread({}, style, {\n          strokeWidth: clickRadius,\n          opacity: 0\n        }),\n        d: path\n      }), _react.default.createElement(\"path\", {\n        \"data-type\": _constants.ELEMENT_TYPE.FEATURE,\n        \"data-feature-index\": index,\n        key: elemKey,\n        style: style,\n        d: path\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_renderPolygon\", function (feature, index, path) {\n      var featureStyle = _this.props.featureStyle;\n\n      var selectedFeatureIndex = _this._getSelectedFeatureIndex();\n\n      var selected = index === selectedFeatureIndex;\n\n      var renderState = _this._getFeatureRenderState(index);\n\n      var style = _this._getStyleProp(featureStyle, {\n        feature: feature,\n        index: index,\n        state: renderState\n      });\n\n      var elemKey = \"feature.\".concat(index);\n\n      if (selected) {\n        var coordinates = (0, _utils.getFeatureCoordinates)(feature);\n\n        if (!coordinates) {\n          return null;\n        }\n\n        return _react.default.createElement(\"g\", {\n          key: elemKey\n        }, _this._renderFill(index, coordinates, style), _this._renderSegments(index, coordinates, style));\n      }\n\n      return _react.default.createElement(\"path\", {\n        \"data-type\": _constants.ELEMENT_TYPE.FEATURE,\n        \"data-feature-index\": index,\n        key: elemKey,\n        style: style,\n        d: path\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_renderFeature\", function (feature, index) {\n      var coordinates = (0, _utils.getFeatureCoordinates)(feature);\n\n      if (!coordinates || !coordinates.length) {\n        return null;\n      }\n\n      var renderType = feature.properties.renderType,\n          type = feature.geometry.type;\n\n      var path = _this._getPathInScreenCoords(coordinates, type);\n\n      if (!path) {\n        return null;\n      }\n\n      switch (renderType) {\n        case _constants.RENDER_TYPE.POINT:\n          return _this._renderPoint(feature, index, path);\n\n        case _constants.RENDER_TYPE.LINE_STRING:\n          return _this._renderPath(feature, index, path);\n\n        case _constants.RENDER_TYPE.POLYGON:\n        case _constants.RENDER_TYPE.RECTANGLE:\n          return _this._renderPolygon(feature, index, path);\n\n        default:\n          return null;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_renderCanvas\", function () {\n      var features = _this.getFeatures();\n\n      var guides = _this._modeHandler && _this._modeHandler.getGuides(_this.getModeProps());\n\n      return _react.default.createElement(\"svg\", {\n        key: \"draw-canvas\",\n        width: \"100%\",\n        height: \"100%\"\n      }, features && features.length > 0 && _react.default.createElement(\"g\", {\n        key: \"feature-group\"\n      }, features.map(_this._renderFeature)), guides && _react.default.createElement(\"g\", {\n        key: \"feature-guides\"\n      }, _this._renderGuides(guides)));\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_renderEditor\", function () {\n      var viewport = _this._context && _this._context.viewport || {};\n      var style = _this.props.style;\n      var width = viewport.width,\n          height = viewport.height;\n      return _react.default.createElement(\"div\", {\n        id: \"editor\",\n        style: _objectSpread({\n          width: width,\n          height: height\n        }, style),\n        ref: function ref(_) {\n          _this._containerRef = _;\n        }\n      }, _this._renderCanvas());\n    });\n\n    return _this;\n  }\n\n  _createClass(Editor, [{\n    key: \"_getPathInScreenCoords\",\n\n    /* HELPERS */\n    value: function _getPathInScreenCoords(coordinates, type) {\n      var _this2 = this;\n\n      if (coordinates.length === 0) {\n        return '';\n      }\n\n      var screenCoords = coordinates.map(function (p) {\n        return _this2.project(p);\n      });\n      var pathString = '';\n\n      switch (type) {\n        case _constants.GEOJSON_TYPE.POINT:\n          return screenCoords;\n\n        case _constants.GEOJSON_TYPE.LINE_STRING:\n          pathString = screenCoords.map(function (p) {\n            return \"\".concat(p[0], \",\").concat(p[1]);\n          }).join('L');\n          return \"M \".concat(pathString);\n\n        case _constants.GEOJSON_TYPE.POLYGON:\n          pathString = screenCoords.map(function (p) {\n            return \"\".concat(p[0], \",\").concat(p[1]);\n          }).join('L');\n          return \"M \".concat(pathString, \" z\");\n\n        default:\n          return null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _get(_getPrototypeOf(Editor.prototype), \"render\", this).call(this, this._renderEditor());\n    }\n  }]);\n\n  return Editor;\n}(_modeHandler.default);\n\nexports.default = Editor;\n\n_defineProperty(Editor, \"defaultProps\", defaultProps);","map":null,"metadata":{},"sourceType":"script"}