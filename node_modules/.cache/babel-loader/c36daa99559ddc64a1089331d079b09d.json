{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\michi\\\\OneDrive\\\\Desktop\\\\AboutMi\\\\src\\\\components\\\\Maps.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactMapboxGl, { Layer, Marker, Feature } from \"react-mapbox-gl\";\nimport DrawControl from \"react-mapbox-gl-draw\";\nimport \"@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css\";\nimport * as turf from '@turf/turf'; //accessToken: 'pk.eyJ1IjoiZ2lhbmx1MDEiLCJhIjoiY2s1ejQ0a2gyMDY5NjNtcWp5cGF4Y21wMiJ9.S2-22wqQvv8B0aiya-Mh7A';\n//site URL: mapbox://styles/gianlu01/ck5z9olku3d2r1jov9drsa1uu\n\nconst Map = ReactMapboxGl({\n  accessToken: \"pk.eyJ1IjoiZ2lhbmx1MDEiLCJhIjoiY2s1ejQ0a2gyMDY5NjNtcWp5cGF4Y21wMiJ9.S2-22wqQvv8B0aiya-Mh7A\"\n});\n\nclass Maps extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadMarker = () => {\n      return this.state.markers[0].map(spot => {\n        return React.createElement(Marker, {\n          coordinates: [spot.geometry.coordinates[0], spot.geometry.coordinates[1]],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"UP\"));\n      });\n    };\n\n    this.state = {\n      stato: false,\n      markers: []\n    };\n  }\n\n  render() {\n    var points = turf.points([[9.19, 45.466944], [9.1792887, 45.4704962]]);\n    const controls = {\n      polygon: true,\n      trash: true,\n      point: false,\n      line_string: false,\n      combine_features: false,\n      uncombine_features: false\n    };\n\n    const MM = () => {\n      if (this.state.stato) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        })\n        /*\r\n        <Layer type=\"symbol\"\r\n        id=\"marker\"\r\n        layout={\r\n        {\r\n        \"icon-image\": \"marker-15\"\r\n        }\r\n        } >\r\n        <Feature coordinates={\r\n        [\r\n        this.state.markers[0].geometry.coordinates[0],\r\n        this.state.markers[0].geometry.coordinates[1]\r\n        ]\r\n        }\r\n        />} </Layer >\r\n        */\n        ;\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        });\n      }\n    };\n\n    const onDrawCreate = ({\n      features\n    }) => {\n      var poly = features[0].geometry.coordinates;\n      poly = turf.polygon(poly);\n      var result = turf.pointsWithinPolygon(points, poly);\n\n      if (result.features.length <= 0) {\n        alert(\"Locals not founds\");\n      } else {\n        this.setState({\n          stato: true\n        });\n        this.setState({\n          markers: result.features\n        });\n        MM();\n      }\n    };\n\n    const onDrawUpdate = ({\n      features\n    }) => {//onDrawCreate(features);\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Map, {\n      style: \"mapbox://styles/mapbox/streets-v9\" // eslint-disable-line\n      ,\n      containerStyle: {\n        height: \"100vh\",\n        width: \"100%\"\n      },\n      center: [9.19, 45.466944],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"//@TODO pasto sai cosa devi fare ahahaha\", React.createElement(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"ahhhhhhhhh\",\n      style: {\n        position: 'absolute'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(DrawControl, {\n      onDrawCreate: onDrawCreate,\n      onDrawUpdate: onDrawUpdate,\n      controls: controls,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Maps;\n/*\r\n{if (markerState.state){\r\n        <Marker\r\n          coordinates={[-0.2416815, 51.5285582]}\r\n          anchor=\"bottom\">\r\n        </Marker>\r\n        //onClick={this.onMarkerClick.bind(this, feature.geometry.coordinates)}>\r\n      }}*/","map":{"version":3,"sources":["C:/Users/michi/OneDrive/Desktop/AboutMi/src/components/Maps.js"],"names":["React","ReactDOM","ReactMapboxGl","Layer","Marker","Feature","DrawControl","turf","Map","accessToken","Maps","Component","constructor","props","loadMarker","state","markers","map","spot","geometry","coordinates","stato","render","points","controls","polygon","trash","point","line_string","combine_features","uncombine_features","MM","onDrawCreate","features","poly","result","pointsWithinPolygon","length","alert","setState","onDrawUpdate","height","width","textAlign","position"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ReactMapboxGl, {\r\n  Layer,\r\n  Marker,\r\n  Feature\r\n} from \"react-mapbox-gl\";\r\nimport DrawControl from \"react-mapbox-gl-draw\";\r\nimport \"@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css\";\r\nimport * as turf from '@turf/turf';\r\n\r\n//accessToken: 'pk.eyJ1IjoiZ2lhbmx1MDEiLCJhIjoiY2s1ejQ0a2gyMDY5NjNtcWp5cGF4Y21wMiJ9.S2-22wqQvv8B0aiya-Mh7A';\r\n//site URL: mapbox://styles/gianlu01/ck5z9olku3d2r1jov9drsa1uu\r\n\r\nconst Map = ReactMapboxGl({\r\n  accessToken: \"pk.eyJ1IjoiZ2lhbmx1MDEiLCJhIjoiY2s1ejQ0a2gyMDY5NjNtcWp5cGF4Y21wMiJ9.S2-22wqQvv8B0aiya-Mh7A\"\r\n});\r\n\r\nclass Maps extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stato: false,\r\n      markers: []\r\n    }\r\n  }\r\n\r\n  loadMarker = () => {\r\n  return this.state.markers[0].map(spot => {\r\n    return (\r\n      <Marker\r\n      coordinates ={[spot.geometry.coordinates[0],spot.geometry.coordinates[1]]}\r\n      >\r\n      <div>UP</div>\r\n      </Marker>\r\n    );\r\n  });\r\n};\r\n\r\n  render() {\r\n    var points = turf.points([\r\n      [9.19, 45.466944],\r\n      [9.1792887, 45.4704962]\r\n    ]);\r\n    const controls = {\r\n      polygon: true,\r\n      trash: true,\r\n      point: false,\r\n      line_string: false,\r\n      combine_features: false,\r\n      uncombine_features: false\r\n    }\r\n\r\n    const MM = () => {\r\n      if (this.state.stato) {\r\n        return (\r\n          <p></p>/*\r\n          <Layer type=\"symbol\"\r\n          id=\"marker\"\r\n          layout={\r\n            {\r\n              \"icon-image\": \"marker-15\"\r\n            }\r\n          } >\r\n          <Feature coordinates={\r\n              [\r\n                this.state.markers[0].geometry.coordinates[0],\r\n                this.state.markers[0].geometry.coordinates[1]\r\n              ]\r\n            }\r\n          />} </Layer >\r\n        */\r\n      );\r\n      } else {\r\n        return ( <div /> );\r\n        }\r\n      }\r\n    const onDrawCreate = ({\r\n            features\r\n          }) => {\r\n      var poly = features[0].geometry.coordinates;\r\n          poly = turf.polygon(poly);\r\n          var result = turf.pointsWithinPolygon(points, poly);\r\n      if (result.features.length <= 0) {\r\n            alert(\"Locals not founds\")\r\n          } else {\r\n            this.setState({\r\n              stato: true\r\n            });\r\n        this.setState({\r\n            markers: result.features\r\n        });\r\n        MM();\r\n      }\r\n    };\r\n\r\n    const onDrawUpdate = ({ features}) => {\r\n            //onDrawCreate(features);\r\n        };\r\n\r\n    return (\r\n    <div>\r\n            <Map style=\"mapbox://styles/mapbox/streets-v9\" // eslint-disable-line\r\n              containerStyle={\r\n                {\r\n                  height: \"100vh\",\r\n                  width: \"100%\"\r\n                }\r\n              }\r\n              center={\r\n                [9.19, 45.466944]\r\n              } >\r\n              //@TODO pasto sai cosa devi fare ahahaha\r\n              <div style={\r\n                  {\r\n                    textAlign: 'center'\r\n                  }\r\n                } >\r\n                <input type='text'\r\n                  placeholder='ahhhhhhhhh'\r\n                  style={\r\n                    {\r\n                      position: 'absolute'\r\n                    }\r\n                  } >\r\n                  </input>\r\n                  </div>\r\n\r\n                  <DrawControl onDrawCreate={\r\n                      onDrawCreate\r\n                    }\r\n                    onDrawUpdate={\r\n                      onDrawUpdate\r\n                    }\r\n                    controls={\r\n                      controls\r\n                    }\r\n                  />\r\n                  </Map>\r\n                  </div>\r\n                );\r\n              }\r\n            }\r\n\r\n\r\n            export default Maps;\r\n\r\n\r\n\r\n            /*\r\n{if (markerState.state){\r\n                    <Marker\r\n                      coordinates={[-0.2416815, 51.5285582]}\r\n                      anchor=\"bottom\">\r\n                    </Marker>\r\n                    //onClick={this.onMarkerClick.bind(this, feature.geometry.coordinates)}>\r\n                  }}*/\r\n"]},"metadata":{},"sourceType":"module"}