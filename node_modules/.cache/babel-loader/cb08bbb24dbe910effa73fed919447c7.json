{"ast":null,"code":"/**\r\n * @module ol/obj\r\n */\n\n/**\r\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\r\n * one or more source objects to a target object.\r\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\r\n *\r\n * @param {!Object} target The target object.\r\n * @param {...Object} var_sources The source object(s).\r\n * @return {!Object} The modified target object.\r\n */\nexport var assign = typeof Object.assign === 'function' ? Object.assign : function (target, var_sources) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments[i];\n\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return output;\n};\n/**\r\n * Removes all properties from an object.\r\n * @param {Object} object The object to clear.\r\n */\n\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n/**\r\n * Polyfill for Object.values().  Get an array of property values from an object.\r\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\r\n *\r\n * @param {!Object<K,V>} object The object from which to get the values.\r\n * @return {!Array<V>} The property values.\r\n * @template K,V\r\n */\n\nexport var getValues = typeof Object.values === 'function' ? Object.values : function (object) {\n  var values = [];\n\n  for (var property in object) {\n    values.push(object[property]);\n  }\n\n  return values;\n};\n/**\r\n * Determine if an object has any properties.\r\n * @param {Object} object The object to check.\r\n * @return {boolean} The object is empty.\r\n */\n\nexport function isEmpty(object) {\n  var property;\n\n  for (property in object) {\n    return false;\n  }\n\n  return !property;\n}","map":null,"metadata":{},"sourceType":"module"}