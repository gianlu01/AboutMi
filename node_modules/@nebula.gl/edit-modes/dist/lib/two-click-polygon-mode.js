"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TwoClickPolygonMode = void 0;

var _geojsonEditMode = require("./geojson-edit-mode.js");

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var TwoClickPolygonMode =
/*#__PURE__*/
function (_BaseGeoJsonEditMode) {
  _inherits(TwoClickPolygonMode, _BaseGeoJsonEditMode);

  function TwoClickPolygonMode() {
    _classCallCheck(this, TwoClickPolygonMode);

    return _possibleConstructorReturn(this, _getPrototypeOf(TwoClickPolygonMode).apply(this, arguments));
  }

  _createClass(TwoClickPolygonMode, [{
    key: "handleClick",
    value: function handleClick(event, props) {
      this.addClickSequence(event);
      var clickSequence = this.getClickSequence();
      var tentativeFeature = this.getTentativeGuide(props);

      if (clickSequence.length > 1 && tentativeFeature && tentativeFeature.geometry.type === 'Polygon') {
        var editAction = this.getAddFeatureOrBooleanPolygonAction(tentativeFeature.geometry, props);
        this.resetClickSequence();

        if (editAction) {
          props.onEdit(editAction);
        }
      }
    }
  }, {
    key: "getGuides",
    value: function getGuides(props) {
      var lastPointerMoveEvent = props.lastPointerMoveEvent,
          modeConfig = props.modeConfig;
      var clickSequence = this.getClickSequence();
      var guides = {
        type: 'FeatureCollection',
        features: []
      };

      if (clickSequence.length === 0) {
        // nothing to do yet
        return guides;
      }

      var corner1 = clickSequence[0];
      var corner2 = lastPointerMoveEvent.mapCoords;
      var polygon = this.getTwoClickPolygon(corner1, corner2, modeConfig);

      if (polygon) {
        guides.features.push({
          type: 'Feature',
          properties: {
            guideType: 'tentative'
          },
          geometry: polygon.geometry
        });
      }

      return guides;
    }
  }, {
    key: "getTwoClickPolygon",
    value: function getTwoClickPolygon(coord1, coord2, modeConfig) {
      return null;
    }
  }, {
    key: "handlePointerMove",
    value: function handlePointerMove(event, props) {
      props.onUpdateCursor('cell');
    }
  }]);

  return TwoClickPolygonMode;
}(_geojsonEditMode.BaseGeoJsonEditMode);

exports.TwoClickPolygonMode = TwoClickPolygonMode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvdHdvLWNsaWNrLXBvbHlnb24tbW9kZS5qcyJdLCJuYW1lcyI6WyJUd29DbGlja1BvbHlnb25Nb2RlIiwiZXZlbnQiLCJwcm9wcyIsImFkZENsaWNrU2VxdWVuY2UiLCJjbGlja1NlcXVlbmNlIiwiZ2V0Q2xpY2tTZXF1ZW5jZSIsInRlbnRhdGl2ZUZlYXR1cmUiLCJnZXRUZW50YXRpdmVHdWlkZSIsImxlbmd0aCIsImdlb21ldHJ5IiwidHlwZSIsImVkaXRBY3Rpb24iLCJnZXRBZGRGZWF0dXJlT3JCb29sZWFuUG9seWdvbkFjdGlvbiIsInJlc2V0Q2xpY2tTZXF1ZW5jZSIsIm9uRWRpdCIsImxhc3RQb2ludGVyTW92ZUV2ZW50IiwibW9kZUNvbmZpZyIsImd1aWRlcyIsImZlYXR1cmVzIiwiY29ybmVyMSIsImNvcm5lcjIiLCJtYXBDb29yZHMiLCJwb2x5Z29uIiwiZ2V0VHdvQ2xpY2tQb2x5Z29uIiwicHVzaCIsInByb3BlcnRpZXMiLCJndWlkZVR5cGUiLCJjb29yZDEiLCJjb29yZDIiLCJvblVwZGF0ZUN1cnNvciIsIkJhc2VHZW9Kc29uRWRpdE1vZGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFJQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFFYUEsbUI7Ozs7Ozs7Ozs7Ozs7Z0NBQ0NDLEssRUFBbUJDLEssRUFBcUM7QUFDbEUsV0FBS0MsZ0JBQUwsQ0FBc0JGLEtBQXRCO0FBQ0EsVUFBTUcsYUFBYSxHQUFHLEtBQUtDLGdCQUFMLEVBQXRCO0FBQ0EsVUFBTUMsZ0JBQWdCLEdBQUcsS0FBS0MsaUJBQUwsQ0FBdUJMLEtBQXZCLENBQXpCOztBQUVBLFVBQ0VFLGFBQWEsQ0FBQ0ksTUFBZCxHQUF1QixDQUF2QixJQUNBRixnQkFEQSxJQUVBQSxnQkFBZ0IsQ0FBQ0csUUFBakIsQ0FBMEJDLElBQTFCLEtBQW1DLFNBSHJDLEVBSUU7QUFDQSxZQUFNQyxVQUFVLEdBQUcsS0FBS0MsbUNBQUwsQ0FBeUNOLGdCQUFnQixDQUFDRyxRQUExRCxFQUFvRVAsS0FBcEUsQ0FBbkI7QUFFQSxhQUFLVyxrQkFBTDs7QUFFQSxZQUFJRixVQUFKLEVBQWdCO0FBQ2RULFVBQUFBLEtBQUssQ0FBQ1ksTUFBTixDQUFhSCxVQUFiO0FBQ0Q7QUFDRjtBQUNGOzs7OEJBRVNULEssRUFBNkQ7QUFBQSxVQUM3RGEsb0JBRDZELEdBQ3hCYixLQUR3QixDQUM3RGEsb0JBRDZEO0FBQUEsVUFDdkNDLFVBRHVDLEdBQ3hCZCxLQUR3QixDQUN2Q2MsVUFEdUM7QUFFckUsVUFBTVosYUFBYSxHQUFHLEtBQUtDLGdCQUFMLEVBQXRCO0FBRUEsVUFBTVksTUFBOEIsR0FBRztBQUNyQ1AsUUFBQUEsSUFBSSxFQUFFLG1CQUQrQjtBQUVyQ1EsUUFBQUEsUUFBUSxFQUFFO0FBRjJCLE9BQXZDOztBQUtBLFVBQUlkLGFBQWEsQ0FBQ0ksTUFBZCxLQUF5QixDQUE3QixFQUFnQztBQUM5QjtBQUNBLGVBQU9TLE1BQVA7QUFDRDs7QUFFRCxVQUFNRSxPQUFPLEdBQUdmLGFBQWEsQ0FBQyxDQUFELENBQTdCO0FBQ0EsVUFBTWdCLE9BQU8sR0FBR0wsb0JBQW9CLENBQUNNLFNBQXJDO0FBRUEsVUFBTUMsT0FBTyxHQUFHLEtBQUtDLGtCQUFMLENBQXdCSixPQUF4QixFQUFpQ0MsT0FBakMsRUFBMENKLFVBQTFDLENBQWhCOztBQUNBLFVBQUlNLE9BQUosRUFBYTtBQUNYTCxRQUFBQSxNQUFNLENBQUNDLFFBQVAsQ0FBZ0JNLElBQWhCLENBQXFCO0FBQ25CZCxVQUFBQSxJQUFJLEVBQUUsU0FEYTtBQUVuQmUsVUFBQUEsVUFBVSxFQUFFO0FBQ1ZDLFlBQUFBLFNBQVMsRUFBRTtBQURELFdBRk87QUFLbkJqQixVQUFBQSxRQUFRLEVBQUVhLE9BQU8sQ0FBQ2I7QUFMQyxTQUFyQjtBQU9EOztBQUVELGFBQU9RLE1BQVA7QUFDRDs7O3VDQUVrQlUsTSxFQUFrQkMsTSxFQUFrQlosVSxFQUFzQztBQUMzRixhQUFPLElBQVA7QUFDRDs7O3NDQUVpQmYsSyxFQUF5QkMsSyxFQUFxQztBQUM5RUEsTUFBQUEsS0FBSyxDQUFDMkIsY0FBTixDQUFxQixNQUFyQjtBQUNEOzs7O0VBMURzQ0Msb0MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAZmxvd1xuXG5pbXBvcnQgdHlwZSB7IENsaWNrRXZlbnQsIFBvaW50ZXJNb3ZlRXZlbnQsIE1vZGVQcm9wcywgR3VpZGVGZWF0dXJlQ29sbGVjdGlvbiB9IGZyb20gJy4uL3R5cGVzLmpzJztcbmltcG9ydCB0eXBlIHsgUG9seWdvbiwgRmVhdHVyZUNvbGxlY3Rpb24sIEZlYXR1cmVPZiwgUG9zaXRpb24gfSBmcm9tICcuLi9nZW9qc29uLXR5cGVzLmpzJztcbmltcG9ydCB7IEJhc2VHZW9Kc29uRWRpdE1vZGUgfSBmcm9tICcuL2dlb2pzb24tZWRpdC1tb2RlLmpzJztcblxuZXhwb3J0IGNsYXNzIFR3b0NsaWNrUG9seWdvbk1vZGUgZXh0ZW5kcyBCYXNlR2VvSnNvbkVkaXRNb2RlIHtcbiAgaGFuZGxlQ2xpY2soZXZlbnQ6IENsaWNrRXZlbnQsIHByb3BzOiBNb2RlUHJvcHM8RmVhdHVyZUNvbGxlY3Rpb24+KSB7XG4gICAgdGhpcy5hZGRDbGlja1NlcXVlbmNlKGV2ZW50KTtcbiAgICBjb25zdCBjbGlja1NlcXVlbmNlID0gdGhpcy5nZXRDbGlja1NlcXVlbmNlKCk7XG4gICAgY29uc3QgdGVudGF0aXZlRmVhdHVyZSA9IHRoaXMuZ2V0VGVudGF0aXZlR3VpZGUocHJvcHMpO1xuXG4gICAgaWYgKFxuICAgICAgY2xpY2tTZXF1ZW5jZS5sZW5ndGggPiAxICYmXG4gICAgICB0ZW50YXRpdmVGZWF0dXJlICYmXG4gICAgICB0ZW50YXRpdmVGZWF0dXJlLmdlb21ldHJ5LnR5cGUgPT09ICdQb2x5Z29uJ1xuICAgICkge1xuICAgICAgY29uc3QgZWRpdEFjdGlvbiA9IHRoaXMuZ2V0QWRkRmVhdHVyZU9yQm9vbGVhblBvbHlnb25BY3Rpb24odGVudGF0aXZlRmVhdHVyZS5nZW9tZXRyeSwgcHJvcHMpO1xuXG4gICAgICB0aGlzLnJlc2V0Q2xpY2tTZXF1ZW5jZSgpO1xuXG4gICAgICBpZiAoZWRpdEFjdGlvbikge1xuICAgICAgICBwcm9wcy5vbkVkaXQoZWRpdEFjdGlvbik7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZ2V0R3VpZGVzKHByb3BzOiBNb2RlUHJvcHM8RmVhdHVyZUNvbGxlY3Rpb24+KTogR3VpZGVGZWF0dXJlQ29sbGVjdGlvbiB7XG4gICAgY29uc3QgeyBsYXN0UG9pbnRlck1vdmVFdmVudCwgbW9kZUNvbmZpZyB9ID0gcHJvcHM7XG4gICAgY29uc3QgY2xpY2tTZXF1ZW5jZSA9IHRoaXMuZ2V0Q2xpY2tTZXF1ZW5jZSgpO1xuXG4gICAgY29uc3QgZ3VpZGVzOiBHdWlkZUZlYXR1cmVDb2xsZWN0aW9uID0ge1xuICAgICAgdHlwZTogJ0ZlYXR1cmVDb2xsZWN0aW9uJyxcbiAgICAgIGZlYXR1cmVzOiBbXVxuICAgIH07XG5cbiAgICBpZiAoY2xpY2tTZXF1ZW5jZS5sZW5ndGggPT09IDApIHtcbiAgICAgIC8vIG5vdGhpbmcgdG8gZG8geWV0XG4gICAgICByZXR1cm4gZ3VpZGVzO1xuICAgIH1cblxuICAgIGNvbnN0IGNvcm5lcjEgPSBjbGlja1NlcXVlbmNlWzBdO1xuICAgIGNvbnN0IGNvcm5lcjIgPSBsYXN0UG9pbnRlck1vdmVFdmVudC5tYXBDb29yZHM7XG5cbiAgICBjb25zdCBwb2x5Z29uID0gdGhpcy5nZXRUd29DbGlja1BvbHlnb24oY29ybmVyMSwgY29ybmVyMiwgbW9kZUNvbmZpZyk7XG4gICAgaWYgKHBvbHlnb24pIHtcbiAgICAgIGd1aWRlcy5mZWF0dXJlcy5wdXNoKHtcbiAgICAgICAgdHlwZTogJ0ZlYXR1cmUnLFxuICAgICAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICAgICAgZ3VpZGVUeXBlOiAndGVudGF0aXZlJ1xuICAgICAgICB9LFxuICAgICAgICBnZW9tZXRyeTogcG9seWdvbi5nZW9tZXRyeVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGd1aWRlcztcbiAgfVxuXG4gIGdldFR3b0NsaWNrUG9seWdvbihjb29yZDE6IFBvc2l0aW9uLCBjb29yZDI6IFBvc2l0aW9uLCBtb2RlQ29uZmlnOiBhbnkpOiA/RmVhdHVyZU9mPFBvbHlnb24+IHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGhhbmRsZVBvaW50ZXJNb3ZlKGV2ZW50OiBQb2ludGVyTW92ZUV2ZW50LCBwcm9wczogTW9kZVByb3BzPEZlYXR1cmVDb2xsZWN0aW9uPikge1xuICAgIHByb3BzLm9uVXBkYXRlQ3Vyc29yKCdjZWxsJyk7XG4gIH1cbn1cbiJdfQ==